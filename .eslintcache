[{"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/redux/reducers.js":"1","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Courses/StudentCourseQuiz.js":"2","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Milestones/MilestonesMain.js":"3","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/FileManager/FileManagerMain.js":"4","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Invoices/InvoicesMain.js":"5","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Support/SupportMain.js":"6","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Footer.js":"7","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Plans/PlanPanel.js":"8","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/InputDateFormatter.js":"9","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Courses/CoursesCard.js":"10","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Profile/ProfileReviewsView.js":"11","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Profile/ProfileFeedCreate.js":"12","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Statistics/GroupStats.js":"13","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Profile/ProfileAwardsView.js":"14","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Profile/ProfileFeedView.js":"15","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Forums/ForumSinglePostBlock.js":"16","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Students/StudentOverview.js":"17","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Courses.js":"18","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Messages/StudentMessagesMain.js":"19","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Students/StudentsMain.js":"20","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Milestones/MilestoneEdit.js":"21","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Events/EventEdit.js":"22","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Events/EventView.js":"23","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Invoices/InvoiceView.js":"24","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Forums/ForumsMain.js":"25","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/RandomString.js":"26","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Dash/Achievement.js":"27","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Dash/DashFooter.js":"28","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Profile/ProfileGallery.js":"29","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Groups/GroupAboutEdit.js":"30","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Statistics/EventStats.js":"31","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Profile/ProfileAwardsEdit.js":"32","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Home/HomeCoursesCard.js":"33","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/redux/actions.js":"34","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Login.js":"35","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Groups/GroupsPage.js":"36","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Milestones/MilestoneAssign.js":"37","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Articles/ArticlesMain.js":"38","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Settings/SettingsMain.js":"39","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Footer.js":"40","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Dash/AnnouncementBox.js":"41","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/utils/tools.js":"42","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Profile/ProfileFeedEdit.js":"43","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Invoices/InvoiceBlock.js":"44","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Groups/GroupFeedEdit.js":"45","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Profile/ProfileAboutView.js":"46","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/TeacherDash.js":"47","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Assignments/StudentAssignmentView.js":"48","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Assignments/AssignmentView.js":"49","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Messages/MessageThreadView.js":"50","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/GetToday.js":"51","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/utils/firebase.js":"52","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Profile/ProfileAwardsView.js":"53","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Profile/ProfileAwardsEdit.js":"54","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Dash/TopBar.js":"55","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/App.js":"56","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/index.js":"57","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Profile/StudentProfileMain.js":"58","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Messages/StudentMessageThreadView.js":"59","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Events/EventNew.js":"60","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Groups/GroupAboutView.js":"61","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Statistics/StudentStats.js":"62","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Statistics/StorageStats.js":"63","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Profile/ProfileFeedEdit.js":"64","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Courses/StudentCoursePreview.js":"65","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Milestones/MilestoneView.js":"66","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Profile/ProfileAboutView.js":"67","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Dash/RecentActivity.js":"68","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Dash/UpcomingEvents.js":"69","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Articles/ArticleBlock.js":"70","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Groups/GroupFeedView.js":"71","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Courses/StudentCourseLesson.js":"72","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Assignments/AssignmentEdit.js":"73","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Statistics/StatisticsMain.js":"74","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Courses/CoursesDeck.js":"75","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/FirebaseDate.js":"76","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Profile/ProfileAboutEdit.js":"77","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Courses/StudentCourseExercise.js":"78","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Assignments/AssignmentNew.js":"79","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Profile/ProfileAboutEdit.js":"80","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Assignments/StudentAssignmentsMain.js":"81","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Events/EventsMain.js":"82","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Home/HomeCoursesDeck.js":"83","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Tutorials/TutorialsMain.js":"84","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/TopBar.js":"85","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Home.js":"86","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Dash/RecentInvoices.js":"87","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Courses/StudentCoursesMain.js":"88","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Assignments/AssignmentsMain.js":"89","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Dash/SimpleStats.js":"90","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/MiscComponents/Notice.js":"91","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/StudentDash.js":"92","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Connections/ConnectionsMain.js":"93","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Statistics/ForumStats.js":"94","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Profile/ProfileFeedView.js":"95","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Messages/MessagesMain.js":"96","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Groups/GroupMembersView.js":"97","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Dash/Earnings.js":"98","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Plans.js":"99","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Courses/CoursesMain.js":"100","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Courses/WizardNewCourse.js":"101","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/FileUpload.js":"102","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Courses/WizardNewLesson.js":"103","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Courses/WizardNewQuiz.js":"104"},{"size":35724,"mtime":1619109458666,"results":"105","hashOfConfig":"106"},{"size":9820,"mtime":1616518788000,"results":"107","hashOfConfig":"106"},{"size":4898,"mtime":1618332446000,"results":"108","hashOfConfig":"106"},{"size":381,"mtime":1611098584000,"results":"109","hashOfConfig":"106"},{"size":1939,"mtime":1612304304000,"results":"110","hashOfConfig":"106"},{"size":372,"mtime":1611098940000,"results":"111","hashOfConfig":"106"},{"size":546,"mtime":1610060462000,"results":"112","hashOfConfig":"106"},{"size":516,"mtime":1610149688000,"results":"113","hashOfConfig":"106"},{"size":330,"mtime":1613170976000,"results":"114","hashOfConfig":"106"},{"size":532,"mtime":1610137072000,"results":"115","hashOfConfig":"106"},{"size":2790,"mtime":1617830050000,"results":"116","hashOfConfig":"106"},{"size":3190,"mtime":1617837084000,"results":"117","hashOfConfig":"106"},{"size":994,"mtime":1611252184000,"results":"118","hashOfConfig":"106"},{"size":2798,"mtime":1615659298000,"results":"119","hashOfConfig":"106"},{"size":4313,"mtime":1615413972000,"results":"120","hashOfConfig":"106"},{"size":887,"mtime":1612127232000,"results":"121","hashOfConfig":"106"},{"size":14962,"mtime":1619064845259,"results":"122","hashOfConfig":"106"},{"size":1420,"mtime":1612132370000,"results":"123","hashOfConfig":"106"},{"size":6706,"mtime":1617233350000,"results":"124","hashOfConfig":"106"},{"size":8671,"mtime":1619109768105,"results":"125","hashOfConfig":"106"},{"size":2680,"mtime":1617747182000,"results":"126","hashOfConfig":"106"},{"size":4936,"mtime":1617571780000,"results":"127","hashOfConfig":"106"},{"size":1452,"mtime":1617568326000,"results":"128","hashOfConfig":"106"},{"size":3473,"mtime":1612306040000,"results":"129","hashOfConfig":"106"},{"size":3424,"mtime":1612222558000,"results":"130","hashOfConfig":"106"},{"size":106,"mtime":1613175542000,"results":"131","hashOfConfig":"106"},{"size":220,"mtime":1610317768000,"results":"132","hashOfConfig":"106"},{"size":330,"mtime":1617706170000,"results":"133","hashOfConfig":"106"},{"size":158,"mtime":1611255536000,"results":"134","hashOfConfig":"106"},{"size":1500,"mtime":1614100694000,"results":"135","hashOfConfig":"106"},{"size":994,"mtime":1611252302000,"results":"136","hashOfConfig":"106"},{"size":11428,"mtime":1615673918000,"results":"137","hashOfConfig":"106"},{"size":443,"mtime":1610059478000,"results":"138","hashOfConfig":"106"},{"size":17991,"mtime":1619109461551,"results":"139","hashOfConfig":"106"},{"size":6637,"mtime":1617777686000,"results":"140","hashOfConfig":"106"},{"size":5106,"mtime":1614103304000,"results":"141","hashOfConfig":"106"},{"size":3532,"mtime":1618334484000,"results":"142","hashOfConfig":"106"},{"size":1204,"mtime":1611792358000,"results":"143","hashOfConfig":"106"},{"size":374,"mtime":1611098776000,"results":"144","hashOfConfig":"106"},{"size":261,"mtime":1619107169603,"results":"145","hashOfConfig":"106"},{"size":229,"mtime":1610317410000,"results":"146","hashOfConfig":"106"},{"size":197,"mtime":1612831364000,"results":"147","hashOfConfig":"106"},{"size":3481,"mtime":1617837008000,"results":"148","hashOfConfig":"106"},{"size":468,"mtime":1612301776000,"results":"149","hashOfConfig":"106"},{"size":1842,"mtime":1614099488000,"results":"150","hashOfConfig":"106"},{"size":2900,"mtime":1615420258000,"results":"151","hashOfConfig":"106"},{"size":3770,"mtime":1619019724630,"results":"152","hashOfConfig":"106"},{"size":6755,"mtime":1617128710000,"results":"153","hashOfConfig":"106"},{"size":6071,"mtime":1617125994000,"results":"154","hashOfConfig":"106"},{"size":4722,"mtime":1617908760000,"results":"155","hashOfConfig":"106"},{"size":142,"mtime":1617401924000,"results":"156","hashOfConfig":"106"},{"size":1452,"mtime":1618346764000,"results":"157","hashOfConfig":"106"},{"size":3192,"mtime":1617829824000,"results":"158","hashOfConfig":"106"},{"size":12301,"mtime":1617829798000,"results":"159","hashOfConfig":"106"},{"size":4669,"mtime":1619110516879,"results":"160","hashOfConfig":"106"},{"size":34793,"mtime":1619210206548,"results":"161","hashOfConfig":"106"},{"size":356,"mtime":1610057812000,"results":"162","hashOfConfig":"106"},{"size":2693,"mtime":1615575644000,"results":"163","hashOfConfig":"106"},{"size":3902,"mtime":1617232042000,"results":"164","hashOfConfig":"106"},{"size":3139,"mtime":1617573184000,"results":"165","hashOfConfig":"106"},{"size":788,"mtime":1614100210000,"results":"166","hashOfConfig":"106"},{"size":1009,"mtime":1611184392000,"results":"167","hashOfConfig":"106"},{"size":1033,"mtime":1611165286000,"results":"168","hashOfConfig":"106"},{"size":1671,"mtime":1615415482000,"results":"169","hashOfConfig":"106"},{"size":10358,"mtime":1616518360000,"results":"170","hashOfConfig":"106"},{"size":4088,"mtime":1617747588000,"results":"171","hashOfConfig":"106"},{"size":4178,"mtime":1617868618000,"results":"172","hashOfConfig":"106"},{"size":227,"mtime":1610317616000,"results":"173","hashOfConfig":"106"},{"size":227,"mtime":1610317810000,"results":"174","hashOfConfig":"106"},{"size":318,"mtime":1611792400000,"results":"175","hashOfConfig":"106"},{"size":3994,"mtime":1613943452000,"results":"176","hashOfConfig":"106"},{"size":4503,"mtime":1615963134000,"results":"177","hashOfConfig":"106"},{"size":6695,"mtime":1617087312000,"results":"178","hashOfConfig":"106"},{"size":1810,"mtime":1611162374000,"results":"179","hashOfConfig":"106"},{"size":402,"mtime":1610137228000,"results":"180","hashOfConfig":"106"},{"size":279,"mtime":1615666200000,"results":"181","hashOfConfig":"106"},{"size":12649,"mtime":1617869084000,"results":"182","hashOfConfig":"106"},{"size":3693,"mtime":1616091624000,"results":"183","hashOfConfig":"106"},{"size":7569,"mtime":1617088784000,"results":"184","hashOfConfig":"106"},{"size":9398,"mtime":1615505326000,"results":"185","hashOfConfig":"106"},{"size":3388,"mtime":1617558562000,"results":"186","hashOfConfig":"106"},{"size":10129,"mtime":1617573612000,"results":"187","hashOfConfig":"106"},{"size":841,"mtime":1610059896000,"results":"188","hashOfConfig":"106"},{"size":376,"mtime":1611098846000,"results":"189","hashOfConfig":"106"},{"size":8899,"mtime":1619110478325,"results":"190","hashOfConfig":"106"},{"size":3710,"mtime":1615312832000,"results":"191","hashOfConfig":"106"},{"size":227,"mtime":1610317656000,"results":"192","hashOfConfig":"106"},{"size":3947,"mtime":1615677268000,"results":"193","hashOfConfig":"106"},{"size":2984,"mtime":1617086226000,"results":"194","hashOfConfig":"106"},{"size":221,"mtime":1610317554000,"results":"195","hashOfConfig":"106"},{"size":426,"mtime":1617121720000,"results":"196","hashOfConfig":"106"},{"size":1426,"mtime":1619106925900,"results":"197","hashOfConfig":"106"},{"size":521,"mtime":1619018886827,"results":"198","hashOfConfig":"106"},{"size":1005,"mtime":1611252314000,"results":"199","hashOfConfig":"106"},{"size":4307,"mtime":1617836218000,"results":"200","hashOfConfig":"106"},{"size":7454,"mtime":1617177826000,"results":"201","hashOfConfig":"106"},{"size":1519,"mtime":1614101380000,"results":"202","hashOfConfig":"106"},{"size":214,"mtime":1610317724000,"results":"203","hashOfConfig":"106"},{"size":3165,"mtime":1610172378000,"results":"204","hashOfConfig":"106"},{"size":1246,"mtime":1619198763959,"results":"205","hashOfConfig":"106"},{"size":2039,"mtime":1619204791659,"results":"206","hashOfConfig":"106"},{"size":1593,"mtime":1619203458871,"results":"207","hashOfConfig":"106"},{"size":3020,"mtime":1619210151575,"results":"208","hashOfConfig":"106"},{"size":1947,"mtime":1619226229598,"results":"209","hashOfConfig":"106"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fkqrla",{"filePath":"212","messages":"213","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"215"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"219"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"225"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"215"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"245"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"249"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"219"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"256"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"256"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"271"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"228"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"278"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"282"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"256"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"215"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"219"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"249"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"228"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"215"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"233"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"249"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"219"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"335","messages":"336","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"225"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"228"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"256"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"238"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"233"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"307"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"256"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"307"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"215"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"219"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"256"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"215"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"307"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"233"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"225"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"215"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"238"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"404","messages":"405","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"219"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"215"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"215"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"228"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"424","messages":"425","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"215"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"429","messages":"430","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"228"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"228"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"443","messages":"444","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"307"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"307"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"457","messages":"458","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"233"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"233"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"465","messages":"466","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"233"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"474","messages":"475","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"476","messages":"477","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"478","messages":"479","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"480","messages":"481","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/redux/reducers.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Courses/StudentCourseQuiz.js",["482","483","484","485"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  storeStudentQuizResultsAction,\n  toggleStudentQuizResultsAction,\n  storeCurrentCourseComponentAction,\n  storeStudentNextLessonAction,\n} from \"../../../redux/actions\";\nimport {\n  courses_Collection,\n  students_Collection,\n} from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nimport Footer from \"../Footer\";\nimport RandomString from \"../../RandomString\";\nimport GetToday from \"../../GetToday\";\n\nexport default function StudentCourseQuiz() {\n  const studentAuthID = useSelector((state) => state.storeStudentAuthIDReducer);\n  const user = useSelector((state) => state.storeStudentUserDataReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  //   State\n  const toggleQuizResults = useSelector(\n    (state) => state.toggleStudentQuizResultsReducer\n  );\n\n  const course = useSelector((state) => state.storeStudentSingleCourseReducer);\n\n  const quiz = useSelector((state) => state.storeStudentNextQuizReducer);\n  const results = useSelector((state) => state.storeStudentQuizResultsReducer);\n\n  //   HANDLE\n  const handleQuizComponents = () => {\n    if (quiz.Components) {\n      return (\n        <div>\n          {quiz.Components.map((q, i) => {\n            if (q.Type === \"multiple\") {\n              return (\n                <div key={i}>\n                  <h3>{q.Question}</h3>\n                  {q.Options.map((opt, a) => {\n                    return (\n                      <div>\n                        <input\n                          type=\"radio\"\n                          id={`comp${i}Opt${a}`}\n                          name={`comp${i}`}\n                          value={opt}\n                        />\n                        <label>{opt}</label>\n                        <br />\n                      </div>\n                    );\n                  })}\n                </div>\n              );\n            } else if (q.Type === \"short\") {\n              return (\n                <div key={i}>\n                  <h3>{q.Text}</h3>\n                  <p>Please type your response below:</p>\n                  <textarea id={`taShortRes${i}`}></textarea>\n                </div>\n              );\n            } else if (q.Type === \"long\") {\n              return (\n                <div key={i}>\n                  <h3>{q.Text}</h3>\n                  <p>Please type your response below:</p>\n                  <textarea id={`taLongRes${i}`}></textarea>\n                </div>\n              );\n            } else if (q.Type === \"boolean\") {\n              return (\n                <div key={i}>\n                  <h3>{q.Statement}</h3>\n                  <input\n                    type=\"radio\"\n                    id={`raTrue${i}`}\n                    name={`raBool${i}`}\n                    value=\"true\"\n                  />\n                  <label>True</label>\n                  <br />\n                  <input\n                    type=\"radio\"\n                    id={`raFalse${i}`}\n                    name={`raBool${i}`}\n                    value=\"false\"\n                  />\n                  <label>False</label>\n                  <br />\n                </div>\n              );\n            }\n          })}\n          <br />\n          <button onClick={calcResults}>Submit</button>\n        </div>\n      );\n    }\n  };\n  const handleResults = () => {\n    //   Display results\n    return (\n      <div>\n        {results.map((re, i) => {\n          if (re.Type === \"multiple\") {\n            return (\n              <div key={i}>\n                <h3>\n                  {i + 1}. {quiz.Components[i].Question}\n                </h3>\n                <p>Your Answer: {re.Given}</p>\n                <p>Correct Answer: {re.Answer}</p>\n              </div>\n            );\n          } else if (re.Type === \"short\") {\n            return (\n              <div key={i}>\n                <h3>\n                  {i + 1}. {quiz.Components[i].Text}\n                </h3>\n                <p>Your Answer: {re.Given}</p>\n                <p>Correct Answer: {re.Answer}</p>\n              </div>\n            );\n          } else if (re.Type === \"long\") {\n            return (\n              <div key={i}>\n                <h3>\n                  {i + 1}. {quiz.Components[i].Text}\n                </h3>\n                <p>Your Answer: {re.Given}</p>\n                <p>Correct Answer: {re.Answer}</p>\n              </div>\n            );\n          } else if (re.Type === \"boolean\") {\n            return (\n              <div key={i}>\n                <h3>\n                  {i + 1}. {quiz.Components[i].Statement}\n                </h3>\n                <p>Your Answer: {re.Given}</p>\n                <p>Correct Answer: {re.Answer}</p>\n              </div>\n            );\n          }\n        })}\n        <br />\n        <button onClick={navLesson}>Finish</button>\n      </div>\n    );\n  };\n\n  //   CALC\n  const calcResults = () => {\n    let results = [];\n    quiz.Components.forEach((comp, i) => {\n      if (comp.Type === \"multiple\") {\n        const compLength = comp.Options.length;\n        const answer = comp.Answer;\n\n        for (let a = 0; a < compLength; a = a + 1) {\n          const radioChecked = document.querySelector(`#comp${i}Opt${a}`)\n            .checked;\n          const radioValue = document.querySelector(`#comp${i}Opt${a}`).value;\n\n          if (radioChecked) {\n            //   Insert into results\n            let thing = \"\";\n            if (answer === radioValue) {\n              thing = \"Correct\";\n            } else {\n              thing = \"Incorrect\";\n            }\n            results.push({\n              Answer: answer,\n              Given: radioValue,\n              Result: thing,\n              Type: \"multiple\",\n            });\n          }\n        }\n      } else if (comp.Type === \"short\") {\n        const answer = comp.Answer;\n        const shortRes = document.querySelector(`#taShortRes${i}`).value;\n\n        results.push({\n          Answer: answer,\n          Given: shortRes,\n          Result: 'Pending',\n          Type: \"short\",\n        });\n      } else if (comp.Type === \"long\") {\n        const answer = comp.Answer;\n        const longRes = document.querySelector(`#taLongRes${i}`).value;\n\n        results.push({\n          Answer: answer,\n          Given: longRes,\n          Result: 'Pending',\n          Type: \"long\",\n        });\n      } else if (comp.Type === \"boolean\") {\n        const answer = comp.Answer;\n        const trueRes = document.querySelector(`#raTrue${i}`).checked;\n        const falseRes = document.querySelector(`#raFalse${i}`).checked;\n\n        if (trueRes) {\n          if (answer === \"true\") {\n            // Correct\n            results.push({\n              Answer: answer,\n              Given: \"true\",\n              Result: \"Correct\",\n              Type: \"boolean\",\n            });\n          } else {\n            // Incorrect\n            results.push({\n              Answer: answer,\n              Given: \"true\",\n              Result: \"Incorrect\",\n              Type: \"boolean\",\n            });\n          }\n        } else if (falseRes) {\n          if (answer === \"false\") {\n            // Correct\n            results.push({\n              Answer: answer,\n              Given: \"false\",\n              Result: \"Correct\",\n              Type: \"boolean\",\n            });\n          } else {\n            // Incorrect\n            results.push({\n              Answer: answer,\n              Given: \"false\",\n              Result: \"Incorrect\",\n              Type: \"boolean\",\n            });\n          }\n        }\n      }\n    });\n\n  \n\n    // Save results in DB\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const quizID = `Quiz${rand1}${rand2}`;\n    results.forEach((result) => {\n      const rand3 = RandomString();\n      const rand4 = RandomString();\n      const resultID = `Result${rand3}${rand4}`;\n\n      students_Collection\n        .doc(studentAuthID)\n        .collection(\"Quizzes\")\n        .doc(quizID)\n        .collection(\"Results\")\n        .doc(resultID)\n        .set({\n          Answer: result.Answer,\n          Given: result.Given,\n          Result: result.Result,\n        })\n        .catch((err) => console.log(err));\n    });\n\n\n      // Calculate Results\n      dispatch(toggleStudentQuizResultsAction());\n      dispatch(storeStudentQuizResultsAction(results));\n  };\n\n  //   NAV\n  const navLesson = () => {\n    const nextOrder = quiz.Order + 1;\n\n    courses_Collection\n      .doc(course.id)\n      .collection(\"Lessons\")\n      .get()\n      .then((snapshot) => {\n        const lessonsList = firebaseLooper(snapshot);\n        lessonsList.forEach((less) => {\n          if (less.Order === nextOrder) {\n            dispatch(storeCurrentCourseComponentAction(less));\n            dispatch(storeStudentNextLessonAction(less));\n          }\n        });\n      })\n      .catch((err) => console.log(err));\n\n    //   Save progress to DB\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const progID = `Prog${rand1}${rand2}`;\n\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"CourseProgress\")\n      .doc(progID)\n      .set({\n        CompName: quiz.Name,\n        CompType: \"Quiz\",\n        CourseName: course.Name,\n        Date: GetToday(),\n        Order: quiz.Order,\n      })\n      .catch((err) => console.log(err));\n\n    // Navigate to Lesson\n    history.push(\"/student-course-lesson\");\n  };\n\n  useEffect(() => {\n    if (!studentAuthID) {\n      history.push(\"/studentdash\");\n      return;\n    }\n  }, []);\n  return (\n    <div>\n      <div>\n        <h1>{quiz.Name}</h1>\n      </div>\n\n      <hr />\n      <div>{toggleQuizResults ? handleResults() : handleQuizComponents()}</div>\n\n      {/* Footer */}\n      <div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n",["486","487"],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Milestones/MilestonesMain.js",["488"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport DashFooter from \"../Dash/DashFooter\";\nimport { teachers_Collection } from \"../../../utils/firebase\";\nimport {\n  storeTeacherMilestonesGeneralInfoAction,\n  storeTeacherSingleMilestoneSegAction,\n  toggleNewSegmentFormAction,\n} from \"../../../redux/actions\";\nimport { firebaseLooper } from \"../../../utils/tools\";\nimport RandomString from \"../../RandomString\";\n\nexport default function MilestonesMain() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const toggleNewSegmentForm = useSelector(\n    (state) => state.toggleNewSegmentFormReducer\n  );\n\n  const milestones = useSelector(\n    (state) => state.storeTeacherMilestonesGeneralInfoReducer\n  );\n\n  // GET\n  const getAllMilestones = () => {\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Milestones\")\n      .get()\n      .then((snapshot) => {\n        const milestoneData = firebaseLooper(snapshot);\n        dispatch(storeTeacherMilestonesGeneralInfoAction(milestoneData));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  // HANDLE\n  const handleMilestoneSegList = () => {\n    return milestones.map((mile, i) => {\n      return (\n        <div key={i}>\n          <h3>{mile.Name}</h3>\n          <button id={mile.id} onClick={navMilestoneView}>\n            View\n          </button>\n          <button onClick={navMilestoneAssign} id={mile.id}>\n            Assign\n          </button>\n        </div>\n      );\n    });\n  };\n  const handleNewSegmentForm = () => {\n    return (\n      <div>\n        <h3>Segment Name:</h3>\n        <p>\n          The Segment Name is the title that describes what kind of tasks the\n          student will need to complete.\n        </p>\n        <input id=\"tbSegName\" type=\"text\" placeholder=\"Segment Name\" />\n        <button onClick={createSeg}>Create</button>\n        <hr />\n      </div>\n    );\n  };\n\n  // POST\n  const createSeg = () => {\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const segID = `Seg${rand1}${rand2}`;\n\n    const segName = document.querySelector(\"#tbSegName\").value;\n\n    // Save to DB\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Milestones\")\n      .doc(segID)\n      .set({\n        AssigedTo: [],\n        Name: segName,\n      })\n      .catch((err) => console.log(err));\n\n    // Dispatch\n    const tempObj = {\n      id: segID,\n      AssigedTo: [],\n      Name: segName,\n      Tasks: [],\n    };\n\n    dispatch(storeTeacherSingleMilestoneSegAction(tempObj));\n    history.push(\"/teacher-milestone-view\");\n  };\n\n  // NAV\n  const navMilestoneView = (event) => {\n    const mileID = event.target.getAttribute(\"id\");\n\n    milestones.forEach((mile) => {\n      if (mile.id === mileID) {\n        teachers_Collection\n          .doc(teacherAuthID)\n          .collection(\"Milestones\")\n          .doc(mileID)\n          .collection(\"MilestoneTasks\")\n          .get()\n          .then((snapshot) => {\n            const tasks = firebaseLooper(snapshot);\n            const tempObj = {\n              ...mile,\n              Tasks: tasks,\n            };\n            dispatch(storeTeacherSingleMilestoneSegAction(tempObj));\n          })\n          .catch((err) => console.log(err));\n\n        history.push(\"/teacher-milestone-view\");\n      }\n    });\n  };\n  const navMilestoneAssign = (event) => {\n    const mileID = event.target.getAttribute(\"id\");\n\n    milestones.forEach((mile) => {\n      if (mile.id === mileID) {\n        teachers_Collection\n          .doc(teacherAuthID)\n          .collection(\"Milestones\")\n          .doc(mileID)\n          .collection(\"MilestoneTasks\")\n          .get()\n          .then((snapshot) => {\n            const tasks = firebaseLooper(snapshot);\n            const tempObj = {\n              ...mile,\n              Tasks: tasks,\n            };\n            dispatch(storeTeacherSingleMilestoneSegAction(tempObj));\n          })\n          .catch((err) => console.log(err));\n      }\n    });\n\n    history.push(\"/teacher-milestone-assign\");\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n\n    getAllMilestones();\n  }, []);\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      <div className=\"content\">\n        <div>\n          <h1>Milestones</h1>\n          <button onClick={() => dispatch(toggleNewSegmentFormAction())}>\n            {toggleNewSegmentForm ? \"Close\" : \"Create Milestone Segment\"}\n          </button>\n          {toggleNewSegmentForm ? handleNewSegmentForm() : null}\n        </div>\n        <div>{handleMilestoneSegList()}</div>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n",["489","490"],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/FileManager/FileManagerMain.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Invoices/InvoicesMain.js",["491"],"import React, { useEffect } from \"react\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport InvoiceBlock from \"./InvoiceBlock\";\nimport DashFooter from \"../Dash/DashFooter\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport {storeSingleInvoiceAction} from '../../../redux/actions';\n\n\nexport default function InvoicesMain() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch()\n\n  const invoiceState = useSelector(\n    (state) => state.storeTeacherInvoicesGeneralInfoReducer\n  );\n\n  const viewSingleInvoice = (event) => {\n    const invoiceNo = event.target.getAttribute('id');\n    invoiceState.forEach(inv => {\n      if (inv.No === invoiceNo) {\n        dispatch(storeSingleInvoiceAction(inv));\n        history.push('/teacher-invoice-view');\n        return;\n      }\n    })\n  }\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n  }, []);\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      {/* Content */}\n      <div>\n        <div>\n          <input id=\"tbInvoiceSearch\" type=\"text\" placeholder=\"Search\" />\n          <button>Create New Invoice</button>\n        </div>\n\n        <div>\n          {invoiceState.map((inv, i) => {\n            return (\n              <div>\n                <InvoiceBlock\n                  key={i}\n                  no={inv.No}\n                  status={inv.Status}\n                  balance={inv.Balance}\n                  name={inv.Name}\n                  created={inv.Created}\n                  due={inv.Due}\n                />\n                <button id={inv.No} onClick={viewSingleInvoice}>View</button>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n",["492","493"],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Support/SupportMain.js",[],["494","495"],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Footer.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Plans/PlanPanel.js",[],["496","497"],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/InputDateFormatter.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Courses/CoursesCard.js",[],["498","499"],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Profile/ProfileReviewsView.js",["500"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { teachers_Collection, users_Collection } from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\nimport { storeReviewListAction } from \"../../../redux/actions\";\n\nexport default function ProfileReviewsView() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const reviews = useSelector((state) => state.storeReviewListReducer);\n\n  const getAllReviews = () => {\n    let newReviewArray = [];\n    const reviews_Collection = teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"Reviews\")\n      .collection(\"ReviewBlocks\");\n    reviews_Collection\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n\n        data.forEach((d) => {\n          let fullName = \"\";\n\n          users_Collection\n            .where(\"AuthID\", \"==\", d.Reviewer)\n            .get()\n            .then((snapshot) => {\n              const userData = firebaseLooper(snapshot);\n              fullName = `${userData[0].FirstName} ${userData[0].LastName}`;\n              d = {\n                ...d,\n                FullName: fullName,\n              };\n              newReviewArray.push(d);\n            })\n            .catch((err) => console.log(err));\n        });\n        dispatch(storeReviewListAction(newReviewArray));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  // HANDLE\n  const handleReviewList = () => {\n    return reviews.map((rev, i) => {\n      return (\n        <div key={i}>\n          <h3>{rev.Rating}</h3>\n          <p>{rev.FullName}</p>\n          <p>{rev.Review}</p>\n          <p>{rev.Date.toDate().toString().substr(4, 11)}</p>\n          <hr />\n        </div>\n      );\n    });\n  };\n  const handleCurrPage = () => {\n    let feedBtn = document.querySelector(\"#link-feed\");\n    feedBtn.classList.remove(\"navy-back\");\n\n    let aboutBtn = document.querySelector(\"#link-about\");\n    aboutBtn.classList.remove(\"navy-back\");\n\n    let awardsBtn = document.querySelector(\"#link-awards\");\n    awardsBtn.classList.remove(\"navy-back\");\n\n    let galleryBtn = document.querySelector(\"#link-gallery\");\n    galleryBtn.classList.remove(\"navy-back\");\n\n    let reviewsBtn = document.querySelector(\"#link-reviews\");\n    reviewsBtn.classList.add(\"navy-back\");\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n    getAllReviews();\n    handleCurrPage();\n  }, []);\n  return (\n    <div>\n      {/* Overall Rating */}\n      <div></div>\n\n      {/* Review List */}\n      <div>{handleReviewList()}</div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Profile/ProfileFeedCreate.js",["501"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { storeProfileFeedPostDataAction } from \"../../../redux/actions\";\nimport { teachers_Collection } from \"../../../utils/firebase\";\nimport GetToday from \"../../GetToday\";\n\nimport \"./Profile.css\";\n\nexport default function ProfileFeedCreate() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const allPostsState = useSelector(\n    (state) => state.storeProfileFeedPostDataReducer\n  );\n\n  // POST\n  const savePost = () => {\n    const postText = document.querySelector(\"#tbPostText\").value;\n    let rand1 = Math.random().toString(36).substring(3);\n    let rand2 = Math.random().toString(36).substring(3);\n    const postID = `Post${rand1}${rand2}`;\n    const commentID = `Comment${rand1}${rand2}`;\n\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"Feed\")\n      .collection(\"Posts\")\n      .doc(postID)\n      .set({\n        Date: GetToday(),\n        Text: postText,\n        Likes: 0,\n      })\n      .catch((err) => console.log(err));\n\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"Feed\")\n      .collection(\"Posts\")\n      .doc(postID)\n      .collection(\"Comments\")\n      .doc(commentID)\n      .set({\n        Date: GetToday(),\n        Text: \"\",\n        Commenter: \"\",\n      })\n      .catch((err) => console.log(err));\n\n    //   Dispatch\n    const allPosts = [...allPostsState];\n\n    allPosts.push({\n      Text: postText,\n      Date: GetToday(),\n      Likes: 0,\n      commentData: [],\n    });\n\n    console.log(allPosts);\n\n    dispatch(storeProfileFeedPostDataAction(allPosts));\n\n    history.push(\"/teacher-profile/feed\");\n  };\n\n  // HANDLE\n  const handleCurrPage = () => {\n    let feedBtn = document.querySelector(\"#link-feed\");\n    feedBtn.classList.add(\"navy-back\");\n\n    let aboutBtn = document.querySelector(\"#link-about\");\n    aboutBtn.classList.remove(\"navy-back\");\n\n    let awardsBtn = document.querySelector(\"#link-awards\");\n    awardsBtn.classList.remove(\"navy-back\");\n\n    let galleryBtn = document.querySelector(\"#link-gallery\");\n    galleryBtn.classList.remove(\"navy-back\");\n\n    let reviewsBtn = document.querySelector(\"#link-reviews\");\n    reviewsBtn.classList.remove(\"navy-back\");\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n\n    handleCurrPage();\n  }, []);\n  return (\n    <div className=\"post-form-wrapper\">\n      <button\n        className=\"btn-back maroon-back\"\n        onClick={() => history.push(\"/teacher-profile/feed\")}\n      >\n        Back\n      </button>\n      <div className=\"post-create\">\n        <h1 className=\"post-create-head\">Create a Post</h1>\n\n        <textarea\n          className=\"ta\"\n          id=\"tbPostText\"\n          placeholder=\"Enter post here...\"\n        ></textarea>\n        <div className=\"btn-wrapper\">\n          <button className=\"btn-dark btn-post\" onClick={savePost}>\n            Post\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n",["502","503"],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Statistics/GroupStats.js",["504"],"import React, { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { statisticsObjectAction } from \"../../../redux/actions\";\n\nexport default function GroupStats() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const storageState = useSelector(\n    (state) => state.storeTeacherStatisticsGeneralInfoReducer\n  );\n  const storageObj = useSelector((state) => state.statisticsObjectReducer);\n\n  const getStorageObj = () => {\n    storageState.forEach((obj) => {\n      if (obj.id === \"GroupStats\") {\n        dispatch(statisticsObjectAction(obj));\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n    }\n    getStorageObj();\n  }, []);\n  return (\n    <div>\n      <h1>Group Stats</h1>\n      <hr/>\n      <p># of Groups: {storageObj.Num}</p>\n    </div>\n  );\n}\n",["505","506"],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Profile/ProfileAwardsView.js",["507","508"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { students_Collection } from \"../../../utils/firebase\";\nimport {\n  storeStudentAwardsAction,\n  storeStudentCertsAction,\n} from \"../../../redux/actions\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nexport default function ProfileAwardView() {\n  const studentAuthID = useSelector((state) => state.storeStudentAuthIDReducer);\n  const user = useSelector((state) => state.storeStudentUserDataReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // States\n  const awards = useSelector((state) => state.storeStudentAwardsReducer);\n  const certs = useSelector((state) => state.storeStudentCertsReducer);\n\n  // GET\n  const getAllAwards = () => {\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"Awards\")\n      .collection(\"AwardBlocks\")\n      .get()\n      .then((snapshot) => {\n        const awardData = firebaseLooper(snapshot);\n        dispatch(storeStudentAwardsAction(awardData));\n      })\n      .catch((err) => console.log(err));\n  };\n  const getAllCerts = () => {\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"Awards\")\n      .collection(\"CertBlocks\")\n      .get()\n      .then((snapshot) => {\n        const certData = firebaseLooper(snapshot);\n        dispatch(storeStudentCertsAction(certData));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  // HANDLE\n  const handleAwards = () => {\n    return awards.map((awd, i) => {\n      return (\n        <div key={i}>\n          <h3>{awd.Name}</h3>\n          <h4>{awd.Institution}</h4>\n          <p>{awd.Desc}</p>\n          <p>\n            Awarded:{\" \"}\n            {awd.Date ? awd.Date.toDate().toString().substr(4, 11) : null}\n          </p>\n          <hr />\n        </div>\n      );\n    });\n  };\n  const handleCerts = () => {\n    return certs.map((cert, i) => {\n      return (\n        <div key={i}>\n          <h3>{cert.Name}</h3>\n          <h4>{cert.Institution}</h4>\n          <p>{cert.Desc}</p>\n          <p>\n            {cert.Date ? cert.Date.toDate().toString().substr(4, 11) : null}\n          </p>\n          <hr />\n        </div>\n      );\n    });\n  };\n\n  useEffect(() => {\n    if (!studentAuthID) {\n      history.push(\"/studentdash\");\n      return;\n    }\n\n    getAllAwards();\n    getAllCerts();\n  }, []);\n  return (\n    <div>\n      <button onClick={() => history.push(\"/student-profile/awards-edit\")}>\n        Edit\n      </button>\n      {/* Awards */}\n      <div>\n        <h2>Awards</h2>\n        <div>{handleAwards()}</div>\n      </div>\n\n      {/* Certs */}\n      <div>\n        <h2>Certifications</h2>\n        <div>{handleCerts()}</div>\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Profile/ProfileFeedView.js",["509"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { students_Collection } from \"../../../utils/firebase\";\nimport {\n  storeStudentProfileFeedPostsAction,\n  storeStudentProfileFeedPostAction,\n} from \"../../../redux/actions\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nimport GetToday from \"../../GetToday\";\nimport RandomString from \"../../RandomString\";\n\nexport default function ProfileFeedView() {\n  const studentAuthID = useSelector((state) => state.storeStudentAuthIDReducer);\n  const user = useSelector((state) => state.storeStudentUserDataReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // States\n  const posts = useSelector(\n    (state) => state.storeStudentProfileFeedPostsReducer\n  );\n\n  // GET\n  const getAllFeedPosts = () => {\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"Feed\")\n      .collection(\"Posts\")\n      .get()\n      .then((snapshot) => {\n        const postData = firebaseLooper(snapshot);\n        dispatch(storeStudentProfileFeedPostsAction(postData));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  // HANDLE\n  const handleAllFeedPosts = () => {\n    return posts.map((post, i) => {\n      return (\n        <div key={i}>\n          <h3>\n            {user.FirstName} {user.LastName}\n          </h3>\n          <p>{post.Text}</p>\n          <p>{post.Date.toDate().toString().substr(4, 11)}</p>\n          <button>Like</button>\n          <button id={post.id} onClick={onPostEdit}>\n            Edit\n          </button>\n          <button id={post.id} onClick={removePost}>\n            Remove\n          </button>\n        </div>\n      );\n    });\n  };\n  const handleNewPost = () => {\n    return (\n      <div>\n        <h3>Create New Post</h3>\n        <textarea id=\"taNewPost\" placeholder=\"Type Post Here...\"></textarea>\n        <button onClick={newPost}>Post</button>\n      </div>\n    );\n  };\n\n  // POST\n  const newPost = () => {\n    const postText = document.querySelector(\"#taNewPost\").value;\n    const today = GetToday();\n    // Save to DB\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const postID = `Post${rand1}${rand2}`;\n    const commentID = `Comment${rand1}${rand2}`;\n\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"Feed\")\n      .collection(\"Posts\")\n      .doc(postID)\n      .set({\n        Text: postText,\n        Date: today,\n        Likes: 0,\n      })\n      .catch((err) => console.log(err));\n\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"Feed\")\n      .collection(\"Posts\")\n      .doc(postID)\n      .collection(\"Comments\")\n      .doc(commentID)\n      .set({\n        Text: \"\",\n        Date: today,\n        Commentor: \"\",\n      })\n      .catch((err) => console.log(err));\n\n    // Dispatch\n    const allPosts = [...posts];\n    allPosts.push({\n      id: postID,\n      Text: postText,\n      Date: today,\n      Likes: 0,\n    });\n\n    dispatch(storeStudentProfileFeedPostsAction(allPosts));\n\n    // Empty ta\n    document.querySelector(\"#taNewPost\").value = \"\";\n  };\n\n  // REMOVE\n  const removePost = (event) => {\n    const postID = event.target.getAttribute(\"id\");\n\n    // Remove from DB\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"Feed\")\n      .collection(\"Posts\")\n      .doc(postID)\n      .delete()\n      .catch((err) => console.log(err));\n\n    // Dispatch\n    const allPosts = [...posts];\n    const filtered = allPosts.filter((post) => post.id !== postID);\n    dispatch(storeStudentProfileFeedPostsAction(filtered));\n  };\n\n  // ON CLICK\n  const onPostEdit = (event) => {\n    const postID = event.target.getAttribute(\"id\");\n\n    posts.forEach((post) => {\n      if (post.id === postID) {\n        dispatch(storeStudentProfileFeedPostAction(post));\n      }\n    });\n\n    history.push(\"/student-profile/feed-edit\");\n  };\n\n  useEffect(() => {\n    if (!studentAuthID) {\n      history.push(\"/studentdash\");\n      return;\n    }\n\n    getAllFeedPosts();\n  }, []);\n  return (\n    <div>\n      <hr />\n      {/* Create Post */}\n      <div>{handleNewPost()}</div>\n\n      <hr />\n      {/* Feed */}\n      <div>{handleAllFeedPosts()}</div>\n    </div>\n  );\n}\n",["510","511"],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Forums/ForumSinglePostBlock.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Students/StudentOverview.js",["512","513"],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Courses.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Messages/StudentMessagesMain.js",["514","515"],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Students/StudentsMain.js",["516","517"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./Students.css\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport DashFooter from \"../Dash/DashFooter\";\nimport RandomString from \"../../RandomString\";\nimport GetToday from \"../../GetToday\";\nimport {\n  students_Collection,\n  teachers_Collection,\n  studentReqQueue_Collection,\n} from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\nimport {\n  storeTeacherStudentGeneralInfoAction,\n  storeTeacherSingleStudentAction,\n  storeTeacherQueueRequestsAction,\n  storeTeacherExistingStudentsAction,\n  toggleTeacherAddStudentFormAction,\n  storeTeacherAddStudentSearchResultAction,\n} from \"../../../redux/actions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSearch,\n  faTimes,\n  faTimesCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function StudentsMain() {\n  const user = useSelector((state) => state.userDataReducer);\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // TOGGLE\n  const toggleAddStudentForm = useSelector(\n    (state) => state.toggleTeacherAddStudentFormReducer\n  );\n\n  const students = useSelector(\n    (state) => state.storeTeacherStudentGeneralInfoReducer\n  );\n\n  const existingStuds = useSelector(\n    (state) => state.storeTeacherExistingStudentsReducer\n  );\n  const queueRequests = useSelector(\n    (state) => state.storeTeacherQueueRequestsReducer\n  );\n  const searchRes = useSelector(\n    (state) => state.storeTeacherAddStudentSearchResultReducer\n  );\n\n  // GET\n  const getAllStudents = () => {\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Students\")\n      .get()\n      .then((snapshot) => {\n        const studentList = firebaseLooper(snapshot);\n        dispatch(storeTeacherStudentGeneralInfoAction(studentList));\n      })\n      .catch((err) => console.log(err));\n  };\n  const checkForExistingStudents = () => {\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Students\")\n      .get()\n      .then((snapshot) => {\n        const studentData = firebaseLooper(snapshot);\n        const studentArr = [];\n        studentData.forEach((stud) => {\n          studentArr.push(stud.id);\n        });\n        dispatch(storeTeacherExistingStudentsAction(studentArr));\n\n        studentReqQueue_Collection\n          .get()\n          .then((snapshot) => {\n            const queueData = firebaseLooper(snapshot);\n            const queueArr = [];\n            queueData.forEach((que) => {\n              queueArr.push(que.StudentID);\n            });\n\n            dispatch(storeTeacherQueueRequestsAction(queueArr));\n          })\n          .catch((err) => console.log(err));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  // HANDLE\n  const handleStudentList = () => {\n    return students.map((stud, i) => {\n      return (\n        <div className=\"studListBlock\" key={i}>\n          <h3 className=\"studListComp studName\">\n            {stud.FirstName} {stud.LastName}\n          </h3>\n          <p className=\"studListComp studID\">{stud.id}</p>\n          <p className=\"studListComp studEmail\">{stud.Email}</p>\n          <div className=\"rightSide\" style={{ display: \"flex\" }}>\n            <button\n              className=\"btnStudList btnStudOver\"\n              onClick={navStudentOverview}\n              id={stud.id}\n            >\n              Overview\n            </button>\n            <button className=\"btnStudList btnStudRemove\">\n              <FontAwesomeIcon icon={faTimesCircle} />\n            </button>\n          </div>\n        </div>\n      );\n    });\n  };\n  const handleAddStudentForm = () => {\n    return (\n      <div className=\"addStudForm\">\n        <p className=\"addStudDesc\">Search using student username.</p>\n        <div className=\"flex\">\n          <input id=\"tbStudSearch\" type=\"text\" placeholder=\"Search\" />\n          <button className=\"btnAddStudForm\" onClick={onAddStudentClick}>\n            <FontAwesomeIcon icon={faSearch} />\n          </button>\n        </div>\n        <div>\n          {/* Student search thing */}\n          {searchRes ? handleSearchResult() : null}\n        </div>\n      </div>\n    );\n  };\n  const handleSearchResult = () => {\n    return (\n      <div className=\"searchResWrapper\">\n        <p className=\"reqBox\">\n          {searchRes.FirstName} {searchRes.LastName}\n        </p>\n        <p className=\"reqBox\">{searchRes.StudentID}</p>\n        {searchRes.StudentID !== \"\" ? (\n          <button className=\"btnSendReq\" onClick={sendRequest}>\n            Send Request\n          </button>\n        ) : null}\n      </div>\n    );\n  };\n\n  // CLICK\n  const onAddStudentClick = () => {\n    const studRes = document.querySelector(\"#tbStudSearch\").value;\n    const allExistingStuds = existingStuds.concat(queueRequests);\n\n    if (allExistingStuds.includes(studRes)) {\n      // Exists\n      const student = {\n        FirstName: \"Student is not available for request.\",\n        LastName: \"\",\n        StudentID: \"\",\n      };\n      dispatch(storeTeacherAddStudentSearchResultAction(student));\n    } else {\n      // Does not exist\n\n      // Search for student in DB\n      students_Collection\n        .get()\n        .then((snapshot) => {\n          const studentList = firebaseLooper(snapshot);\n          studentList.forEach((stud) => {\n            if (studRes === stud.id) {\n              dispatch(storeTeacherAddStudentSearchResultAction(stud));\n            }\n          });\n          if (!searchRes) {\n            const student = {\n              FirstName: \"Student ID does not exist\",\n              LastName: \"\",\n              StudentID: \"\",\n            };\n            dispatch(storeTeacherAddStudentSearchResultAction(student));\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n  const sendRequest = () => {\n    // Send Request here\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n\n    const reqID = `Req${rand1}${rand2}`;\n    const notifID = `Notif${rand1}${rand2}`;\n\n    studentReqQueue_Collection\n      .doc(reqID)\n      .set({\n        StudentID: searchRes.StudentID,\n        TeacherID: teacherAuthID,\n        TFirstName: user.FirstName,\n        TLastName: user.LastName,\n      })\n      .catch((err) => console.log(err));\n\n    students_Collection\n      .doc(searchRes.StudentID)\n      .collection(\"Notifications\")\n      .doc(notifID)\n      .set({\n        Action: \"request\",\n        Date: GetToday(),\n        Icon: \"faUser\",\n        Text: `You have received a request from ${user.FirstName} ${user.LastName}.`,\n      })\n      .catch((err) => console.log(err));\n\n    document.querySelector(\"#tbStudSearch\").value = \"\";\n\n    const student = {\n      FirstName: \"Request has been sent.\",\n      LastName: \"\",\n      StudentID: \"\",\n    };\n    dispatch(storeTeacherAddStudentSearchResultAction(student));\n\n    // Dispatch\n    const allReqs = [...queueRequests];\n    allReqs.push({\n      StudentID: searchRes.StudentID,\n      TeacherID: teacherAuthID,\n      TFirstName: user.FirstName,\n      TLastName: user.LastName,\n    });\n    dispatch(storeTeacherQueueRequestsAction(allReqs));\n  };\n\n  // NAV\n  const navStudentOverview = (event) => {\n    const studID = event.target.getAttribute(\"id\");\n\n    students.forEach((stud) => {\n      if (stud.id === studID) {\n        students_Collection\n          .where(\"StudentID\", \"==\", stud.id)\n          .get()\n          .then((snapshot) => {\n            const student = firebaseLooper(snapshot);\n            student.forEach((s) => {\n              dispatch(storeTeacherSingleStudentAction(s));\n            });\n          })\n          .catch((err) => console.log(err));\n      }\n    });\n\n    history.push(\"/teacher-student-overview\");\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n\n    getAllStudents();\n    checkForExistingStudents();\n  }, []);\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      {/* Content */}\n      <div className=\"content\">\n        <div>\n          <h1>Students</h1>\n          <button\n            className=\"btnAddStud\"\n            onClick={() => dispatch(toggleTeacherAddStudentFormAction())}\n          >\n            {toggleAddStudentForm ? \"Close\" : \"Add New Student\"}\n          </button>\n          {toggleAddStudentForm ? handleAddStudentForm() : null}\n        </div>\n\n        {/* Student List */}\n        <div className=\"studListWrapper\">{handleStudentList()}</div>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Milestones/MilestoneEdit.js",["518"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport TopBar from \"../Dash/TopBar\";\nimport DashFooter from \"../Dash/DashFooter\";\nimport { storeTeacherSingleMilestoneSegAction } from \"../../../redux/actions\";\nimport { teachers_Collection } from \"../../../utils/firebase\";\n\nexport default function MilestoneEdit() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const milestone = useSelector(\n    (state) => state.storeTeacherSingleMilestoneSegReducer\n  );\n\n  //   HANDLE\n  const handleTaskEdit = () => {\n    if (milestone.Tasks) {\n      return milestone.Tasks.map((task, i) => {\n        return (\n          <div key={i}>\n            <h3>Task:</h3>\n            <input id={`tbTask${i}`} type-=\"text\" defaultValue={task.Task} />\n\n            <h3>Description:</h3>\n            <textarea id={`taDesc${i}`} defaultValue={task.Desc}></textarea>\n            <hr />\n          </div>\n        );\n      });\n    }\n  };\n\n  //   POST\n  const saveAllChanges = () => {\n    const allTasks = [];\n\n    if (milestone.Tasks) {\n      for (let i = 0; i < milestone.Tasks.length; i = i + 1) {\n        const task = document.querySelector(`#tbTask${i}`).value;\n        const desc = document.querySelector(`#taDesc${i}`).value;\n\n        const tempObj = {\n          id: milestone.Tasks[i].id,\n          Task: task,\n          Desc: desc,\n          SegmentName: milestone.id,\n        };\n\n        allTasks.push(tempObj);\n\n        // Save to DB\n        teachers_Collection\n          .doc(teacherAuthID)\n          .collection(\"Milestones\")\n          .doc(milestone.id)\n          .collection(\"MilestoneTasks\")\n          .doc(milestone.Tasks[i].id)\n          .update({\n            Task: task,\n            Desc: desc,\n          })\n          .catch((err) => console.log(err));\n      }\n    }\n\n    const tempObj = {\n      ...milestone,\n      Tasks: allTasks,\n    };\n\n    dispatch(storeTeacherSingleMilestoneSegAction(tempObj));\n    history.push(\"/teacher-milestone-view\");\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n  }, []);\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      {/* Content */}\n      <div className=\"content\">\n        <h1> Edit Milestone Tasks</h1>\n\n        <div>{handleTaskEdit()}</div>\n        <button onClick={saveAllChanges} className=\"btn-navy\">\n          Save All Changes\n        </button>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n",["519","520"],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Events/EventEdit.js",["521","522"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport DashFooter from \"../Dash/DashFooter\";\nimport InputDateFormatter from \"../../InputDateFormatter\";\nimport FirebaseDate from \"../../FirebaseDate\";\nimport { teachers_Collection } from \"../../../utils/firebase\";\nimport {\n  storeSingleMonthEventAction,\n  storeTeacherEventsGeneralInfoAction,\n  toggleAddEventInviteeAction,\n  toggleAssigneeFormAction,\n} from \"../../../redux/actions\";\n\nexport default function EventEdit() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const toggleAddInviteeForm = useSelector(\n    (state) => state.toggleAddEventInviteeReducer\n  );\n  const events = useSelector(\n    (state) => state.storeTeacherEventsGeneralInfoReducer\n  );\n  const eve = useSelector((state) => state.storeSingleMonthEventReducer);\n\n  // HANDLE\n  const handleEventEdit = () => {\n    return (\n      <div>\n        <h3>Name: </h3>\n        <input id=\"tbName\" type=\"text\" defaultValue={eve.Name} />\n\n        <h3>Desc: </h3>\n        <textarea id=\"taDesc\" defaultValue={eve.Desc}></textarea>\n\n        <h3>Color: </h3>\n        <input id=\"tbColor\" type=\"text\" defaultValue={eve.Color} />\n\n        <h3>Start: </h3>\n        <input\n          id=\"daStart\"\n          type=\"date\"\n          defaultValue={eve.Start ? InputDateFormatter(eve.Start) : null}\n        />\n\n        <h3>End: </h3>\n        <input\n          id=\"daEnd\"\n          type=\"date\"\n          defaultValue={eve.End ? InputDateFormatter(eve.End) : null}\n        />\n\n        <h3>Invitees:</h3>\n        {eve.Invitees\n          ? eve.Invitees.map((ei, i) => {\n              return (\n                <div>\n                  <input\n                    key={i}\n                    id={`tbinvitee${i}`}\n                    type=\"text\"\n                    defaultValue={ei}\n                  />{\" \"}\n                  <button id={ei} onClick={removeInvitee}>\n                    -\n                  </button>\n                </div>\n              );\n            })\n          : null}\n        {toggleAddInviteeForm ? (\n          <div>\n            <p>Enter Invitee Username:</p>\n            <input id=\"tbAddInvitee\" type=\"text\" placeholder=\"Username\" />\n            <button onClick={addInvitee}>Add</button>\n          </div>\n        ) : null}\n\n        <button onClick={() => dispatch(toggleAddEventInviteeAction())}>\n          +\n        </button>\n      </div>\n    );\n  };\n\n  // POST\n  const saveAllChanges = () => {\n    const name = document.querySelector(\"#tbName\").value;\n    const desc = document.querySelector(\"#taDesc\").value;\n    const color = document.querySelector(\"#tbColor\").value;\n    const start = FirebaseDate(document.querySelector(\"#daStart\").value);\n    const end = FirebaseDate(document.querySelector(\"#daEnd\").value);\n    const invitees = [...eve.Invitees];\n\n    // Save to DB\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Events\")\n      .doc(eve.id)\n      .update({\n        Name: name,\n        Desc: desc,\n        Color: color,\n        Start: start,\n        End: end,\n        Invitees: invitees,\n      });\n\n    // Dispatch\n    const tempObj = {\n      id: eve.id,\n      Name: name,\n      Desc: desc,\n      Color: color,\n      Start: start,\n      End: end,\n      Invitees: invitees,\n    };\n\n    dispatch(storeSingleMonthEventAction(tempObj));\n\n    const allEvents = [...events];\n\n    const filtered = allEvents.filter((ev) => ev.id !== eve.id);\n    filtered.push(tempObj);\n    filtered.sort((a, b) => (a.Start > b.Start ? 1 : -1));\n    dispatch(storeTeacherEventsGeneralInfoAction(filtered));\n\n    history.push(\"/teacher-event-view\");\n  };\n  const addInvitee = () => {\n    const invitee = document.querySelector(\"#tbAddInvitee\").value;\n\n    const allInvs = [...eve.Invitees];\n    allInvs.push(invitee);\n\n    const tempObj = {\n      ...eve,\n      Invitees: allInvs,\n    };\n\n    dispatch(storeSingleMonthEventAction(tempObj));\n    dispatch(toggleAddEventInviteeAction());\n  };\n\n  // REMOVE\n  const removeInvitee = (event) => {\n    const invitee = event.target.getAttribute(\"id\");\n\n    const allInvs = [...eve.Invitees];\n    const filtered = allInvs.filter((ee) => ee !== invitee);\n\n    const tempObj = {\n      ...eve,\n      Invitees: filtered,\n    };\n\n    dispatch(storeSingleMonthEventAction(tempObj));\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n  }, []);\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      <div>\n        <h1>{eve.Name}</h1>\n\n        <div>{handleEventEdit()}</div>\n        <br />\n        <button onClick={saveAllChanges}>Save All Changes</button>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Events/EventView.js",["523","524"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport DashFooter from \"../Dash/DashFooter\";\n\nexport default function EventView() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const eve = useSelector((state) => state.storeSingleMonthEventReducer);\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n  }, []);\n\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      {/* Content */}\n      <div>\n        <button onClick={() => history.push(\"/teacher-events\")}>Back</button>\n        <h1>{eve.Name}</h1>\n        <div>\n          <p>{eve.Desc}</p>\n          <p>\n            Start:{\" \"}\n            {eve.Start ? eve.Start.toDate().toString().substr(4, 11) : null}\n          </p>\n          <p>\n            End: {eve.End ? eve.End.toDate().toString().substr(4, 11) : null}\n          </p>\n\n          <p>Invitees: </p>\n          <ul>\n            {eve.Invitees\n              ? eve.Invitees.map((inv, i) => {\n                  return <p key={i}>{inv}</p>;\n                })\n              : null}\n          </ul>\n        </div>\n      </div>\n\n      {/* Dash Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n",["525","526"],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Invoices/InvoiceView.js",["527"],"import React, { useEffect } from \"react\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport DashFooter from \"../Dash/DashFooter\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { teachers_Collection } from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\nimport { storeInvoiceServicesAction } from \"../../../redux/actions\";\n\nexport default function InvoiceView() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const invoice = useSelector((state) => state.storeSingleInvoiceReducer);\n\n  const getAllServices = () => {\n    const invoiceID = invoice.id;\n    const services_Collection = teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Invoices\")\n      .doc(invoiceID)\n      .collection(\"Services\");\n\n    services_Collection\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        dispatch(storeInvoiceServicesAction(data));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const services = useSelector((state) => state.storeInvoiceServicesReducer);\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    } else if (!invoice) {\n        history.push('/teacher-invoices');\n        return;\n    }\n    getAllServices();\n  }, []);\n\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      <div>\n        <div>\n          <button\n            onClick={() => {\n              history.push(\"/teacher-invoices\");\n            }}\n          >\n            View All Invoices\n          </button>\n        </div>\n\n        {/* Invoice Template */}\n        <div>\n          {/* Top */}\n          <div>\n            <h3>Invoice #{invoice.No}</h3>\n            <p>\n              Date Issued: {invoice.Created.toDate().toString().substr(4, 11)}\n            </p>\n            <p>Date Due: {invoice.Due.toDate().toString().substr(4, 11)}</p>\n          </div>\n          <hr />\n          {/* Contact Details */}\n          <div>\n            <h4>Invoice To:</h4>\n            <p>{invoice.Name}</p>\n            <p>{invoice.Address}</p>\n            <p>\n              {invoice.City}, {invoice.State} {invoice.Zip}\n            </p>\n            <p>{invoice.Email}</p>\n          </div>\n          <hr/>\n          {/* Services Details */}\n          <div>\n            <table>\n              <tr>\n                <th>Services</th>\n                <th>Rate</th>\n                <th>Hours</th>\n                <th>Price</th>\n              </tr>\n              {services.map((serv, i) => {\n                return (\n                  <div key={i}>\n                    <tr>\n                      <td>{serv.Name}</td>\n                      <td>${serv.Rate}</td>\n                      <td>{serv.Hours} HRS</td>\n                      <td>${serv.FullPrice}</td>\n                    </tr>\n                  </div>\n                );\n              })}\n            </table>\n          </div>\n          <hr/>\n          {/* Message */}\n          <div>\n              <p>{invoice.Message}</p>\n          </div>\n        </div>\n\n        {/* Invoice Actions */}\n        <div>\n            <button>Send Invoice</button>\n            <button>Print</button>\n            <button>Edit</button>\n        </div>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n",["528","529"],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Forums/ForumsMain.js",["530","531","532"],"import React, { useEffect } from \"react\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport ForumBlocks from \"./ForumBlocks\";\nimport DashFooter from \"../Dash/DashFooter\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { groups_Collection, forums_Collection } from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\nimport { storeSingleForumAction } from \"../../../redux/actions\";\nimport ForumSingleBlock from \"./ForumSingleBlock\";\n\nexport default function ForumsMain() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const forumState = useSelector(\n    (state) => state.storeTeacherForumsGeneralInfoReducer\n  );\n  const singleForumState = useSelector(\n    (state) => state.storeSingleForumReducer\n  );\n\n  const groupState = useSelector(\n    (state) => state.storeTeacherGroupGeneralInfoReducer\n  );\n\n  const getSingleForum = (event) => {\n    const id = event.target.getAttribute(\"id\");\n    let singleForum = {};\n    forumState.forEach((f) => {\n      if (f.id === id) {\n        const posts_Collection = forums_Collection.doc(id).collection(\"Posts\");\n        posts_Collection\n          .get()\n          .then((snapshot) => {\n            const postData = firebaseLooper(snapshot);\n            const newPosts = [];\n            postData.forEach((pd) => {\n              const comments_Collection = forums_Collection\n                .doc(id)\n                .collection(\"Posts\")\n                .doc(pd.id)\n                .collection(\"Comments\");\n              comments_Collection\n                .get()\n                .then((snapshot) => {\n                  const commentData = firebaseLooper(snapshot);\n                  newPosts.push({\n                    ...pd,\n                    commentData,\n                  });\n                  singleForum = {\n                    ...f,\n                    newPosts,\n                  };\n                  dispatch(storeSingleForumAction(singleForum));\n                })\n                .catch((err) => console.log(err));\n            });\n          })\n          .catch((err) => console.log(err));\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n  }, []);\n\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      <div>\n        <div>\n          <input id=\"tbForumSearch\" type=\"text\" placeholder=\"Search\" />\n          <button>Search</button>\n        </div>\n\n        {/* Forum Content */}\n        <div>\n          {singleForumState.Topic ? (\n            <ForumSingleBlock\n              topic={singleForumState.Topic}\n              desc={singleForumState.Desc}\n              date={singleForumState.DateCreated}\n              posts={singleForumState.newPosts}\n            />\n          ) : null}\n        </div>\n\n        <div>\n          {forumState.map((f, i) => {\n            return (\n              <div>\n                <ForumBlocks key={i} topic={f.Topic} />\n                <button id={f.id} onClick={getSingleForum}>\n                  View Discussion\n                </button>\n                <button>Remove</button>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/RandomString.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Dash/Achievement.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Dash/DashFooter.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Profile/ProfileGallery.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Groups/GroupAboutEdit.js",["533"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { storeSingleGroupAction } from \"../../../redux/actions\";\nimport { groups_Collection } from \"../../../utils/firebase\";\n\nexport default function GroupAboutEdit() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const group = useSelector((state) => state.storeSingleGroupReducer);\n\n  const saveEdit = () => {\n    const editText = document.querySelector(\"#taAboutEditText\").value;\n\n    //   Save to DB\n    groups_Collection.doc(group.id).update({\n      Access: group.Access,\n      Date: group.Date,\n      Desc: editText,\n      Host: group.Host,\n      Name: group.Name,\n    });\n\n    // Dispatch\n    const groupObj = {\n      ...group,\n      id: group.id,\n      Desc: editText,\n    };\n\n    dispatch(storeSingleGroupAction(groupObj));\n\n    history.push(\"/teacher-group-page/about\");\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n  }, []);\n  return (\n    <div>\n      <div>\n        <button onClick={() => history.push(\"/teacher-group-page/about\")}>\n          Back\n        </button>\n      </div>\n      <br />\n      <div>\n        <textarea id=\"taAboutEditText\" defaultValue={group.Desc}></textarea>\n        <br />\n        <button onClick={saveEdit}>Save</button>\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Statistics/EventStats.js",["534"],"import React, { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { statisticsObjectAction } from \"../../../redux/actions\";\n\nexport default function EventStats() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const storageState = useSelector(\n    (state) => state.storeTeacherStatisticsGeneralInfoReducer\n  );\n  const storageObj = useSelector((state) => state.statisticsObjectReducer);\n\n  const getStorageObj = () => {\n    storageState.forEach((obj) => {\n      if (obj.id === \"EventStats\") {\n        dispatch(statisticsObjectAction(obj));\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n    }\n    getStorageObj();\n  }, []);\n  return (\n    <div>\n      <h1>Event Stats</h1>\n      <hr/>\n      <p># of Events: {storageObj.Num}</p>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Profile/ProfileAwardsEdit.js",["535","536"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport InputDateFormatter from \"../../InputDateFormatter\";\nimport FirebaseDate from \"../../FirebaseDate\";\nimport GetToday from \"../../GetToday\";\nimport RandomString from \"../../RandomString\";\nimport {\n  storeStudentAwardsAction,\n  storeStudentCertsAction,\n  toggleStudentNewAwardFormAction,\n  toggleStudentNewCertFormAction,\n} from \"../../../redux/actions\";\nimport { students_Collection } from \"../../../utils/firebase\";\n\nexport default function ProfileAwardsEdit() {\n  const studentAuthID = useSelector((state) => state.storeStudentAuthIDReducer);\n  const user = useSelector((state) => state.storeStudentUserDataReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // States\n  const awards = useSelector((state) => state.storeStudentAwardsReducer);\n  const certs = useSelector((state) => state.storeStudentCertsReducer);\n\n  //   Toggles\n  const toggleNewAwardForm = useSelector(\n    (state) => state.toggleStudentNewAwardFormReducer\n  );\n  const toggleNewCertForm = useSelector(\n    (state) => state.toggleStudentNewCertFormReducer\n  );\n\n  //   HANDLE\n  const handleAwardsEdit = () => {\n    return awards.map((awd, i) => {\n      return (\n        <div key={i}>\n          <div>\n            <h3>Award Name</h3>\n            <input id={`tbAwardName${i}`} type=\"text\" defaultValue={awd.Name} />\n          </div>\n          <div>\n            <h3>Institution</h3>\n            <input\n              id={`tbAwardInstitution${i}`}\n              type=\"text\"\n              defaultValue={awd.Institution}\n            />\n          </div>\n          <div>\n            <h3>Description</h3>\n            <textarea id={`taAwardDesc${i}`} defaultValue={awd.Desc}></textarea>\n          </div>\n          <div>\n            <h3>Issued</h3>\n            <input\n              id={`daAwardDate${i}`}\n              type=\"date\"\n              defaultValue={InputDateFormatter(awd.Date)}\n            />\n          </div>\n          <button id={awd.id} onClick={removeAward}>\n            Remove\n          </button>\n          <hr />\n        </div>\n      );\n    });\n  };\n  const handleCertsEdit = () => {\n    return certs.map((cert, i) => {\n      return (\n        <div key={i}>\n          <div>\n            <h3>Certification Name</h3>\n            <input id={`tbCertName${i}`} type=\"text\" defaultValue={cert.Name} />\n          </div>\n          <div>\n            <h3>Institution</h3>\n            <input\n              id={`tbCertInstitution${i}`}\n              type=\"text\"\n              defaultValue={cert.Institution}\n            />\n          </div>\n          <div>\n            <h3>Description</h3>\n            <textarea id={`taCertDesc${i}`} defaultValue={cert.Desc}></textarea>\n          </div>\n          <div>\n            <h3>Issued</h3>\n            <input\n              id={`daCertDate${i}`}\n              type=\"date\"\n              defaultValue={InputDateFormatter(cert.Date)}\n            />\n          </div>\n          <button id={cert.id} onClick={removeCert}>\n            Remove\n          </button>\n          <hr />\n        </div>\n      );\n    });\n  };\n  const handleNewAward = () => {\n    return (\n      <div>\n        <div>\n          <h3>Award Name</h3>\n          <input id=\"tbNewAwardName\" type=\"text\" placeholder=\"Award Name\" />\n        </div>\n        <div>\n          <h3>Institution</h3>\n          <input\n            id=\"tbNewAwardInstitution\"\n            type=\"text\"\n            placeholder=\"Institution\"\n          />\n        </div>\n        <div>\n          <h3>Description</h3>\n          <textarea id=\"taNewAwardDesc\" placeholder=\"Description\"></textarea>\n        </div>\n        <div>\n          <h3>Issued</h3>\n          <input\n            id=\"daNewAwardDate\"\n            type=\"date\"\n            defaultValue={InputDateFormatter(GetToday())}\n          />\n        </div>\n        <button onClick={saveNewAward}>Apply</button>\n        <hr />\n      </div>\n    );\n  };\n  const handleNewCert = () => {\n    return (\n      <div>\n        <div>\n          <h3>Certification Name</h3>\n          <input\n            id=\"tbNewCertName\"\n            type=\"text\"\n            placeholder=\"Certification Name\"\n          />\n        </div>\n        <div>\n          <h3>Institution</h3>\n          <input\n            id=\"tbNewCertInstitution\"\n            type=\"text\"\n            placeholder=\"Institution\"\n          />\n        </div>\n        <div>\n          <h3>Description</h3>\n          <textarea id=\"taNewCertDesc\" placeholder=\"Description\"></textarea>\n        </div>\n        <div>\n          <h3>Issued</h3>\n          <input\n            id=\"daNewCertDate\"\n            type=\"date\"\n            defaultValue={InputDateFormatter(GetToday())}\n          />\n        </div>\n        <button onClick={saveNewCert}>Apply</button>\n        <hr />\n      </div>\n    );\n  };\n\n  //   POST\n  const saveNewAward = () => {\n    const awardName = document.querySelector(\"#tbNewAwardName\").value;\n    const awardInstitution = document.querySelector(\"#tbNewAwardInstitution\")\n      .value;\n    const awardDesc = document.querySelector(\"#taNewAwardDesc\").value;\n    const awardDateValue = document\n      .querySelector(\"#daNewAwardDate\")\n      .value.toString();\n\n    const awardDate = FirebaseDate(awardDateValue);\n\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const awardID = `Award${rand1}${rand2}`;\n\n    // Save to DB\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"Awards\")\n      .collection(\"AwardBlocks\")\n      .doc(awardID)\n      .set({\n        Name: awardName,\n        Institution: awardInstitution,\n        Desc: awardDesc,\n        Date: awardDate,\n      })\n      .catch((err) => console.log(err));\n\n    // Dispatch\n    const allAwards = [...awards];\n    allAwards.push({\n      id: awardID,\n      Name: awardName,\n      Institution: awardInstitution,\n      Desc: awardDesc,\n      Date: awardDate,\n    });\n\n    console.log(allAwards);\n\n    dispatch(storeStudentAwardsAction(allAwards));\n    dispatch(toggleStudentNewAwardFormAction());\n  };\n  const saveNewCert = () => {\n    const certName = document.querySelector(\"#tbNewCertName\").value;\n    const certInstitution = document.querySelector(\"#tbNewCertInstitution\")\n      .value;\n    const certDesc = document.querySelector(\"#taNewCertDesc\").value;\n    const certDate = FirebaseDate(\n      document.querySelector(\"#daNewCertDate\").value\n    );\n\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const certID = `Cert${rand1}${rand2}`;\n\n    // Save to DB\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"Awards\")\n      .collection(\"CertBlocks\")\n      .doc(certID)\n      .set({\n        Name: certName,\n        Institution: certInstitution,\n        Desc: certDesc,\n        Date: certDate,\n      })\n      .catch((err) => console.log(err));\n\n    //   Dispatch\n    const allCerts = [...certs];\n    allCerts.push({\n      id: certID,\n      Name: certName,\n      Institution: certInstitution,\n      Desc: certDesc,\n      Date: certDate,\n    });\n\n    dispatch(storeStudentCertsAction(allCerts));\n    dispatch(toggleStudentNewCertFormAction());\n  };\n  const saveAllChanges = () => {\n    let awardArray = [];\n    let certArray = [];\n\n    // Awards\n    for (let i = 0; i < awards.length; i = i + 1) {\n      const awardName = document.querySelector(`#tbAwardName${i}`).value;\n      const awardInstutition = document.querySelector(`#tbAwardInstitution${i}`)\n        .value;\n      const awardDesc = document.querySelector(`#taAwardDesc${i}`).value;\n      const awardDate = FirebaseDate(\n        document.querySelector(`#daAwardDate${i}`).value\n      );\n\n      const awardObj = {\n        id: awards[i].id,\n        Name: awardName,\n        Institution: awardInstutition,\n        Desc: awardDesc,\n        Date: awardDate,\n      };\n\n      awardArray.push(awardObj);\n    }\n\n    // Certs\n    for (let i = 0; i < certs.length; i = i + 1) {\n      const certName = document.querySelector(`#tbCertName${i}`).value;\n      const certInstitution = document.querySelector(`#tbCertInstitution${i}`)\n        .value;\n      const certDesc = document.querySelector(`#taCertDesc${i}`).value;\n      const certDate = FirebaseDate(\n        document.querySelector(`#daCertDate${i}`).value\n      );\n\n      const certObj = {\n        id: certs[i].id,\n        Name: certName,\n        Institution: certInstitution,\n        Desc: certDesc,\n        Date: certDate,\n      };\n\n      certArray.push(certObj);\n    }\n\n    // Save to DB\n    awardArray.forEach((awd) => {\n      students_Collection\n        .doc(studentAuthID)\n        .collection(\"Profile\")\n        .doc(\"Awards\")\n        .collection(\"AwardBlocks\")\n        .doc(awd.id)\n        .update({\n          Name: awd.Name,\n          Institution: awd.Institution,\n          Desc: awd.Desc,\n          Date: awd.Date,\n        })\n        .catch((err) => console.log(err));\n    });\n    certArray.forEach((cert) => {\n      students_Collection\n        .doc(studentAuthID)\n        .collection(\"Profile\")\n        .doc(\"Awards\")\n        .collection(\"CertBlocks\")\n        .doc(cert.id)\n        .update({\n          Name: cert.Name,\n          Institution: cert.Institution,\n          Desc: cert.Desc,\n          Date: cert.Date,\n        })\n        .catch((err) => console.log(err));\n    });\n\n    // Dispatch\n    dispatch(storeStudentAwardsAction(awardArray));\n    dispatch(storeStudentCertsAction(certArray));\n\n    history.push(\"/student-profile/awards\");\n  };\n\n  // REMOVE\n  const removeAward = (event) => {\n    const awardID = event.target.getAttribute(\"id\");\n\n    // Remove from DB\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"Awards\")\n      .collection(\"AwardBlocks\")\n      .doc(awardID)\n      .delete()\n      .catch((err) => console.log(err));\n\n    // Dispatch\n    const allAwards = [...awards];\n    const filtered = allAwards.filter((awd) => awd.id !== awardID);\n\n    dispatch(storeStudentAwardsAction(filtered));\n  };\n  const removeCert = (event) => {\n    const certID = event.target.getAttribute(\"id\");\n\n    // Remove from DB\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"Awards\")\n      .collection(\"CertBlocks\")\n      .doc(certID)\n      .delete()\n      .catch((err) => console.log(err));\n\n    // Dispatch\n    const allCerts = [...certs];\n    const filtered = allCerts.filter((cert) => cert.id !== certID);\n\n    dispatch(storeStudentCertsAction(filtered));\n  };\n\n  useEffect(() => {\n    if (!studentAuthID) {\n      history.push(\"/studentdash\");\n      return;\n    }\n  }, []);\n\n  return (\n    <div>\n      {/* Awards */}\n      <div>\n        <h2>Awards</h2>\n        <div>{handleAwardsEdit()}</div>\n        <div>{toggleNewAwardForm ? handleNewAward() : null}</div>\n        <button onClick={() => dispatch(toggleStudentNewAwardFormAction())}>\n          {toggleNewAwardForm ? \"Close\" : \"Add Award\"}\n        </button>\n      </div>\n\n      {/* Certs */}\n      <div>\n        <h2>Certifications</h2>\n        <div>{handleCertsEdit()}</div>\n        <div>{toggleNewCertForm ? handleNewCert() : null}</div>\n        <button onClick={() => dispatch(toggleStudentNewCertFormAction())}>\n          {toggleNewCertForm ? \"Close\" : \"Add Certification\"}\n        </button>\n      </div>\n      <br />\n      <button onClick={saveAllChanges}>Save All Changes</button>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Home/HomeCoursesCard.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/redux/actions.js",[],["537","538"],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Login.js",["539","540"],"import React from \"react\";\nimport \"./Login/Login.css\";\n\nimport { useHistory } from \"react-router-dom\";\nimport {\n  loginRegisterToggleAction,\n  isLoggedInAction,\n  storeTeacherAuthIDAction,\n  storeStudentAuthIDAction,\n  storeAccountTypeAction,\n} from \"../redux/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { users_Collection } from \"../utils/firebase\";\nimport { firebaseLooper } from \"../utils/tools\";\n\nimport \"./Login.css\";\n\nexport default function Login() {\n  const loginSwitchState = useSelector(\n    (state) => state.loginRegisterSwitchReducer\n  );\n  const isLoggedInState = useSelector((state) => state.isLoggedInReducer);\n  const accountTypeState = useSelector(\n    (state) => state.storeAccountTypeReducer\n  );\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleRouteClick = () => {\n    const username = document.querySelector(\"#tbUsername\").value;\n    const password = document.querySelector(\"#tbPassword\").value;\n\n    // Check if they exist in the DB\n    users_Collection\n      .get()\n      .then((snapshot) => {\n        const userData = firebaseLooper(snapshot);\n        userData.forEach((user) => {\n          if (user.Username === username && user.Password === password) {\n            // If they do exist and are correct, then do the stuffs\n\n            document.querySelector(\"#mainMenu\").classList.add(\"hide\");\n\n            // Choose between teacher or student depending on their credentials\n\n            dispatch(isLoggedInAction());\n\n            if (user.AccountType === \"Teacher\") {\n              // Save authID\n              dispatch(storeTeacherAuthIDAction(username));\n              dispatch(storeAccountTypeAction(\"Teacher\"));\n              document\n                .querySelector(\"#teacherMainMenu\")\n                .classList.remove(\"hide\");\n              history.push(\"/teacherdash\");\n            } else if (user.AccountType === \"Student\") {\n              // Save authID\n              dispatch(storeStudentAuthIDAction(username));\n              dispatch(storeAccountTypeAction(\"Student\"));\n              document\n                .querySelector(\"#studentMainMenu\")\n                .classList.remove(\"hide\");\n              history.push(\"/studentdash\");\n            }\n          }\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleLoginSwitch = () => {\n    if (loginSwitchState === \"login\") {\n      return (\n        <div>\n          <div className=\"login-text\">\n            <h2>Welcome back!</h2>\n            <p>Please log in to begin your musical adventures!</p>\n          </div>\n          <div className=\"login-form\">\n            <div>\n              <label>Username or Email</label>\n              <input\n                className=\"login-tb\"\n                id=\"tbUsername\"\n                type=\"text\"\n                placeholder=\"jdoe123! or johndoe@gmail.com\"\n              />\n            </div>\n            <div>\n              <div style={{ display: \"flex\" }}>\n                <label>Password</label>\n                <button\n                  id=\"btn-forgot\"\n                  onClick={() => dispatch(loginRegisterToggleAction(\"forgot\"))}\n                >\n                  Forgot Password?\n                </button>\n              </div>\n              <input\n                className=\"login-tb\"\n                id=\"tbPassword\"\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            </div>\n            <div>\n              <button class=\"btn-login\" onClick={handleRouteClick}>\n                Login\n              </button>\n            </div>\n            <div className=\"login-reg\">\n              <p>Are you new to Musicademy? </p>\n              <button\n                onClick={() => dispatch(loginRegisterToggleAction(\"register\"))}\n              >\n                Create an account\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    } else if (loginSwitchState === \"register\") {\n      return (\n        <div>\n          <div>\n            <h2>A new musical adventure begins here!</h2>\n            <p>\n              Make sure to enter correct information for proper registration.\n            </p>\n          </div>\n          <div>\n            <div>\n              <div>\n                <label>First Name</label>\n                <input id=\"tbFname\" type=\"text\" placeholder=\"John\" />\n              </div>\n              <div>\n                <label>Last Name</label>\n                <input id=\"tbLname\" type=\"text\" placeholder=\"Doe\" />\n              </div>\n            </div>\n            <div>\n              <label>Email</label>\n              <input\n                id=\"tbRegisEmail\"\n                type=\"text\"\n                placeholder=\"johndoe@gmail.com\"\n              />\n            </div>\n            <div>\n              <label>Username</label>\n              <input id=\"tbRegisUser\" type=\"text\" placeholder=\"jdoe123!\" />\n            </div>\n            <div>\n              <label>Password</label>\n              <input id=\"tbRegisPass\" type=\"text\" placeholder=\"Password\" />\n            </div>\n            <div>\n              <label>Confirm Password</label>\n              <input\n                id=\"tbRegisPassConf\"\n                type=\"password\"\n                placeholder=\"Password Confirmation\"\n              />\n            </div>\n            <div>\n              <button>Register</button>\n            </div>\n            <div>\n              <p>Already a member?</p>\n              <button\n                onClick={() => dispatch(loginRegisterToggleAction(\"login\"))}\n              >\n                Login to account\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    } else if (loginSwitchState === \"forgot\") {\n      return (\n        <div>\n          <div>\n            <h2>Forgot Password?</h2>\n            <p>Enter your email and we will email you instructions shortly.</p>\n          </div>\n          <div>\n            <div>\n              <label>Email</label>\n              <input\n                id=\"tbForgotEmail\"\n                type=\"text\"\n                placeholder=\"johndoe@gmail.com\"\n              />\n            </div>\n            <div>\n              <button>Send reset link</button>\n            </div>\n          </div>\n          <div>\n            <button\n              onClick={() => dispatch(loginRegisterToggleAction(\"login\"))}\n            >\n              {\"<\"} Back to Login\n            </button>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div className=\"login-wrapper\">\n      {/* Form */}\n      <div className=\"login-box\">{handleLoginSwitch()}</div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Groups/GroupsPage.js",["541"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport DashFooter from \"../Dash/DashFooter\";\n\nimport GroupFeedView from \"../Groups/GroupFeedView\";\nimport GroupFeedEdit from \"../Groups/GroupFeedEdit\";\nimport GroupAboutView from \"../Groups/GroupAboutView\";\nimport GroupAboutEdit from \"../Groups/GroupAboutEdit\";\nimport GroupMembersView from \"../Groups/GroupMembersView\";\nimport RandomString from \"../../RandomString\";\n\n// Router stuff\nimport { Switch, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport {\n  groups_Collection,\n  groupReqQueue_Collection,\n} from \"../../../utils/firebase\";\nimport {\n  checkJoinedGroupStatusAction,\n  checkRequestedGroupStatusAction,\n} from \"../../../redux/actions\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nexport default function GroupsPage() {\n  let { url } = useRouteMatch();\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const group = useSelector((state) => state.storeSingleGroupReducer);\n  const joined = useSelector((state) => state.checkJoinedGroupStatusReducer);\n  const requested = useSelector(\n    (state) => state.checkRequestedGroupStatusReducer\n  );\n\n  const joinGroup = () => {\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const reqID = `GroupReq${rand1}${rand2}`;\n\n    // Send Request to DB\n    groupReqQueue_Collection\n      .doc(reqID)\n      .set({\n        MemberID: teacherAuthID,\n        HostID: group.Host,\n        isAccepted: false,\n      })\n      .catch((err) => console.log(err));\n\n    // Dispatch\n    dispatch(checkRequestedGroupStatusAction(true));\n  };\n  const disconnectGroup = () => {\n    if (teacherAuthID === group.Host) {\n      // Show modal\n      alert(\n        \"Our apologies. You are not able to disconnect from this group since you are the host.\"\n      );\n    } else {\n      // Remove from DB\n      groups_Collection\n        .doc(group.id)\n        .collection(\"Members\")\n        .get()\n        .then((snapshot) => {\n          const memberData = firebaseLooper(snapshot);\n          memberData.forEach((mem) => {\n            if (mem.Username === teacherAuthID) {\n              groups_Collection\n                .doc(group.id)\n                .collection(\"Members\")\n                .doc(mem.id)\n                .delete()\n                .catch((err) => console.log(err));\n            }\n          });\n        })\n        .catch((err) => console.log(err));\n    }\n\n    // Dispatch\n    dispatch(checkJoinedGroupStatusAction(false));\n  };\n\n  const checkJoined = () => {\n    groups_Collection\n      .doc(group.id)\n      .collection(\"Members\")\n      .get()\n      .then((snapshot) => {\n        const memberData = firebaseLooper(snapshot);\n        memberData.forEach((mem) => {\n          if (mem.Username === teacherAuthID) {\n            dispatch(checkJoinedGroupStatusAction(true));\n          }\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n  const checkRequested = () => {\n    groupReqQueue_Collection\n      .get()\n      .then((snapshot) => {\n        const queueData = firebaseLooper(snapshot);\n        queueData.forEach((q) => {\n          if (q.MemberID === teacherAuthID) {\n            dispatch(checkRequestedGroupStatusAction(true));\n          }\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n    checkJoined();\n    checkRequested();\n  }, []);\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      {/* Main Content */}\n      <div>\n        <div>\n          <h1>{group.Name}</h1>\n        </div>\n        <div>\n          {joined ? (\n            <button onClick={disconnectGroup}>Disconnect</button>\n          ) : requested ? (\n            <button enabled=\"false\">Request Sent</button>\n          ) : (\n            <button onClick={joinGroup}>Join</button>\n          )}\n        </div>\n      </div>\n\n      <div>\n        <ul>\n          <li>\n            <Link to={`${url}/feed`}>Feed</Link>\n          </li>\n          <li>\n            <Link to={`${url}/about`}>About</Link>\n          </li>\n          <li>\n            <Link to={`${url}/members`}>Members</Link>\n          </li>\n        </ul>\n      </div>\n\n      <div>\n        <Switch>\n          {/* Feed */}\n          <Route path={`${url}/feed`}>\n            <GroupFeedView />\n          </Route>\n          <Route path={`${url}/feed-edit`}>\n            <GroupFeedEdit />\n          </Route>\n          {/* About */}\n          <Route path={`${url}/about`}>\n            <GroupAboutView />\n          </Route>\n          <Route path={`${url}/about-edit`}>\n            <GroupAboutEdit />\n          </Route>\n          {/* Members */}\n          <Route path={`${url}/members`}>\n            <GroupMembersView />\n          </Route>\n        </Switch>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Milestones/MilestoneAssign.js",["542","543"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport DashFooter from \"../Dash/DashFooter\";\nimport {\n  students_Collection,\n  teachers_Collection,\n} from \"../../../utils/firebase\";\nimport { storeTeacherMilestonesAssigneesAction } from \"../../../redux/actions\";\nimport { firebaseLooper } from \"../../../utils/tools\";\nimport firestore from \"../../../utils/firebase\";\n\nexport default function MilestoneAssign() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const milestone = useSelector(\n    (state) => state.storeTeacherSingleMilestoneSegReducer\n  );\n  const assignees = useSelector(\n    (state) => state.storeTeacherMilestonesAssigneesReducer\n  );\n\n  // GET\n  const getAllStudents = () => {\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Students\")\n      .get()\n      .then((snapshot) => {\n        const studentData = firebaseLooper(snapshot);\n        let studIDs = [];\n        studentData.forEach((stud) => {\n          studIDs.push(stud.id);\n        });\n        const filtered = studIDs.filter(\n          (e) => !milestone.AssignedTo.includes(e)\n        );\n        console.log(filtered);\n        dispatch(storeTeacherMilestonesAssigneesAction(filtered));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  //   HANDLE\n  const handleStudentList = () => {\n    return assignees.map((assignee, i) => {\n      return (\n        <button onClick={assignMilestone} key={i} id={assignee}>\n          {assignee}\n        </button>\n      );\n    });\n  };\n\n  //   POST\n  const assignMilestone = (event) => {\n    const studID = event.target.getAttribute(\"id\");\n\n    let currAssignees = [...milestone.AssignedTo];\n    currAssignees.push(studID);\n\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Milestones\")\n      .doc(milestone.id)\n      .update({\n        AssignedTo: currAssignees,\n      })\n      .catch((err) => console.log(err));\n\n    students_Collection\n      .doc(studID)\n      .collection(\"Milestones\")\n      .doc(milestone.id)\n      .set({\n        Name: milestone.Name,\n      })\n      .catch((err) => console.log(err));\n\n    milestone.Tasks.forEach((task) => {\n      students_Collection\n        .doc(studID)\n        .collection(\"Milestones\")\n        .doc(milestone.id)\n        .collection(\"MilestoneTasks\")\n        .doc(task.id)\n        .set({\n          Task: task.Task,\n          Desc: task.Desc,\n          isComplete: false,\n        })\n        .catch((err) => console.log(err));\n    });\n\n    // Dispatch\n    const allAssignees = [...assignees];\n    const filtered = allAssignees.filter((a) => a !== studID);\n\n    dispatch(storeTeacherMilestonesAssigneesAction(filtered));\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n\n    getAllStudents();\n  }, []);\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      <div className=\"content\">\n        <button onClick={() => history.push(\"/teacher-milestones\")}>\n          Back\n        </button>\n        <h1>Assign Milestone Segment</h1>\n\n        <p>\n          Please choose the student you want to assign {milestone.Name} Miletone\n          Segment to.\n        </p>\n\n        <div>{handleStudentList()}</div>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Articles/ArticlesMain.js",["544"],"import React, { useEffect } from \"react\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport DashFooter from \"../Dash/DashFooter\";\n\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport ArticleBlock from \"./ArticleBlock\";\n\nexport default function ArticlesMain() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n\n  const articleState = useSelector(\n    (state) => state.storeTeacherArticlesGeneralInfoReducer\n  );\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n  }, []);\n\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      {/* Content */}\n      <div>\n        <div>\n          <input id=\"tbArticleSearch\" type=\"text\" placeholder=\"Search\" />\n          <button>Create New Article</button>\n        </div>\n        <div>\n          {articleState.map((art, i) => {\n            return (\n              <ArticleBlock key={i} mainTopic={art.MainTopic} desc={art.Desc} />\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Settings/SettingsMain.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Footer.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Dash/AnnouncementBox.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/utils/tools.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Profile/ProfileFeedEdit.js",["545"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { storeProfileFeedPostDataAction } from \"../../../redux/actions\";\nimport { teachers_Collection } from \"../../../utils/firebase\";\nimport GetToday from \"../../GetToday\";\n\nexport default function ProfileFeedEdit() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  //   States\n  const singlePostState = useSelector(\n    (state) => state.storeProfileFeedSinglePostDataReducer\n  );\n  const allPostsState = useSelector(\n    (state) => state.storeProfileFeedPostDataReducer\n  );\n\n  const saveSinglePost = () => {\n    const postText = document.querySelector(\"#tbPostText\").value;\n    const postObj = {\n      ...singlePostState,\n      Text: postText,\n      Date: GetToday(),\n    };\n    // Save to DB\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"Feed\")\n      .collection(\"Posts\")\n      .doc(singlePostState.id)\n      .set({\n        Likes: singlePostState.Likes,\n        Text: postText,\n        Date: GetToday(),\n      })\n      .catch((err) => console.log(err));\n\n    allPostsState.forEach((post) => {\n      if (post.id === singlePostState.id) {\n        post = {\n          ...postObj,\n        };\n        dispatch(storeProfileFeedPostDataAction(allPostsState));\n      }\n    });\n\n    history.push(\"/teacher-profile/feed\");\n  };\n\n  // REMOVE\n  const removeSinglePost = () => {\n    const postID = singlePostState.id;\n\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"Feed\")\n      .collection(\"Posts\")\n      .doc(postID)\n      .delete()\n      .catch((err) => console.log(err));\n\n    const all = [...allPostsState];\n    const newArray = all.filter((post) => post.id !== postID);\n\n    dispatch(storeProfileFeedPostDataAction(newArray));\n    history.push(\"/teacher-profile/feed\");\n  };\n\n  // HANDLE\n  const handleCurrPage = () => {\n    let feedBtn = document.querySelector(\"#link-feed\");\n    feedBtn.classList.add(\"navy-back\");\n\n    let aboutBtn = document.querySelector(\"#link-about\");\n    aboutBtn.classList.remove(\"navy-back\");\n\n    let awardsBtn = document.querySelector(\"#link-awards\");\n    awardsBtn.classList.remove(\"navy-back\");\n\n    let galleryBtn = document.querySelector(\"#link-gallery\");\n    galleryBtn.classList.remove(\"navy-back\");\n\n    let reviewsBtn = document.querySelector(\"#link-reviews\");\n    reviewsBtn.classList.remove(\"navy-back\");\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n\n    handleCurrPage();\n  }, []);\n\n  return (\n    <div className=\"post-edit-wrapper\">\n      <button\n        className=\"btn-back maroon-back\"\n        onClick={() => {\n          history.push(\"/teacher-profile/feed\");\n        }}\n      >\n        Back\n      </button>\n\n      <div className=\"post-create\">\n        <h1 className=\"post-create-head\">Edit Post</h1>\n        <textarea\n          className=\"ta\"\n          id=\"tbPostText\"\n          defaultValue={singlePostState.Text}\n        ></textarea>\n        <div className=\"btn-wrapper\">\n          \n          <button className=\"btn-remove\" onClick={removeSinglePost}>\n            Remove\n          </button>\n          <button className=\"btn-dark\" onClick={saveSinglePost}>\n            Save\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Invoices/InvoiceBlock.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Groups/GroupFeedEdit.js",["546","547"],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Profile/ProfileAboutView.js",["548","549"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  storeStudentAboutAction,\n  storeStudentExpAction,\n} from \"../../../redux/actions\";\nimport { students_Collection } from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nexport default function ProfileAboutView() {\n  const studentAuthID = useSelector((state) => state.storeStudentAuthIDReducer);\n  const user = useSelector((state) => state.storeStudentUserDataReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const about = useSelector((state) => state.storeStudentAboutReducer);\n  const exps = useSelector((state) => state.storeStudentExpReducer);\n\n  // GET\n  const getAllStudentAbout = () => {\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        data.forEach((d) => {\n          if (d.id === \"About\") {\n            dispatch(storeStudentAboutAction(d));\n          }\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n  const getAllStudentExp = () => {\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"Experience\")\n      .collection(\"ExpBlocks\")\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        dispatch(storeStudentExpAction(data));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  //   HANDLE\n  const handleExpBlocks = () => {\n    return exps.map((exp, i) => {\n      return (\n        <div key={i}>\n          <h3>{exp.Institution}</h3>\n          <p>{exp.Desc}</p>\n          <p>Started: {exp.Start.toDate().toString().substr(4, 11)}</p>\n          <p>Ended: {exp.End.toDate().toString().substr(4, 11)}</p>\n        </div>\n      );\n    });\n  };\n  const handleInstruments = () => {\n    if (about.Instruments) {\n      return about.Instruments.map((ins, i) => {\n        return <li key={i}>{ins}</li>;\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (!studentAuthID) {\n      history.push(\"/studentdash\");\n      return;\n    }\n\n    getAllStudentAbout();\n    getAllStudentExp();\n  }, []);\n\n  return (\n    <div>\n      <button onClick={() => history.push(\"/student-profile/about-edit\")}>\n        Edit\n      </button>\n      <br />\n      {/* About */}\n      <div>\n        <h2>About</h2>\n        <p>{about.About}</p>\n      </div>\n\n      {/* Experience */}\n      <div>\n        <h2>Experience</h2>\n        <div>{handleExpBlocks()}</div>\n      </div>\n\n      {/* Personal */}\n      <div>\n        <h2>Personal</h2>\n        <p>{about.Location}</p>\n        <h2>Instruments</h2>\n        {handleInstruments()}\n        <p>\n          Joined:{\" \"}\n          {about.Joined ? about.Joined.toDate().toString().substr(4, 11) : null}\n        </p>\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/TeacherDash.js",["550","551","552","553","554","555"],"import React, { useEffect } from \"react\";\n\nimport TopBar from \"./Teachers/Dash/TopBar\";\nimport AnnouncementBox from \"./Teachers/Dash/AnnouncementBox\";\nimport SimpleStats from \"./Teachers/Dash/SimpleStats\";\nimport RecentActivity from \"./Teachers/Dash/RecentActivity\";\nimport RecentInvoices from \"./Teachers/Dash/RecentInvoices\";\nimport Earnings from \"./Teachers/Dash/Earnings\";\nimport Achievement from \"./Teachers/Dash/Achievement\";\nimport UpcomingEvents from \"./Teachers/Dash/UpcomingEvents\";\n\nimport DashFooter from \"./Teachers/Dash/DashFooter\";\nimport \"./TeacherDash.css\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  storeTeacherAuthIDAction,\n  storeTeacherForumsGeneralInfoAction,\n  storeTeacherSettingsGeneralInfoAction,\n  storeTeacherStatisticsGeneralInfoAction,\n  userDataAction,\n  storeAccountTypeAction,\n  isLoggedInAction,\n} from \"../redux/actions\";\n\nimport {\n  teachers_Collection,\n  groups_Collection,\n  users_Collection,\n} from \"../utils/firebase\";\nimport { firebaseLooper } from \"../utils/tools\";\n\nexport default function TeacherDash() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const state = useSelector(\n    (state) => state.storeTeacherStudentGeneralInfoReducer\n  );\n  // All Data Needed\n\n  // Student Collection\n  const getAllUserData = () => {\n    users_Collection\n      .where(\"AuthID\", \"==\", teacherAuthID)\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        dispatch(userDataAction(data[0]));\n        dispatch(storeTeacherAuthIDAction(data[0].AuthID));\n       \n      })\n      .catch((err) => console.log(err));\n  };\n  const getAllStatisticData = () => {\n    const statistics_Collection = teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Statistics\");\n    statistics_Collection\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        dispatch(storeTeacherStatisticsGeneralInfoAction(data));\n      })\n      .catch((err) => console.log(err));\n  };\n  const getAllSettingData = () => {\n    const settings_Collection = teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Settings\");\n    settings_Collection\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        dispatch(storeTeacherSettingsGeneralInfoAction(data));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/login\");\n      return;\n    }\n    getAllUserData();\n    getAllStatisticData();\n    getAllSettingData();\n  }, []);\n\n  return (\n    //   This entire component will have a background. The pieces inside will be another color, in chunks.\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      {/* Main Content */}\n      <div className=\"content\">\n        {/* Announcement Box */}\n        <div>\n          <AnnouncementBox />\n        </div>\n\n        {/* Simple Stats */}\n        <div>\n          <SimpleStats />\n        </div>\n\n        {/* Recent Student,Group,Forum Activity */}\n        <div>\n          <RecentActivity />\n        </div>\n\n        {/* Recent Invoices */}\n        <div>\n          <RecentInvoices />\n        </div>\n\n        {/* Earnings, Achievement, Upcoming Events*/}\n        <div>\n          {/* Earnings */}\n          <div>\n            <Earnings />\n          </div>\n\n          {/* Achievement */}\n          <div>\n            <Achievement />\n          </div>\n\n          {/* Upcoming Events */}\n          <div>\n            <UpcomingEvents />\n          </div>\n        </div>\n      </div>\n\n      {/* Footer */}\n      <DashFooter />\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Assignments/StudentAssignmentView.js",["556","557"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TopBar from \"../TopBar\";\nimport Footer from \"../Footer\";\nimport GetToday from \"../../GetToday\";\n\nimport Notice from \"../../MiscComponents/Notice\";\n\nimport {\n  storeStudentAssignmentPracticeRatingAction,\n  storeStudentAssignmentsInfoAction,\n} from \"../../../redux/actions\";\nimport { students_Collection } from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nexport default function StudentAssignmentView() {\n  const studentAuthID = useSelector((state) => state.storeStudentAuthIDReducer);\n  const user = useSelector((state) => state.storeStudentUserDataReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const assignment = useSelector(\n    (state) => state.storeStudentSingleAssignmentReducer\n  );\n  const rating = useSelector(\n    (state) => state.storeStudentAssignmentPracticeRatingReducer\n  );\n  const assignmentsInfo = useSelector(\n    (state) => state.storeStudentAssignmentsInfoReducer\n  );\n\n  // HANDLE\n  const handleAssignmentDetails = () => {\n    if (assignment.Type === \"Textual\") {\n      return (\n        <div>\n          <h3>Prompt:</h3>\n          <h4>{assignment.Text}</h4>\n\n          <h3>Response:</h3>\n          <textarea\n            id=\"taTextualRes\"\n            placeholder=\"Type response here...\"\n          ></textarea>\n\n          <button>Submit</button>\n        </div>\n      );\n    } else if (assignment.Type === \"Practice\") {\n      return (\n        <div>\n          <h3>Prompt:</h3>\n          <h4>{assignment.Text}</h4>\n\n          <h3>Repertoire:</h3>\n          <p>{assignment.Repertoire}</p>\n\n          <h3>Composer:</h3>\n          <p>{assignment.Composer}</p>\n\n          <h3>Tempo:</h3>\n          <p>{assignment.Tempo}</p>\n\n          <Notice message=\"Before you continue, please make sure to complete the assignment. The form below will require the results of your practice\" />\n\n          {/* Survey */}\n          <div>\n            <h3>How long did you practice this assignment?</h3>\n            <input\n              id=\"tbPracTime\"\n              type=\"text\"\n              placeholder=\"Practice Time\"\n            />{\" \"}\n            minutes\n            <h3>\n              How would you rate your overall practice for this assignment?\n            </h3>\n            <p>\n              1 - Practice was not effective. <br />\n              10 - Practice was very effective.\n            </p>\n            <div>\n              <button id=\"1\" onClick={handleRating}>\n                1\n              </button>\n              <button id=\"2\" onClick={handleRating}>\n                2\n              </button>\n              <button id=\"3\" onClick={handleRating}>\n                3\n              </button>\n              <button id=\"4\" onClick={handleRating}>\n                4\n              </button>\n              <button id=\"5\" onClick={handleRating}>\n                5\n              </button>\n              <button id=\"6\" onClick={handleRating}>\n                6\n              </button>\n              <button id=\"7\" onClick={handleRating}>\n                7\n              </button>\n              <button id=\"8\" onClick={handleRating}>\n                8\n              </button>\n              <button id=\"9\" onClick={handleRating}>\n                9\n              </button>\n              <button id=\"10\" onClick={handleRating}>\n                10\n              </button>\n            </div>\n            <p>{rating !== \"\" ? `Rating: ${rating}` : null}</p>\n            <h3>Any concerns with your practice?</h3>\n            <textarea\n              id=\"taPracticeConcerns\"\n              placeholder=\"Type message here...\"\n            ></textarea>\n            <br />\n            <br />\n            <button className=\"btn-navy\" onClick={submitAssignment}>\n              Submit Assignment\n            </button>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  const handleRating = (event) => {\n    const ra = event.target.getAttribute(\"id\");\n\n    dispatch(storeStudentAssignmentPracticeRatingAction(ra));\n  };\n\n  //   POST\n  const submitAssignment = () => {\n    if (assignment.Type === \"Textual\") {\n      const response = document.querySelector(\"#taTextualRes\").value;\n\n      students_Collection\n        .doc(studentAuthID)\n        .collection(\"AssignmentsInfo\")\n        .where(\"Name\", \"==\", assignment.Name)\n        .get()\n        .then((snapshot) => {\n          const resData = firebaseLooper(snapshot);\n          resData.forEach((data) => {\n            students_Collection\n              .doc(studentAuthID)\n              .collection(\"AssignmentsInfo\")\n              .doc(data.id)\n              .update({\n                isComplete: true,\n                Response: response,\n                CompletionDate: GetToday(),\n              })\n              .catch((err) => console.log(err));\n          });\n        })\n        .catch((err) => console.log(err));\n    } else if (assignment.Type === \"Practice\") {\n      const pracTime = parseInt(\n        document.querySelector(\"#tbPracTime\").value,\n        10\n      );\n      const ra = rating;\n      const concerns = document.querySelector(\"#taPracticeConcerns\").value;\n\n      // Save to DB\n\n      students_Collection\n        .doc(studentAuthID)\n        .collection(\"AssignmentsInfo\")\n        .where(\"Name\", \"==\", assignment.Name)\n        .get()\n        .then((snapshot) => {\n          const resData = firebaseLooper(snapshot);\n          resData.forEach((data) => {\n            students_Collection\n              .doc(studentAuthID)\n              .collection(\"AssignmentsInfo\")\n              .doc(data.id)\n              .update({\n                isComplete: true,\n                Time: pracTime,\n                Rating: ra,\n                Concerns: concerns,\n                CompletionDate: GetToday(),\n              })\n              .catch((err) => console.log(err));\n          });\n        })\n        .catch((err) => console.log(err));\n    }\n\n    const assignmentsInfoThings = [...assignmentsInfo];\n    assignmentsInfoThings.forEach((a) => {\n      if (a.Name === assignment.Name) {\n        a.isComplete = true;\n      }\n    });\n    dispatch(storeStudentAssignmentsInfoAction(assignmentsInfoThings));\n\n    history.push(\"/student-assignments\");\n  };\n\n  useEffect(() => {\n    if (!studentAuthID) {\n      history.push(\"/studentdash\");\n      return;\n    }\n  }, []);\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      {/* Content */}\n      <div>\n        <h1>{assignment.Name}</h1>\n        <p>{assignment.Desc}</p>\n        <div>{handleAssignmentDetails()}</div>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Assignments/AssignmentView.js",["558"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { firebaseLooper } from \"../../../utils/tools\";\nimport {\n  students_Collection,\n  teachers_Collection,\n} from \"../../../utils/firebase\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport DashFooter from \"../Dash/DashFooter\";\nimport {\n  storeTeacherAssignmentAssigneesAction,\n  storeTeacherAssignmentsGeneralInfoAction,\n  storeTeacherStudentGeneralInfoAction,\n  toggleAssigneeFormAction,\n} from \"../../../redux/actions\";\nimport RandomString from \"../../RandomString\";\nimport firebase from \"../../../utils/firebase\";\n\nexport default function AssignmentView() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const toggleAssigneeForm = useSelector(\n    (state) => state.toggleAssigneeFormReducer\n  );\n\n  const assignment = useSelector(\n    (state) => state.storeTeacherSingleAssignmentReducer\n  );\n  const students = useSelector(\n    (state) => state.storeTeacherStudentGeneralInfoReducer\n  );\n  const assignees = useSelector(\n    (state) => state.storeTeacherAssignmentAssigneesReducer\n  );\n\n  //   HANDLE\n  const handleAssignment = () => {\n    return (\n      <div>\n        {assignment.Date ? (\n          <p>Assigned: {assignment.Date.toDate().toString().substr(4, 11)}</p>\n        ) : null}\n        {assignment.Due ? (\n          <p>Due: {assignment.Due.toDate().toString().substr(4, 11)}</p>\n        ) : null}\n        <p>Assignment Type: {assignment.Type}</p>\n        <div>{handleAssignmentType()}</div>\n        <div>\n          <h3>Assignees:</h3>\n          {assignment.Assignees\n            ? assignees.map((stud, i) => {\n                return <p key={i}>{stud}</p>;\n              })\n            : null}\n        </div>\n      </div>\n    );\n  };\n  const handleAssignmentType = () => {\n    if (assignment.Type === \"Textual\") {\n      return (\n        <div>\n          <h3>Assignment:</h3>\n          <p>{assignment.Text}</p>\n        </div>\n      );\n    } else if (assignment.Type === \"Practice\") {\n      return (\n        <div>\n          <div>\n            <h3>Assignment:</h3>\n            <p>{assignment.Text}</p>\n          </div>\n          <div>\n            <h3>Repertoire:</h3>\n            <p>{assignment.Repertoire}</p>\n          </div>\n          <div>\n            <h3>Composer:</h3>\n            <p>{assignment.Composer}</p>\n          </div>\n          <div>\n            <h3>Tempo:</h3>\n            <p>{assignment.Tempo}</p>\n          </div>\n          <div>\n            <h3>Max Practice Time</h3>\n            <p>{assignment.MaxTime}</p>\n          </div>\n        </div>\n      );\n    }\n  };\n  const handleAssigneeForm = () => {\n    if (assignees.length > 0) {\n      const studs = [...students];\n      const distinct = studs.filter((item) => !assignees.includes(item.id));\n\n      return distinct.map((dis, i) => {\n        return (\n          <div key={i}>\n            <p>{dis.id}</p>\n            <button onClick={addAssignee} id={dis.id}>\n              Assign\n            </button>\n          </div>\n        );\n      });\n    } else {\n      return students.map((stud, i) => {\n        return (\n          <div key={i}>\n            <p>{stud.id}</p>\n            <button onClick={addAssignee} id={stud.id}>\n              Assign\n            </button>\n          </div>\n        );\n      });\n    }\n  };\n\n  // GET\n  const getAllStudents = () => {\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Students\")\n      .get()\n      .then((snapshot) => {\n        const studList = firebaseLooper(snapshot);\n        dispatch(storeTeacherStudentGeneralInfoAction(studList));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  // POST\n  const addAssignee = (event) => {\n    let valid = true;\n    const studID = event.target.getAttribute(\"id\");\n    assignees.forEach((assignee) => {\n      if (studID === assignee) {\n        valid = false;\n      }\n    });\n\n    if (valid) {\n      const rand1 = RandomString();\n      const rand2 = RandomString();\n      const assInfoID = `AssInfo${rand1}${rand2}`;\n\n      // Save to DB\n\n      students_Collection\n        .doc(studID)\n        .collection(\"AssignmentsInfo\")\n        .doc(assInfoID)\n        .set({\n          Teacher: teacherAuthID,\n          AssID: assignment.id,\n          Name: assignment.Name,\n          Desc: assignment.Desc,\n          isComplete: false,\n        })\n        .catch((err) => console.log(err));\n\n      teachers_Collection\n        .doc(teacherAuthID)\n        .collection(\"Assignments\")\n        .doc(assignment.id)\n        .update({\n          Assignees: firebase.firestore.FieldValue.arrayUnion(studID),\n        })\n        .catch((err) => console.log(err));\n\n      const allAssignees = [...assignment.Assignees];\n      allAssignees.push(studID);\n      dispatch(storeTeacherAssignmentAssigneesAction(allAssignees));\n\n      const tempObj = {\n        ...assignment,\n        Assignees: allAssignees,\n      };\n\n      dispatch(storeTeacherAssignmentsGeneralInfoAction(tempObj));\n    }\n  };\n\n  //   NAV\n  const navAssignmentEdit = () => {\n    history.push(\"teacher-assignment-edit\");\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n\n    getAllStudents();\n  }, []);\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n      <button\n        className=\"btn-lime\"\n        onClick={() => history.push(\"/teacher-assignments\")}\n      >\n        Back\n      </button>\n      <button onClick={navAssignmentEdit}>Edit Assignment</button>\n      <h1>{assignment.Name}</h1>\n      <div>{handleAssignment()}</div>\n      <br />\n      <div>\n        <button\n          onClick={() => dispatch(toggleAssigneeFormAction())}\n          className=\"btn-navy\"\n        >\n          {toggleAssigneeForm ? \"Close\" : \"Add Assignee\"}\n        </button>\n        {toggleAssigneeForm ? handleAssigneeForm() : null}\n      </div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Messages/MessageThreadView.js",["559"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport DashFooter from \"../Dash/DashFooter\";\nimport GetToday from \"../../GetToday\";\nimport RandomString from \"../../RandomString\";\nimport {\n  students_Collection,\n  teachers_Collection,\n} from \"../../../utils/firebase\";\nimport { storeTeacherSingleThreadAction } from \"../../../redux/actions\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nexport default function MessageThreadView() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const thread = useSelector((state) => state.storeTeacherSingleThreadReducer);\n\n  //   HANDLE\n  const handleMessageList = () => {\n    if (thread.Messages) {\n      return thread.Messages.map((message, i) => {\n        return (\n          <div key={i}>\n            <h4\n              style={\n                message.Sender === teacherAuthID\n                  ? { color: \"blue\" }\n                  : { color: \"rgba(0,0,0,0.6)\" }\n              }\n            >\n              {message.Sender}\n            </h4>\n            <p>{message.Text}</p>\n          </div>\n        );\n      });\n    }\n  };\n\n  //   POST\n  const sendMessage = () => {\n    const message = document.querySelector(\"#tbMessage\").value;\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const messID = `Mess${rand1}${rand2}`;\n    // Save to Teacher DB\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Messages\")\n      .doc(thread.id)\n      .collection(\"MessageBlocks\")\n      .doc(messID)\n      .set({\n        Sender: teacherAuthID,\n        Text: message,\n        Receiver: thread.Recipient,\n        Date: GetToday(),\n      })\n      .catch((err) => console.log(err));\n\n    // Save to Student DB\n    students_Collection\n      .doc(thread.Recipient)\n      .collection(\"Messages\")\n      .where(\"Recipient\", \"==\", teacherAuthID)\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        if (snapshot.size > 0) {\n          data.forEach((d) => {\n            if (d.Recipient === teacherAuthID) {\n              students_Collection\n                .doc(thread.Recipient)\n                .collection(\"Messages\")\n                .doc(d.id)\n                .collection(\"MessageBlocks\")\n                .doc(messID)\n                .set({\n                  Sender: teacherAuthID,\n                  Text: message,\n                  Receiver: thread.Recipient,\n                  Date: GetToday(),\n                })\n                .catch((err) => console.log(err));\n            }\n          });\n        } else {\n          students_Collection\n            .doc(thread.Recipient)\n            .collection(\"Messages\")\n            .doc(thread.id)\n            .set({\n              Recipient: thread.Recipient,\n            })\n            .catch((err) => console.log(err));\n\n          students_Collection\n            .doc(thread.Recipient)\n            .collection(\"Messages\")\n            .doc(thread.id)\n            .collection(\"MessageBlocks\")\n            .doc(messID)\n            .set({\n              Sender: teacherAuthID,\n              Text: message,\n              Receiver: thread.Recipient,\n              Date: GetToday(),\n            })\n            .catch((err) => console.log(err));\n        }\n      })\n      .catch((err) => console.log(err));\n\n    //   Dispatch\n    let allMess = [];\n    if (thread.Messages) {\n      allMess = [...thread.Messages];\n    }\n    allMess.push({\n      id: messID,\n      Sender: teacherAuthID,\n      Text: message,\n      Receiver: thread.Recipient,\n      Date: GetToday(),\n    });\n\n    const tempObj = { ...thread };\n    tempObj.Messages = allMess;\n\n    dispatch(storeTeacherSingleThreadAction(tempObj));\n    document.querySelector(\"#tbMessage\").value = \"\";\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n  }, []);\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      {/* Thread */}\n      <div>\n        <div>\n          <button onClick={() => history.push(\"/teacher-messages\")}>\n            Back\n          </button>\n          <h1>Recipient: {thread.Recipient}</h1>\n        </div>\n\n        <div>{handleMessageList()}</div>\n        <hr />\n        <div>\n          <input\n            id=\"tbMessage\"\n            type=\"text\"\n            placeholder=\"Type message here...\"\n          />\n          <button onClick={sendMessage}>Send</button>\n        </div>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/GetToday.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/utils/firebase.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Profile/ProfileAwardsView.js",["560"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { teachers_Collection } from \"../../../utils/firebase\";\nimport {\n  storeAwardListAction,\n  storeCertListAction,\n} from \"../../../redux/actions\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nexport default function ProfileAwardsView() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const awards = useSelector((state) => state.storeAwardListReducer);\n  const certs = useSelector((state) => state.storeCertListReducer);\n\n  // GET\n  const getAllAwards = () => {\n    const awards_Collection = teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"Awards\")\n      .collection(\"AwardList\");\n    const cert_Collection = teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"Awards\")\n      .collection(\"CertificationList\");\n\n    awards_Collection\n      .get()\n      .then((snapshot) => {\n        const awardData = firebaseLooper(snapshot);\n        dispatch(storeAwardListAction(awardData));\n      })\n      .catch((err) => console.log(err));\n\n    cert_Collection\n      .get()\n      .then((snapshot) => {\n        const certData = firebaseLooper(snapshot);\n        dispatch(storeCertListAction(certData));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  // HANDLE\n  const handleCurrPage = () => {\n    let feedBtn = document.querySelector(\"#link-feed\");\n    feedBtn.classList.remove(\"navy-back\");\n\n    let aboutBtn = document.querySelector(\"#link-about\");\n    aboutBtn.classList.remove(\"navy-back\");\n\n    let awardsBtn = document.querySelector(\"#link-awards\");\n    awardsBtn.classList.add(\"navy-back\");\n\n    let galleryBtn = document.querySelector(\"#link-gallery\");\n    galleryBtn.classList.remove(\"navy-back\");\n\n    let reviewsBtn = document.querySelector(\"#link-reviews\");\n    reviewsBtn.classList.remove(\"navy-back\");\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n    getAllAwards();\n    handleCurrPage();\n  }, []);\n  return (\n    <div>\n      <div>\n        <button\n          onClick={() => {\n            history.push(\"/teacher-profile/edit-awards\");\n          }}\n        >\n          Edit\n        </button>\n      </div>\n      <div>\n        <h2>Awards</h2>\n        {awards.map((award, i) => {\n          return (\n            <div key={i}>\n              <h3>{award.Name}</h3>\n              <p>Location: {award.Location}</p>\n              <p>Date: {award.Date.toDate().toString().substr(4, 11)}</p>\n              <p>Description: {award.Desc}</p>\n            </div>\n          );\n        })}\n      </div>\n      <div>\n        <h2>Certifications</h2>\n        {certs.map((cert, i) => {\n          return (\n            <div key={i}>\n              <h3>{cert.Name}</h3>\n              <p>Location: {cert.Location}</p>\n              <p>Date: {cert.Date.toDate().toString().substr(4, 11)}</p>\n              <p>Description: {cert.Desc}</p>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Profile/ProfileAwardsEdit.js",["561"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  storeAwardListAction,\n  storeCertListAction,\n  toggleNewAwardFormAction,\n  toggleNewCertFormAction,\n} from \"../../../redux/actions\";\nimport { teachers_Collection } from \"../../../utils/firebase\";\n\nimport InputDateFormatter from \"../../InputDateFormatter\";\nimport RandomString from \"../../RandomString\";\nimport FirebaseDate from \"../../FirebaseDate\";\n\nexport default function ProfileAwardsEdit() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const awards = useSelector((state) => state.storeAwardListReducer);\n  const certs = useSelector((state) => state.storeCertListReducer);\n\n  const toggleAwardForm = useSelector(\n    (state) => state.toggleNewAwardFormReducer\n  );\n  const toggleCertForm = useSelector((state) => state.toggleNewCertFormReducer);\n\n  const applyNewAward = () => {\n    const awardName = document.querySelector(\"#tbAwardNameText\").value;\n    const awardLocation = document.querySelector(\"#tbAwardLocationText\").value;\n    const awardDate = document.querySelector(\"#daAwardDateNew\").value;\n    const awardDesc = document.querySelector(\"#taAwardDescText\").value;\n\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const awardID = `Award${rand1}${rand2}`;\n\n    // Save to DB\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"Awards\")\n      .collection(\"AwardList\")\n      .doc(awardID)\n      .set({\n        Name: awardName,\n        Location: awardLocation,\n        Date: FirebaseDate(awardDate),\n        Desc: awardDesc,\n      })\n      .catch((err) => console.log(err));\n\n    // Dispatch\n    const allAwards = [...awards];\n    allAwards.push({\n      id: awardID,\n      Name: awardName,\n      Location: awardLocation,\n      Date: FirebaseDate(awardDate),\n      Desc: awardDesc,\n    });\n\n    dispatch(storeAwardListAction(allAwards));\n    dispatch(toggleNewAwardFormAction());\n  };\n\n  const applyNewCert = () => {\n    const certName = document.querySelector(\"#tbCertNameText\").value;\n    const certLocation = document.querySelector(\"#tbCertLocationText\").value;\n    const certDate = document.querySelector(\"#daCertDateNew\").value;\n    const certDesc = document.querySelector(\"#taCertDescText\").value;\n\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const certID = `Cert${rand1}${rand2}`;\n\n    // Save to DB\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"Awards\")\n      .collection(\"CertificationList\")\n      .doc(certID)\n      .set({\n        Name: certName,\n        Location: certLocation,\n        Date: FirebaseDate(certDate),\n        Desc: certDesc,\n      })\n      .catch((err) => console.log(err));\n\n    // Dispatch\n    const allCerts = [...certs];\n    allCerts.push({\n      id: certID,\n      Name: certName,\n      Location: certLocation,\n      Date: FirebaseDate(certDate),\n      Desc: certDesc,\n    });\n\n    dispatch(storeCertListAction(allCerts));\n    dispatch(toggleNewCertFormAction());\n  };\n\n  // REMOVE\n  const removeAward = (event) => {\n    const awardID = event.target.getAttribute(\"id\");\n\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"Awards\")\n      .collection(\"AwardList\")\n      .doc(awardID)\n      .delete()\n      .catch((err) => console.log(err));\n\n    const allAwards = [...awards];\n    const filteredAwards = allAwards.filter((a) => a.id !== awardID);\n\n    dispatch(storeAwardListAction(filteredAwards));\n  };\n  const removeCert = (event) => {\n    const certID = event.target.getAttribute(\"id\");\n\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"Awards\")\n      .collection(\"CertificationList\")\n      .doc(certID)\n      .delete()\n      .catch((err) => console.log(err));\n\n    const allCerts = [...certs];\n    const filteredCerts = allCerts.filter((c) => c.id !== certID);\n\n    dispatch(storeCertListAction(filteredCerts));\n  };\n\n  const saveAllChanges = () => {\n    const allAwards = [];\n    const allCerts = [];\n\n    const awardCount = awards.length;\n    const certCount = certs.length;\n\n    // Save to DB\n    for (let i = 0; i < awardCount; i = i + 1) {\n      const tempObj = {\n        Name: document.querySelector(`#tbAwardName${i}`).value,\n        Location: document.querySelector(`#tbAwardLocation${i}`).value,\n        Date: FirebaseDate(document.querySelector(`#daAwardDate${i}`).value),\n        Desc: document.querySelector(`#taAwardDesc${i}`).value,\n      };\n\n      allAwards.push(tempObj);\n    }\n\n    console.log(allAwards);\n\n    for (let i = 0; i < certCount; i = i + 1) {\n      const tempObj = {\n        Name: document.querySelector(`#tbCertName${i}`).value,\n        Location: document.querySelector(`#tbCertLocation${i}`).value,\n        Date: FirebaseDate(document.querySelector(`#daCertDate${i}`).value),\n        Desc: document.querySelector(`#taCertDesc${i}`).value,\n      };\n\n      allCerts.push(tempObj);\n    }\n\n    allAwards.forEach((a, i) => {\n      teachers_Collection\n        .doc(teacherAuthID)\n        .collection(\"Profile\")\n        .doc(\"Awards\")\n        .collection(\"AwardList\")\n        .doc(awards[i].id)\n        .update({\n          Name: a.Name,\n          Location: a.Location,\n          Date: a.Date,\n          Desc: a.Desc,\n        })\n        .catch((err) => console.log(err));\n    });\n\n    allCerts.forEach((c, i) => {\n      teachers_Collection\n        .doc(teacherAuthID)\n        .collection(\"Profile\")\n        .doc(\"Awards\")\n        .collection(\"CertificationList\")\n        .doc(certs[i].id)\n        .update({\n          Name: c.Name,\n          Location: c.Location,\n          Date: c.Date,\n          Desc: c.Desc,\n        })\n        .catch((err) => console.log(err));\n    });\n\n    // Dispatch\n    dispatch(storeAwardListAction(allAwards));\n    dispatch(storeCertListAction(allCerts));\n\n    history.push(\"/teacher-profile/awards\");\n  };\n\n  // HANDLE\n  const handleCurrPage = () => {\n    let feedBtn = document.querySelector(\"#link-feed\");\n    feedBtn.classList.remove(\"navy-back\");\n\n    let aboutBtn = document.querySelector(\"#link-about\");\n    aboutBtn.classList.remove(\"navy-back\");\n\n    let awardsBtn = document.querySelector(\"#link-awards\");\n    awardsBtn.classList.add(\"navy-back\");\n\n    let galleryBtn = document.querySelector(\"#link-gallery\");\n    galleryBtn.classList.remove(\"navy-back\");\n\n    let reviewsBtn = document.querySelector(\"#link-reviews\");\n    reviewsBtn.classList.remove(\"navy-back\");\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n\n    handleCurrPage();\n  }, []);\n  return (\n    <div>\n      <div>\n        <button\n          onClick={() => {\n            history.push(\"/teacher-profile/awards\");\n          }}\n        >\n          Back to Awards\n        </button>\n      </div>\n      <div>\n        <h2>Awards</h2>\n        {awards.map((award, i) => {\n          return (\n            <div key={i}>\n              <div>\n                <p>Award Name:</p>\n                <input\n                  id={`tbAwardName${i}`}\n                  type=\"text\"\n                  defaultValue={award.Name}\n                />\n              </div>\n              <div>\n                <p>Location: </p>\n                <input\n                  id={`tbAwardLocation${i}`}\n                  type=\"text\"\n                  defaultValue={award.Location}\n                />\n              </div>\n              <div>\n                <p>Date Received:</p>\n                <input\n                  id={`daAwardDate${i}`}\n                  type=\"date\"\n                  defaultValue={InputDateFormatter(award.Date)}\n                />\n              </div>\n              <div>\n                <p>Description:</p>\n                <textarea\n                  id={`taAwardDesc${i}`}\n                  defaultValue={award.Desc}\n                ></textarea>\n              </div>\n              <button id={award.id} onClick={removeAward}>\n                Remove\n              </button>\n              <hr />\n            </div>\n          );\n        })}\n\n        {/* New Award Form */}\n        {toggleAwardForm ? (\n          <div>\n            {/* Award Name */}\n            <div>\n              <p>Award Name:</p>\n              <input\n                id={`tbAwardNameText`}\n                type=\"text\"\n                placeholder=\"Award Name\"\n              />\n            </div>\n            {/* Award Location */}\n            <div>\n              <p>Location:</p>\n              <input\n                id={`tbAwardLocationText`}\n                type=\"text\"\n                placeholder=\"Location\"\n              />\n            </div>\n            {/* Award Date */}\n            <div>\n              <p>Date Received:</p>\n              <input id={`daAwardDateNew`} type=\"date\" />\n            </div>\n            {/* Award Desc */}\n            <div>\n              <p>Description:</p>\n              <textarea id={`taAwardDescText`} placeholder=\"Description\" />\n            </div>\n            <button onClick={applyNewAward}>Apply</button>\n            <button\n              onClick={() => {\n                dispatch(toggleNewAwardFormAction());\n              }}\n            >\n              Cancel\n            </button>\n          </div>\n        ) : (\n          <button\n            onClick={() => {\n              dispatch(toggleNewAwardFormAction());\n            }}\n          >\n            +\n          </button>\n        )}\n      </div>\n      <div>\n        <h2>Certifications</h2>\n        {certs.map((cert, i) => {\n          return (\n            <div key={i}>\n              <div>\n                <p>Certification Name:</p>\n                <input\n                  id={`tbCertName${i}`}\n                  type=\"text\"\n                  defaultValue={cert.Name}\n                />\n              </div>\n              <div>\n                <p>Location:</p>\n                <input\n                  id={`tbCertLocation${i}`}\n                  type=\"text\"\n                  defaultValue={cert.Location}\n                />\n              </div>\n              <div>\n                <p>Date Received:</p>\n                <input\n                  id={`daCertDate${i}`}\n                  type=\"date\"\n                  defaultValue={InputDateFormatter(cert.Date)}\n                />\n              </div>\n              <div>\n                <p>Description:</p>\n                <textarea\n                  id={`taCertDesc${i}`}\n                  defaultValue={cert.Desc}\n                ></textarea>\n              </div>\n              <button id={cert.id} onClick={removeCert}>\n                Remove\n              </button>\n              <hr />\n            </div>\n          );\n        })}\n\n        {/* New Cert Form */}\n        {toggleCertForm ? (\n          <div>\n            {/* Cert Name */}\n            <div>\n              <p>Certification Name:</p>\n              <input\n                id={`tbCertNameText`}\n                type=\"text\"\n                placeholder=\"Certification Name\"\n              />\n            </div>\n            {/* Cert Location */}\n            <div>\n              <p>Location:</p>\n              <input\n                id={`tbCertLocationText`}\n                type=\"text\"\n                placeholder=\"Location\"\n              />\n            </div>\n            {/* Cert Date */}\n            <div>\n              <p>Date Received:</p>\n              <input id={`daCertDateNew`} type=\"date\" />\n            </div>\n            {/* Date Desc */}\n            <div>\n              <p>Description:</p>\n              <textarea id={`taCertDescText`} placeholder=\"Description\" />\n            </div>\n            <button onClick={applyNewCert}>Apply</button>\n            <button\n              onClick={() => {\n                dispatch(toggleNewCertFormAction());\n              }}\n            >\n              Cancel\n            </button>\n          </div>\n        ) : (\n          <button\n            onClick={() => {\n              dispatch(toggleNewCertFormAction());\n            }}\n          >\n            +\n          </button>\n        )}\n      </div>\n      <hr />\n      <button onClick={saveAllChanges}>Save All Changes</button>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Dash/TopBar.js",["562","563","564"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCommentAlt,\n  faBell,\n  faSignOutAlt,\n  faBookOpen,\n  faCalendarAlt,\n  faUserFriends,\n  faUser,\n  faStar,\n  faExclamationCircle,\n  faTimes,\n  faTimesCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  storeAccountTypeAction,\n  storeTeacherAuthIDAction,\n  isLoggedInAction,\n  storeTeacherNotificationsAction,\n  toggleTeacherNotificationsWindowAction,\n  storeTeacherAddStudentSearchResultAction,\n} from \"../../../redux/actions\";\n\nimport \"./TopBar.css\";\nimport { teachers_Collection } from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nexport default function TopBar() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // States\n  const toggleNotifWin = useSelector(\n    (state) => state.toggleTeacherNotificationsWindowReducer\n  );\n  const notifications = useSelector(\n    (state) => state.storeTeacherNotificationsReducer\n  );\n\n  // GET\n  const getAllNotifications = () => {\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Notifications\")\n      .orderBy(\"Date\", \"desc\")\n      .get()\n      .then((snapshot) => {\n        const notifData = firebaseLooper(snapshot);\n        dispatch(storeTeacherNotificationsAction(notifData));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  // HANDLE\n  const handleNotificationsList = () => {\n    return notifications.map((notif, i) => {\n      return (\n        <div className=\"notifPanel\" key={i}>\n          <div className=\"topPanel\">\n            <FontAwesomeIcon\n              className=\"iconNotif\"\n              icon={\n                notif.Icon === \"faBell\"\n                  ? faBell\n                  : notif.Icon === \"faUser\"\n                  ? faUser\n                  : notif.Icon === \"faStar\"\n                  ? faStar\n                  : notif.Icon === \"faExclamationCircle\"\n                  ? faExclamationCircle\n                  : null\n              }\n            />\n            <p className=\"notifText\">{notif.Text}</p>\n            <p className=\"notifDate\">\n              {notif.Date ? notif.Date.toDate().toString().substr(4, 11) : null}\n            </p>\n            <button className=\"notifDel\">\n              <FontAwesomeIcon className=\"notifDelIcon\" icon={faTimes} />\n            </button>\n          </div>\n          <div className=\"bottomPanel\">\n            {notif.Action === \"request\" ? (\n              <div className=\"btnsNotifReq\">\n                <button className=\"btnReq reqAccept\">Accept</button>\n                <button className=\"btnReq reqDecline\">Decline</button>\n              </div>\n            ) : notif.Action === \"navigate\" ? (\n              <div className=\"btnNotifNav\">\n                <button className=\"btnReq notifNav\">Go to Page</button>\n              </div>\n            ) : null}\n          </div>\n        </div>\n      );\n    });\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n\n    getAllNotifications();\n  }, []);\n\n  const onLogOut = () => {\n    dispatch(storeAccountTypeAction(\"\"));\n    dispatch(storeTeacherAuthIDAction(\"\"));\n    dispatch(isLoggedInAction());\n    history.push(\"/login\");\n  };\n\n  return (\n    <div className=\"topbar-wrapper\">\n      <div>\n        <button class=\"btn-topbar\">\n          <FontAwesomeIcon icon={faCommentAlt} />\n        </button>\n        <button class=\"btn-topbar\">\n          <FontAwesomeIcon icon={faBookOpen} />\n        </button>\n        <button class=\"btn-topbar\">\n          <FontAwesomeIcon icon={faCalendarAlt} />\n        </button>\n        <button class=\"btn-topbar\">\n          <FontAwesomeIcon icon={faUserFriends} />\n        </button>\n      </div>\n      <div id=\"search-input\">\n        <input id=\"tbSearch\" type=\"text\" placeholder=\"Search...\" />\n      </div>\n      <div>\n        <button\n          onClick={() => dispatch(toggleTeacherNotificationsWindowAction())}\n          id=\"btnNotif\"\n          class=\"btn-topbar\"\n        >\n          <FontAwesomeIcon icon={faBell} />\n        </button>\n        {toggleNotifWin ? (\n          <div id=\"winNotifications\">{handleNotificationsList()}</div>\n        ) : null}\n      </div>\n      <div className=\"topbar-user\">\n        <p>Jesus Jimenez</p>\n        <p>Teacher</p>\n      </div>\n      <div>\n        <button onClick={onLogOut} class=\"btn-topbar red\">\n          <FontAwesomeIcon icon={faSignOutAlt} />\n        </button>\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/App.js",["565","566"],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/index.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Profile/StudentProfileMain.js",["567","568"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Switch, Route, Link, useRouteMatch } from \"react-router-dom\";\n\nimport TopBar from \"../TopBar\";\nimport Footer from \"../Footer\";\nimport ProfileFeedView from \"../Profile/ProfileFeedView\";\nimport ProfileFeedEdit from \"../Profile/ProfileFeedEdit\";\nimport ProfileAboutView from \"../Profile/ProfileAboutView\";\nimport ProfileAboutEdit from \"../Profile/ProfileAboutEdit\";\nimport ProfileAwardsView from \"../Profile/ProfileAwardsView\";\nimport ProfileAwardsEdit from \"../Profile/ProfileAwardsEdit\";\n\nexport default function StudentProfileMain() {\n  const studentAuthID = useSelector((state) => state.storeStudentAuthIDReducer);\n  const user = useSelector((state) => state.storeStudentUserDataReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { url } = useRouteMatch();\n\n  useEffect(() => {\n    if (!studentAuthID) {\n      history.push(\"/studentdash\");\n      return;\n    }\n  }, []);\n\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      {/* Cover Section */}\n      <div>\n        {/* Profile Photo */}\n        <img src=\"\" alt=\"\" />\n        {/* Full Name */}\n        <h3>\n          {user.FirstName} {user.LastName}\n        </h3>\n        <p>{user.AccountType}</p>\n      </div>\n\n      {/* Profile Options */}\n      <div>\n        <div>\n          <ul>\n            <Link to={`${url}/feed`}>Feed</Link>\n            <br />\n            <Link to={`${url}/about`}>About</Link>\n            <br />\n            <Link to={`${url}/awards`}>Awards</Link>\n            <br />\n            <Link to={`${url}/gallery`}>Gallery</Link>\n            <br />\n          </ul>\n        </div>\n\n        <div>\n          {/* ********************** */}\n\n          {/* Switch */}\n          <Switch>\n            {/* Feed */}\n            <Route path={`${url}/feed`}>\n              <ProfileFeedView />\n            </Route>\n            <Route path={`${url}/feed-edit`}>\n              <ProfileFeedEdit />\n            </Route>\n\n            {/* About */}\n            <Route path={`${url}/about`}>\n              <ProfileAboutView />\n            </Route>\n            <Route path={`${url}/about-edit`}>\n              <ProfileAboutEdit />\n            </Route>\n\n            {/* Awards */}\n            <Route path={`${url}/awards`}>\n              <ProfileAwardsView />\n            </Route>\n            <Route path={`${url}/awards-edit`}>\n              <ProfileAwardsEdit />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Messages/StudentMessageThreadView.js",["569","570"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TopBar from \"../TopBar\";\nimport Footer from \"../Footer\";\nimport RandomString from \"../../RandomString\";\nimport GetToday from \"../../GetToday\";\nimport {\n  students_Collection,\n  teachers_Collection,\n} from \"../../../utils/firebase\";\nimport { storeStudentSingleThreadAction } from \"../../../redux/actions\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nexport default function StudentMessageThreadView() {\n  const studentAuthID = useSelector((state) => state.storeStudentAuthIDReducer);\n  const user = useSelector((state) => state.storeStudentUserDataReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const thread = useSelector((state) => state.storeStudentSingleThreadReducer);\n\n  //   HANDLE\n  const handleMessages = () => {\n    if (thread.Messages) {\n      return thread.Messages.map((mess, i) => {\n        return (\n          <div key={i}>\n            <h4\n              style={\n                mess.Sender === studentAuthID\n                  ? { color: \"blue\" }\n                  : { color: \"rgba(0,0,0,0.6)\" }\n              }\n            >\n              {mess.Sender}\n            </h4>\n            <p>{mess.Text}</p>\n          </div>\n        );\n      });\n    }\n  };\n\n  //   POST\n  const sendMessage = () => {\n    const message = document.querySelector(\"#tbMessage\").value;\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const messID = `Mess${rand1}${rand2}`;\n    // Save to Teacher DB\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Messages\")\n      .doc(thread.id)\n      .collection(\"MessageBlocks\")\n      .doc(messID)\n      .set({\n        Sender: studentAuthID,\n        Text: message,\n        Receiver: thread.Recipient,\n        Date: GetToday(),\n      })\n      .catch((err) => console.log(err));\n\n    // Save to Teacher DB\n    teachers_Collection\n      .doc(thread.Recipient)\n      .collection(\"Messages\")\n      .where(\"Recipient\", \"==\", studentAuthID)\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        data.forEach((d) => {\n          if (d.Recipient === studentAuthID) {\n            teachers_Collection\n              .doc(thread.Recipient)\n              .collection(\"Messages\")\n              .doc(d.id)\n              .collection(\"MessageBlocks\")\n              .doc(messID)\n              .set({\n                Sender: studentAuthID,\n                Text: message,\n                Receiver: thread.Recipient,\n                Date: GetToday(),\n              })\n              .catch((err) => console.log(err));\n          }\n        });\n      })\n      .catch((err) => console.log(err));\n\n    //   Dispatch\n    let allMess = [...thread.Messages];\n    allMess.push({\n      id: messID,\n      Sender: studentAuthID,\n      Text: message,\n      Receiver: thread.Recipient,\n      Date: GetToday(),\n    });\n\n    const tempObj = { ...thread };\n    tempObj.Messages = allMess;\n\n    dispatch(storeStudentSingleThreadAction(tempObj));\n    document.querySelector(\"#tbMessage\").value = \"\";\n  };\n\n  useEffect(() => {\n    if (!studentAuthID) {\n      history.push(\"/studentdash\");\n      return;\n    }\n  }, []);\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      <div>\n        <button onClick={() => history.push(\"/student-messages\")}>Back</button>\n        <h1>Recipient: {thread.Recipient}</h1>\n\n        {/* Messaages */}\n        <div>{handleMessages()}</div>\n\n        {/* input */}\n        <div>\n          <input\n            id=\"tbMessage\"\n            type=\"text\"\n            placeholder=\"Type message here...\"\n          />\n          <button onClick={sendMessage}>Send</button>\n        </div>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Events/EventNew.js",["571","572"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport DashFooter from \"../Dash/DashFooter\";\nimport GetToday from \"../../GetToday\";\nimport RandomString from \"../../RandomString\";\nimport InputDateFormatter from \"../../InputDateFormatter\";\nimport FirebaseDate from \"../../FirebaseDate\";\nimport { teachers_Collection } from \"../../../utils/firebase\";\nimport { storeTeacherEventsGeneralInfoAction } from \"../../../redux/actions\";\nimport { create } from \"sortablejs\";\n\nexport default function EventNew() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const events = useSelector(\n    (state) => state.storeTeacherEventsGeneralInfoReducer\n  );\n\n  //   POST\n  const createEvent = () => {\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const eventID = `Event${rand1}${rand2}`;\n\n    const name = document.querySelector(\"#tbName\").value;\n    const desc = document.querySelector(\"#taDesc\").value;\n    const color = document.querySelector(\"#tbColor\").value;\n    const start = FirebaseDate(document.querySelector(\"#daStart\").value);\n    const end = FirebaseDate(document.querySelector(\"#daEnd\").value);\n\n    // Save to DB\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Events\")\n      .doc(eventID)\n      .set({\n        Name: name,\n        Desc: desc,\n        Color: color,\n        Start: start,\n        End: end,\n      })\n      .catch((err) => console.log(err));\n\n    //   Dispatch\n    const allEvents = [...events];\n    allEvents.push({\n      id: eventID,\n      Name: name,\n      Desc: desc,\n      Color: color,\n      Start: start,\n      End: end,\n    });\n\n    allEvents.sort((a, b) => (a.Start > b.Start ? 1 : -1));\n    dispatch(storeTeacherEventsGeneralInfoAction(allEvents));\n    history.push(\"/teacher-events\");\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n  }, []);\n\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      {/* Content */}\n      <div>\n        <h1>New Event</h1>\n\n        <div>\n          <h3>Name: </h3>\n          <input id=\"tbName\" type=\"text\" placeholder=\"Name\" />\n\n          <h3>Desc: </h3>\n          <textarea id=\"taDesc\" placeholder=\"Description\"></textarea>\n\n          <h3>Color: </h3>\n          <input id=\"tbColor\" type=\"text\" placeholder=\"Color\" />\n\n          <h3>Start: </h3>\n          <input\n            id={`daStart`}\n            type=\"date\"\n            defaultValue={InputDateFormatter(GetToday())}\n          />\n\n          <h3>End: </h3>\n          <input\n            id={`daEnd`}\n            type=\"date\"\n            defaultValue={InputDateFormatter(GetToday())}\n          />\n          <br />\n          <br />\n          <button onClick={createEvent} className=\"btn-navy\">\n            Create Event\n          </button>\n        </div>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Groups/GroupAboutView.js",["573","574"],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Statistics/StudentStats.js",["575"],"import React, { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { statisticsObjectAction } from \"../../../redux/actions\";\n\nexport default function StudentStats() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const storageState = useSelector(\n    (state) => state.storeTeacherStatisticsGeneralInfoReducer\n  );\n  const storageObj = useSelector((state) => state.statisticsObjectReducer);\n\n  const getStorageObj = () => {\n    storageState.forEach((obj) => {\n      if (obj.id === \"StudentStats\") {\n        dispatch(statisticsObjectAction(obj));\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n    }\n    getStorageObj();\n  }, []);\n  return (\n    <div>\n      \n      <h1>Student Stats</h1>\n      <hr/>\n      <p># of Students: {storageObj.Num}</p>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Statistics/StorageStats.js",["576"],"import React, { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {statisticsObjectAction} from '../../../redux/actions';\n\nexport default function StorageStats() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  \n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const storageState = useSelector(\n    (state) => state.storeTeacherStatisticsGeneralInfoReducer\n  );\n  const storageObj = useSelector(state => state.statisticsObjectReducer);\n\n  const getStorageObj = () => {\n    storageState.forEach((obj) => {\n      if (obj.id === 'StorageStats') {\n        dispatch(statisticsObjectAction(obj));\n      }\n    })\n  }\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n    }\n    getStorageObj();\n  }, []);\n\n  return (\n    <div>\n      <div>\n        <h1>Storage Statistics</h1>\n        <hr />\n        <p>Usage: {storageObj.Usage} MB</p>\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Profile/ProfileFeedEdit.js",["577","578"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { storeStudentProfileFeedPostsAction } from \"../../../redux/actions\";\nimport { students_Collection } from \"../../../utils/firebase\";\n\nexport default function ProfileFeedEdit() {\n  const studentAuthID = useSelector((state) => state.storeStudentAuthIDReducer);\n  const user = useSelector((state) => state.storeStudentUserDataReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const post = useSelector((state) => state.storeStudentProfileFeedPostReducer);\n  const posts = useSelector(\n    (state) => state.storeStudentProfileFeedPostsReducer\n  );\n\n  const savePost = () => {\n    const postText = document.querySelector(\"#taEditPost\").value;\n\n    // Save to DB\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"Feed\")\n      .collection(\"Posts\")\n      .doc(post.id)\n      .update({\n        Text: postText,\n      })\n      .catch((err) => console.log(err));\n\n    //   Dispatch\n\n    const allPosts = [...posts];\n    allPosts.forEach((p) => {\n      p.Text = postText;\n    });\n\n    dispatch(storeStudentProfileFeedPostsAction(allPosts));\n    history.push(\"/student-profile/feed\");\n  };\n\n  useEffect(() => {\n    if (!studentAuthID) {\n      history.push(\"/studentdash\");\n      return;\n    }\n  }, []);\n  return (\n    <div>\n      <h1>Edit Post</h1>\n\n      <div>\n        <textarea\n          id=\"taEditPost\"\n          type=\"text\"\n          defaultValue={post.Text}\n        ></textarea>\n        <button onClick={savePost}>Save</button>\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Courses/StudentCoursePreview.js",["579","580"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TopBar from \"../TopBar\";\nimport Footer from \"../Footer\";\nimport {\n  storeStudentCourseLessonListAction,\n  toggleStudentCourseExerListAction,\n  toggleStudentCourseLessonListAction,\n  storeStudentCourseExerListAction,\n  storeStudentCourseQuizListAction,\n  toggleStudentCourseQuizListAction,\n  storeCurrentCourseComponentAction,\n  storeStudentNextExerciseAction,\n  storeStudentNextQuizAction,\n} from \"../../../redux/actions\";\nimport {\n  courses_Collection,\n  students_Collection,\n} from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nexport default function StudentCoursePreview() {\n  const studentAuthID = useSelector((state) => state.storeStudentAuthIDReducer);\n  const user = useSelector((state) => state.storeStudentUserDataReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  //   Toggles\n  const toggleLessonList = useSelector(\n    (state) => state.toggleStudentCourseLessonListReducer\n  );\n  const toggleExerList = useSelector(\n    (state) => state.toggleStudentCourseExerListReducer\n  );\n  const toggleQuizList = useSelector(\n    (state) => state.toggleStudentCourseQuizListReducer\n  );\n\n  const course = useSelector((state) => state.storeStudentSingleCourseReducer);\n  const lessons = useSelector(\n    (state) => state.storeStudentCourseLessonListReducer\n  );\n  const currComp = useSelector(\n    (state) => state.storeCurrentCourseComponentReducer\n  );\n  const exers = useSelector((state) => state.storeStudentCourseExerListReducer);\n  const quizzes = useSelector(\n    (state) => state.storeStudentCourseQuizListReducer\n  );\n\n  // GET\n  const getAllCourseLessons = () => {\n    courses_Collection\n      .doc(course.id)\n      .collection(\"Lessons\")\n      .orderBy(\"Order\", \"asc\")\n      .get()\n      .then((snapshot) => {\n        const lessonsList = firebaseLooper(snapshot);\n        dispatch(storeStudentCourseLessonListAction(lessonsList));\n      })\n      .catch((err) => console.log(err));\n  };\n  const getAllCourseExercises = () => {\n    courses_Collection\n      .doc(course.id)\n      .collection(\"Exercises\")\n      .orderBy(\"Order\", \"asc\")\n      .get()\n      .then((snapshot) => {\n        const exerList = firebaseLooper(snapshot);\n\n        dispatch(storeStudentCourseExerListAction(exerList));\n      })\n      .catch((err) => console.log(err));\n  };\n  const getAllCourseQuizzes = () => {\n    courses_Collection\n      .doc(course.id)\n      .collection(\"Quizzes\")\n      .orderBy(\"Order\", \"asc\")\n      .get()\n      .then((snapshot) => {\n        const quizList = firebaseLooper(snapshot);\n\n        dispatch(storeStudentCourseQuizListAction(quizList));\n      })\n      .catch((err) => console.log(err));\n  };\n  const getStudentProgress = () => {\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"CourseProgress\")\n      .where(\"CourseName\", \"==\", course.Name)\n      .orderBy(\"Date\", \"desc\")\n      .get()\n      .then((snapshot) => {\n        const progressData = firebaseLooper(snapshot);\n        let progress = [];\n        progressData.forEach((prog) => {\n          if (prog.CourseName === course.Name) {\n            progress.push(prog);\n          }\n        });\n\n        // If there is data\n        if (progress.length > 0) {\n          const lastComp = progress[0];\n\n          if (lastComp.CompType === \"Lesson\") {\n            // get next exer\n            courses_Collection\n              .doc(course.id)\n              .collection(\"Exercises\")\n              .where(\"Order\", \"==\", lastComp.Order)\n              .get()\n              .then((snapshot) => {\n                const exerData = firebaseLooper(snapshot);\n                dispatch(storeCurrentCourseComponentAction(exerData[0]));\n                dispatch(storeStudentNextExerciseAction(exerData[0]));\n              })\n              .catch((err) => console.log(err));\n          } else if (lastComp.CompType === \"Exercise\") {\n            courses_Collection\n              .doc(course.id)\n              .collection(\"Quizzes\")\n              .where(\"Order\", \"==\", lastComp.Order)\n              .get()\n              .then((snapshot) => {\n                const quizData = firebaseLooper(snapshot);\n                courses_Collection\n                  .doc(course.id)\n                  .collection(\"Quizzes\")\n                  .doc(quizData[0].id)\n                  .collection(\"Components\")\n                  .get()\n                  .then((snapshot) => {\n                    const compData = firebaseLooper(snapshot);\n                    const tempObj = {\n                      ...quizData[0],\n                      Components: compData,\n                    };\n                    dispatch(storeCurrentCourseComponentAction(tempObj));\n                    dispatch(storeStudentNextQuizAction(tempObj));\n                  })\n                  .catch((err) => console.log(err));\n              })\n              .catch((err) => console.log(err));\n          } else if (lastComp.CompType === \"Quiz\") {\n            courses_Collection\n              .doc(course.id)\n              .collection(\"Lessons\")\n              .where(\"Order\", \"==\", lastComp.Order + 1)\n              .get()\n              .then((snapshot) => {\n                const lessonData = firebaseLooper(snapshot);\n                dispatch(storeCurrentCourseComponentAction(lessonData[0]));\n                dispatch(storeStudentNextExerciseAction(lessonData[0]));\n              })\n              .catch((err) => console.log(err));\n          }\n          // Here, the user should get the latest progress block and assess what comes next. That way the Start button can be added to the appropriate component.Consider the order.\n        } else {\n          courses_Collection\n            .doc(course.id)\n            .collection(\"Lessons\")\n            .where(\"Order\", \"==\", 1)\n            .get()\n            .then((snapshot) => {\n              const lessonData = firebaseLooper(snapshot);\n              dispatch(storeCurrentCourseComponentAction(lessonData[0]));\n            })\n            .catch((err) => console.log(err));\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  //   HANDLE\n  const handleLessonList = () => {\n    return lessons.map((lesson, i) => {\n      return (\n        <div key={i}>\n          <p>{lesson.Name}</p>\n          {currComp.Name === lesson.Name ? (\n            <button\n              style={{\n                backgroundColor: \"#54e346\",\n                color: \"white\",\n                border: \"1px solid rgba(0,0,0,0.2)\",\n                padding: \"1%\",\n                width: \"20%\",\n                borderRadius: '3px'\n              }}\n              onClick={navCourseLesson}\n            >\n              Start\n            </button>\n          ) : null}\n        </div>\n      );\n    });\n  };\n  const handleExerList = () => {\n    return exers.map((exer, i) => {\n      return (\n        <div key={i}>\n          <p>{exer.Name}</p>\n          {currComp.Name === exer.Name ? (\n            <button onClick={navCourseExercise}>Start</button>\n          ) : null}\n        </div>\n      );\n    });\n  };\n  const handleQuizList = () => {\n    return quizzes.map((quiz, i) => {\n      return (\n        <div key={i}>\n          <p>{quiz.Name}</p>\n          {currComp.Name === quiz.Name ? (\n            <button onClick={navCourseQuiz}>Start</button>\n          ) : null}\n        </div>\n      );\n    });\n  };\n\n  // NAV\n  const navCourseLesson = () => {\n    // We are assuming that the lesson is already in dispatch\n\n    history.push(\"/student-course-lesson\");\n  };\n  const navCourseExercise = () => {\n    history.push(\"/student-course-exercise\");\n  };\n  const navCourseQuiz = () => {\n    history.push(\"/student-course-quiz\");\n  };\n\n  useEffect(() => {\n    if (!studentAuthID) {\n      history.push(\"/studentdash\");\n      return;\n    }\n\n    getAllCourseLessons();\n    getAllCourseExercises();\n    getAllCourseQuizzes();\n    getStudentProgress();\n  }, []);\n\n  return (\n    <div>\n      {/* TopBar */}\n      <div>\n        <TopBar />\n      </div>\n\n      {/* Content */}\n      <div>\n        {/* Left */}\n        <div style={{ width: \"48%\", float: \"left\", padding: \"1%\" }}>\n          <h1>{course.Name}</h1>\n          <img\n            src=\"/Images/course-thumbnail.jpg\"\n            alt=\"\"\n            style={{ width: \"400px\", height: \"auto\" }}\n          />\n          <p>{course.Desc}</p>\n        </div>\n\n        {/* Right */}\n        <div style={{ width: \"48%\", float: \"right\", padding: \"1%\" }}>\n          <h2>Components</h2>\n\n          {/* Lessons */}\n          <div>\n            <button\n              style={{\n                width: \"100%\",\n                textAlign: \"left\",\n                padding: \"2%\",\n                backgroundColor: \"white\",\n                border: \"1px solid black\",\n                borderRadius: \"3px\",\n              }}\n              onClick={() => dispatch(toggleStudentCourseLessonListAction())}\n            >\n              Lessons\n            </button>\n            <div>{toggleLessonList ? handleLessonList() : null}</div>\n          </div>\n          <br />\n          {/* Exercises */}\n          <div>\n            <button\n              style={{\n                width: \"100%\",\n                textAlign: \"left\",\n                padding: \"2%\",\n                backgroundColor: \"white\",\n                border: \"1px solid black\",\n                borderRadius: \"3px\",\n              }}\n              onClick={() => dispatch(toggleStudentCourseExerListAction())}\n            >\n              Exercises\n            </button>\n            <div>{toggleExerList ? handleExerList() : null}</div>\n          </div>\n          <br />\n          {/* Quizzes */}\n          <div>\n            <button\n              style={{\n                width: \"100%\",\n                textAlign: \"left\",\n                padding: \"2%\",\n                backgroundColor: \"white\",\n                border: \"1px solid black\",\n                borderRadius: \"3px\",\n              }}\n              onClick={() => dispatch(toggleStudentCourseQuizListAction())}\n            >\n              Quizzes\n            </button>\n            <div>{toggleQuizList ? handleQuizList() : null}</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Footer */}\n      <div style={{ clear: \"left\" }}>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Milestones/MilestoneView.js",["581","582"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport DashFooter from \"../Dash/DashFooter\";\nimport RandomString from \"../../RandomString\";\nimport {\n  storeTeacherMilestonesGeneralInfoAction,\n  storeTeacherSingleMilestoneSegAction,\n  toggleNewTaskFormAction,\n} from \"../../../redux/actions\";\nimport { teachers_Collection } from \"../../../utils/firebase\";\n\nexport default function MilestoneView() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const toggleNewTaskForm = useSelector(\n    (state) => state.toggleNewTaskFormReducer\n  );\n\n  const milestone = useSelector(\n    (state) => state.storeTeacherSingleMilestoneSegReducer\n  );\n\n  //   HANDLE\n  const handleTaskList = () => {\n    if (milestone.Tasks) {\n      return milestone.Tasks.map((task, i) => {\n        return (\n          <div key={i}>\n            <h4>{task.Task}</h4>\n            <p>{task.Desc}</p>\n            <button id={task.id} onClick={removeTask}>\n              Remove\n            </button>\n          </div>\n        );\n      });\n    }\n  };\n  const handleNewTaskForm = () => {\n    return (\n      <div>\n        <h3>Task:</h3>\n        <input id=\"tbTask\" type=\"text\" placeholder=\"Task\" />\n\n        <h3>Description</h3>\n        <textarea id=\"taDesc\" placeholder=\"Description\"></textarea>\n\n        <button onClick={addNewTask}>Add</button>\n      </div>\n    );\n  };\n\n  // POST\n  const addNewTask = () => {\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const taskID = `Task${rand1}${rand2}`;\n\n    const task = document.querySelector(\"#tbTask\").value;\n    const desc = document.querySelector(\"#taDesc\").value;\n\n    // Save to DB\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Milestones\")\n      .doc(milestone.id)\n      .collection(\"MilestoneTasks\")\n      .doc(taskID)\n      .set({\n        Task: task,\n        Desc: desc,\n        SegmentName: milestone.id,\n      })\n      .catch((err) => console.log(err));\n\n    // Dispatch\n\n    const allTasks = [...milestone.Tasks];\n    allTasks.push({\n      id: taskID,\n      Task: task,\n      Desc: desc,\n      SegmentName: milestone.id,\n    });\n\n    const tempObj = {\n      ...milestone,\n      Tasks: allTasks,\n    };\n\n    dispatch(storeTeacherSingleMilestoneSegAction(tempObj));\n    dispatch(toggleNewTaskFormAction());\n  };\n\n  // REMOVE\n  const removeTask = (event) => {\n    const taskID = event.target.getAttribute(\"id\");\n\n    // Remove from DB\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Milestones\")\n      .doc(milestone.id)\n      .collection(\"MilestoneTasks\")\n      .doc(taskID)\n      .delete()\n      .catch((err) => console.log(err));\n\n    // Dispatch\n    const allTasks = [...milestone.Tasks];\n    const filtered = allTasks.filter((task) => task.id !== taskID);\n\n    const tempObj = {\n      ...milestone,\n      Tasks: filtered,\n    };\n\n    dispatch(storeTeacherSingleMilestoneSegAction(tempObj));\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n  }, []);\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      {/* Content */}\n      <div className=\"content\">\n        <div>\n          <button onClick={() => history.push(\"/teacher-milestones\")}>\n            Back\n          </button>\n          <h1>{milestone.Name}</h1>\n          <button onClick={() => history.push(\"/teacher-milestone-edit\")}>\n            Edit Tasks\n          </button>\n        </div>\n\n        {/* Tasks */}\n        <div>{handleTaskList()}</div>\n        <br />\n        <button\n          onClick={() => dispatch(toggleNewTaskFormAction())}\n          className=\"btn-navy\"\n        >\n          {toggleNewTaskForm ? \"Close\" : \"Add Task\"}\n        </button>\n        {toggleNewTaskForm ? handleNewTaskForm() : null}\n      </div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Profile/ProfileAboutView.js",["583"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  storeProfileAboutDataAction,\n  storeProfileExperienceDataAction,\n} from \"../../../redux/actions\";\nimport { teachers_Collection } from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nexport default function ProfileAboutView() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const about = useSelector((state) => state.storeProfileAboutDataReducer);\n  const exp = useSelector((state) => state.storeProfileExperienceDataReducer);\n\n  // GET\n  const getAllAboutData = () => {\n    const profile_Collection = teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\");\n    profile_Collection\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        data.forEach((d) => {\n          if (d.id === \"About\") {\n            dispatch(storeProfileAboutDataAction(d));\n          }\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n  const getAllExperienceData = () => {\n    const experience_Collection = teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"Experience\")\n      .collection(\"ExpBlocks\");\n    experience_Collection\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        dispatch(storeProfileExperienceDataAction(data));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  // HANDLE\n  const handleCurrPage = () => {\n    let feedBtn = document.querySelector(\"#link-feed\");\n    feedBtn.classList.remove(\"navy-back\");\n\n    let aboutBtn = document.querySelector(\"#link-about\");\n    aboutBtn.classList.add(\"navy-back\");\n\n    let awardsBtn = document.querySelector(\"#link-awards\");\n    awardsBtn.classList.remove(\"navy-back\");\n\n    let galleryBtn = document.querySelector(\"#link-gallery\");\n    galleryBtn.classList.remove(\"navy-back\");\n\n    let reviewsBtn = document.querySelector(\"#link-reviews\");\n    reviewsBtn.classList.remove(\"navy-back\");\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n    window.scrollTo(0, 0);\n    getAllAboutData();\n    getAllExperienceData();\n    handleCurrPage();\n  }, []);\n  return (\n    <div>\n      <button\n        className=\"btn-newPost\"\n        onClick={() => history.push(\"/teacher-profile/edit-about\")}\n      >\n        Edit\n      </button>\n      <div className=\"about-section\">\n        <h2>About</h2>\n        <p>{about.About}</p>\n      </div>\n      <div className=\"about-section\">\n        <h2>Experience</h2>\n        {exp.map((ex, i) => {\n          return (\n            <div className=\"exp-section\" key={i}>\n              <h3>{ex.Institution}</h3>\n              <p>{ex.Desc}</p>\n              <div className=\"about-dates\">\n                <p>\n                  <span className=\"about-date\">Started:</span>{\" \"}\n                  {ex.Start.toDate().toString().substr(4, 11)}\n                </p>\n                <p>\n                  <span className=\"about-date\">Ended:</span>{\" \"}\n                  {ex.End.toDate().toString().substr(4, 11)}\n                </p>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"about-section personal-section\">\n        <h2>Personal</h2>\n        <p>\n          <span className=\"personal-p\">Email:</span> {about.Email}\n        </p>\n        <p>\n          <span className=\"personal-p\">Location:</span> {about.Location}\n        </p>\n        <p>\n          <span className=\"personal-p\">Instruments:</span>{\" \"}\n        </p>\n        {about.Instruments ? (\n          <div>\n            <ul className=\"about-inst\">\n              {about.Instruments.map((ins, i) => {\n                return <li key={i}>{ins}</li>;\n              })}\n            </ul>\n            <p>\n              <span className=\"personal-p\">Joined:</span>{\" \"}\n              {about.Joined.toDate().toString().substr(4, 11)}\n            </p>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Dash/RecentActivity.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Dash/UpcomingEvents.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Articles/ArticleBlock.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Groups/GroupFeedView.js",["584"],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Courses/StudentCourseLesson.js",["585","586"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Footer from \"../Footer\";\nimport RandomString from \"../../RandomString\";\nimport GetToday from \"../../GetToday\";\n\nimport {\n  storeStudentLessonQuestionResultAction,\n  storeStudentNextExerciseAction,\n} from \"../../../redux/actions\";\nimport {\n  courses_Collection,\n  students_Collection,\n} from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nexport default function StudentCourseLesson() {\n  const studentAuthID = useSelector((state) => state.storeStudentAuthIDReducer);\n  const user = useSelector((state) => state.storeStudentUserDataReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const currLesson = useSelector(\n    (state) => state.storeCurrentCourseComponentReducer\n  );\n  const result = useSelector(\n    (state) => state.storeStudentLessonQuestionResultReducer\n  );\n  const course = useSelector((state) => state.storeStudentSingleCourseReducer);\n\n  // GET\n  const getNextExercise = () => {\n    courses_Collection\n      .doc(course.id)\n      .collection(\"Exercises\")\n      .get()\n      .then((snapshot) => {\n        const exerData = firebaseLooper(snapshot);\n        exerData.forEach((exer) => {\n          if (exer.Order === currLesson.Order) {\n            dispatch(storeStudentNextExerciseAction(exer));\n          }\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  //   HANDLE\n  const handleLessonUI = () => {\n    return (\n      <div>\n        <div>\n          <h2>Video is here...</h2>\n        </div>\n        <div>\n          <h2>Textual Lesson</h2>\n          <p>{currLesson.Text}</p>\n        </div>\n        <div>{handleLessonQuestion()}</div>\n        <div>{handleResult()}</div>\n      </div>\n    );\n  };\n  const handleLessonQuestion = () => {\n    if (currLesson.Text) {\n      return (\n        <div>\n          <h3>{currLesson.Question}</h3>\n          <div>\n            {currLesson.Options.map((opt, i) => {\n              return (\n                <div>\n                  <input\n                    type=\"radio\"\n                    id={`Opt${i}`}\n                    name=\"lessonOpts\"\n                    value={opt}\n                  />\n                  <label for={opt}>{opt}</label>\n                </div>\n              );\n            })}\n          </div>\n          <br />\n          <div>\n            <button onClick={calcQuestionResult}>Check</button>\n          </div>\n          <br />\n        </div>\n      );\n    }\n  };\n  const handleResult = () => {\n    if (result === \"correct\") {\n      return (\n        <div>\n          <p>That is correct!</p>\n          <button onClick={navExercise}>Finish</button>\n        </div>\n      );\n    } else if (result === \"incorrect\") {\n      return (\n        <div>\n          <p>Incorrect. Try Again.</p>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <p>Answer question correctly before completing lesson.</p>\n        </div>\n      );\n    }\n  };\n\n  // NAV\n  const navExercise = () => {\n    getNextExercise();\n    dispatch(storeStudentLessonQuestionResultAction(\"\"));\n\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const progID = `Prog${rand1}${rand2}`;\n\n    // Update Course Progress\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"CourseProgress\")\n      .doc(progID)\n      .set({\n        CourseName: course.Name,\n        CompName: currLesson.Name,\n        CompType: \"Lesson\",\n        Order: currLesson.Order,\n        Date: GetToday(),\n      })\n      .catch((err) => console.log(err));\n\n    history.push(\"/student-course-exercise\");\n  };\n\n  //   CALC\n  const calcQuestionResult = () => {\n    const answer = currLesson.Answer;\n\n    for (let i = 0; i < currLesson.Options.length; i = i + 1) {\n      const radioChoice = document.querySelector(`#Opt${i}`).checked;\n      if (radioChoice) {\n        if (currLesson.Options[i] === answer) {\n          dispatch(storeStudentLessonQuestionResultAction(\"correct\"));\n        } else {\n          dispatch(storeStudentLessonQuestionResultAction(\"incorrect\"));\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (!studentAuthID) {\n      history.push(\"/studentdash\");\n      return;\n    }\n  }, []);\n  return (\n    <div>\n      <br />\n      <div>\n        <h1>{currLesson.Name}</h1>\n      </div>\n\n      <div>{handleLessonUI()}</div>\n\n      {/* Footer */}\n      <div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Assignments/AssignmentEdit.js",["587"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport DashFooter from \"../Dash/DashFooter\";\nimport InputDateFormatter from \"../../InputDateFormatter\";\nimport FirebaseDate from \"../../FirebaseDate\";\nimport {\n  storeTeacherAssignmentAssigneesAction,\n  storeTeacherSingleAssignmentAction,\n} from \"../../../redux/actions\";\nimport {\n  students_Collection,\n  teachers_Collection,\n} from \"../../../utils/firebase\";\n\nexport default function AssignmentEdit() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const assignment = useSelector(\n    (state) => state.storeTeacherSingleAssignmentReducer\n  );\n\n  //   HANDLE\n  const handleAssignment = () => {\n    if (assignment.Type === \"Textual\") {\n      return (\n        <div>\n          <h3>Assignment Prompt:</h3>\n          <textarea id=\"taAssText\" defaultValue={assignment.Text}></textarea>\n        </div>\n      );\n    } else if (assignment.Type === \"Practice\") {\n      return (\n        <div>\n          <div>\n            <h3>Assignment Prompt:</h3>\n            <textarea\n              id=\"taAssPracText\"\n              defaultValue={assignment.Text}\n            ></textarea>\n          </div>\n          <div>\n            <h3>Repertoire:</h3>\n            <input\n              id=\"tbPracReper\"\n              type=\"text\"\n              defaultValue={assignment.Repertoire}\n            />\n          </div>\n          <div>\n            <h3>Composer:</h3>\n            <input\n              id=\"tbPracComp\"\n              type=\"text\"\n              defaultValue={assignment.Composer}\n            />\n          </div>\n          <div>\n            <h3>Tempo</h3>\n            <input\n              id=\"tbPracTempo\"\n              type=\"text\"\n              defaultValue={assignment.Tempo}\n            />\n          </div>\n          <div>\n            <h3>Max Time</h3>\n            <input\n              id=\"tbPracMaxTime\"\n              type=\"text\"\n              defaultValue={assignment.MaxTime}\n            />\n          </div>\n        </div>\n      );\n    }\n  };\n  const handleAssignees = () => {\n    if (assignment.Assignees) {\n      return assignment.Assignees.map((stud, i) => {\n        return (\n          <div key={i}>\n            <p>{stud}</p>\n            <button id={stud} class=\"btn-salmon\" onClick={removeAssignee}>\n              -\n            </button>\n          </div>\n        );\n      });\n    }\n  };\n\n  //   POST\n  const saveAllChanges = () => {\n    const assName = document.querySelector(\"#tbAssName\").value;\n    const assDue = FirebaseDate(document.querySelector(\"#daAssDue\").value);\n    const allNames = [...assignment.Assignees];\n\n    if (assignment.Type === \"Textual\") {\n      const assText = document.querySelector(\"#taAssText\").value;\n\n      // Save to DB\n      teachers_Collection\n        .doc(teacherAuthID)\n        .collection(\"Assignments\")\n        .doc(assignment.id)\n        .update({\n          Name: assName,\n          Due: assDue,\n          Text: assText,\n          Assignees: allNames,\n        })\n        .catch((err) => console.log(err));\n\n      // Dispatch\n      const newAss = {\n        ...assignment,\n        Name: assName,\n        Due: assDue,\n        Text: assText,\n        Assignees: allNames,\n      };\n\n      dispatch(storeTeacherSingleAssignmentAction(newAss));\n      dispatch(storeTeacherAssignmentAssigneesAction(allNames));\n    } else if (assignment.Type === \"Practice\") {\n      const assPrompt = document.querySelector(\"#taAssPracText\").value;\n      const assReper = document.querySelector(\"#tbPracReper\").value;\n      const assComp = document.querySelector(\"#tbPracComp\").value;\n      const assTempo = document.querySelector(\"#tbPracTempo\").value;\n      const assMaxTime = document.querySelector(\"#tbPracMaxTime\").value;\n\n      // Save to DB\n      teachers_Collection\n        .doc(teacherAuthID)\n        .collection(\"Assignments\")\n        .doc(assignment.id)\n        .update({\n          Name: assName,\n          Due: assDue,\n          Text: assPrompt,\n          Repertoire: assReper,\n          Composer: assComp,\n          Tempo: assTempo,\n          MaxTime: assMaxTime,\n          Assignees: allNames,\n        })\n        .catch((err) => console.log(err));\n\n      // Dispatch\n      const newAss = {\n        ...assignment,\n        Name: assName,\n        Due: assDue,\n        Text: assPrompt,\n        Repertoire: assReper,\n        Composer: assComp,\n        Tempo: assTempo,\n        MaxTime: assMaxTime,\n        Assignees: allNames,\n      };\n\n      dispatch(storeTeacherSingleAssignmentAction(newAss));\n      dispatch(storeTeacherAssignmentAssigneesAction(allNames));\n    }\n\n    history.push(\"/teacher-assignment-view\");\n  };\n\n  //   REMOVE\n  const removeAssignee = (event) => {\n    const name = event.target.getAttribute(\"id\");\n    const allStuds = [...assignment.Assignees];\n    const filtered = allStuds.filter((stud) => stud !== name);\n\n    // Remove from DB\n    students_Collection\n      .doc(name)\n      .collection(\"AssignmentsInfo\")\n      .doc(assignment.id)\n      .delete()\n      .catch((err) => console.log(err));\n\n    const newAss = {\n      ...assignment,\n      Assignees: filtered,\n    };\n    dispatch(storeTeacherSingleAssignmentAction(newAss));\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n  }, []);\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      <div>\n        <div>\n          <h1>Edit</h1>\n          <button\n            class=\"btn-lime\"\n            onClick={() => history.push(\"teacher-assignment-view\")}\n          >\n            Back\n          </button>\n        </div>\n        <hr />\n\n        {/* Edit content here */}\n\n        <div>\n          <div>\n            <h3>Assignment Name: </h3>\n            <input id=\"tbAssName\" type=\"text\" defaultValue={assignment.Name} />\n          </div>\n          <div>\n            <h3>Due Date: </h3>\n            {assignment.Due ? (\n              <input\n                id={`daAssDue`}\n                type=\"date\"\n                defaultValue={InputDateFormatter(assignment.Due)}\n              />\n            ) : null}\n          </div>\n          <div>{handleAssignment()}</div>\n\n          {/* Assignees */}\n          <div>\n            <h3>Assignees:</h3>\n            {handleAssignees()}\n          </div>\n          <br />\n          <button class=\"btn-navy\" onClick={saveAllChanges}>\n            Save All Changes\n          </button>\n        </div>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Statistics/StatisticsMain.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Courses/CoursesDeck.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/FirebaseDate.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Profile/ProfileAboutEdit.js",["588"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  toggleNewExperienceFormAction,\n  storeProfileExperienceDataAction,\n  storeProfileAboutDataAction,\n  toggleNewInstrumentFormAction,\n} from \"../../../redux/actions\";\nimport { teachers_Collection } from \"../../../utils/firebase\";\nimport firebase from \"../../../utils/firebase\";\n\nexport default function ProfileAboutEdit() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const about = useSelector((state) => state.storeProfileAboutDataReducer);\n  const exp = useSelector((state) => state.storeProfileExperienceDataReducer);\n\n  const toggleExpState = useSelector(\n    (state) => state.toggleNewExperienceFormReducer\n  );\n  const toggleInsState = useSelector(\n    (state) => state.toggleNewInstrumentFormReducer\n  );\n\n  const saveAllChanges = () => {\n    // About Section\n    const aboutText = document.querySelector(\"#taAboutDescText\").value;\n\n    // Experience Section\n    const newExperienceArray = [];\n\n    const expCount = exp.length;\n    for (let i = 0; i < expCount; i = i + 1) {\n      const tbInstitution = document.querySelector(`#tbExpInstText${i}`).value;\n      const tbDesc = document.querySelector(`#taExpDescText${i}`).value;\n      const daStarted = document.querySelector(`#dtStarted${i}`).value;\n      const daEnded = document.querySelector(`#dtEnded${i}`).value;\n\n      const startedSplit = daStarted.split(\"-\");\n      const endedSplit = daEnded.split(\"-\");\n\n      const startedDate = firebase.firestore.Timestamp.fromDate(\n        new Date(`${startedSplit[1]} ${startedSplit[2]}, ${startedSplit[0]}`)\n      );\n      const endedDate = firebase.firestore.Timestamp.fromDate(\n        new Date(`${endedSplit[1]} ${endedSplit[2]}, ${endedSplit[0]}`)\n      );\n\n      newExperienceArray.push({\n        id: exp[i].id,\n        Institution: tbInstitution,\n        Desc: tbDesc,\n        Start: startedDate,\n        End: endedDate,\n      });\n    }\n\n    // Personal\n    const email = document.querySelector(\"#tbEmailText\").value;\n    const location = document.querySelector(\"#tbLocationText\").value;\n\n    const insArray = [];\n    const insCount = about.Instruments.length;\n    for (let i = 0; i < insCount; i = i + 1) {\n      const tbInstrument = document.querySelector(`#tbInstruments${i}`).value;\n\n      insArray.push(tbInstrument);\n    }\n\n    // Save to DB\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"About\")\n      .update({\n        About: aboutText,\n        Email: email,\n        Location: location,\n        Instruments: insArray,\n        Joined: about.Joined,\n      })\n      .catch((err) => console.log(err));\n\n    newExperienceArray.forEach((ex) => {\n      teachers_Collection\n        .doc(teacherAuthID)\n        .collection(\"Profile\")\n        .doc(\"Experience\")\n        .collection(\"ExpBlocks\")\n        .doc(ex.id)\n        .update({\n          Institution: ex.Institution,\n          Desc: ex.Desc,\n          Start: ex.Start,\n          End: ex.End,\n        })\n        .catch((err) => console.log(err));\n    });\n\n    // Dispatch\n    const tempAbout = {\n      About: aboutText,\n      Email: email,\n      Location: location,\n      Instruments: insArray,\n      Joined: about.Joined,\n    };\n\n    const tempExp = [...newExperienceArray];\n\n    dispatch(storeProfileAboutDataAction(tempAbout));\n    dispatch(storeProfileExperienceDataAction(tempExp));\n\n    history.push(\"/teacher-profile/about\");\n  };\n\n  const applyNewExperience = () => {\n    let rand1 = Math.random().toString(36).substring(3);\n    let rand2 = Math.random().toString(36).substring(3);\n    const expBlockID = `ExpBlock${rand1}${rand2}`;\n\n    const institution = document.querySelector(\"#tbInstText\").value;\n    const desc = document.querySelector(\"#tbDescText\").value;\n    const started = document.querySelector(\"#daStartDate\").value;\n    const ended = document.querySelector(\"#daEndDate\").value;\n\n    const startedSplit = started.split(\"-\");\n    const endedSplit = ended.split(\"-\");\n\n    const startedDate = firebase.firestore.Timestamp.fromDate(\n      new Date(`${startedSplit[1]} ${startedSplit[2]}, ${startedSplit[0]}`)\n    );\n    const endedDate = firebase.firestore.Timestamp.fromDate(\n      new Date(`${endedSplit[1]} ${endedSplit[2]}, ${endedSplit[0]}`)\n    );\n\n    // Save to database\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"Experience\")\n      .collection(\"ExpBlocks\")\n      .doc(expBlockID)\n      .set({\n        Institution: institution,\n        Desc: desc,\n        Start: startedDate,\n        End: endedDate,\n      })\n      .catch((err) => console.log(err));\n\n    // dispatch new exp\n    const allExp = [...exp];\n\n    allExp.push({\n      id: expBlockID,\n      Institution: institution,\n      Desc: desc,\n      Start: startedDate,\n      End: endedDate,\n    });\n\n    console.log(allExp);\n\n    dispatch(storeProfileExperienceDataAction(allExp));\n    dispatch(toggleNewExperienceFormAction());\n  };\n\n  const removeExperience = (event) => {\n    const exID = event.target.getAttribute(\"id\");\n\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"Experience\")\n      .collection(\"ExpBlocks\")\n      .doc(exID)\n      .delete()\n      .catch((err) => console.log(err));\n\n    const allExp = [...exp];\n\n    const filtered = allExp.filter((ex) => ex.id !== exID);\n\n    dispatch(storeProfileExperienceDataAction(filtered));\n  };\n\n  const removeInstrument = (event) => {\n    const instrument = event.target.getAttribute(\"id\");\n    const allInstruments = [...about.Instruments];\n\n    const newList = allInstruments.filter((ins) => ins !== instrument);\n\n    const newObj = {\n      ...about,\n      Instruments: newList,\n    };\n\n    // Remove from DB\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"About\")\n      .update({\n        Instruments: firebase.firestore.FieldValue.arrayRemove(instrument),\n      })\n      .catch((err) => console.log(err));\n\n    dispatch(storeProfileAboutDataAction(newObj));\n  };\n\n  const addInstrument = () => {\n    const newIns = document.querySelector(\"#tbNewInsText\").value;\n\n    // Add to DB\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"About\")\n      .update({\n        Instruments: firebase.firestore.FieldValue.arrayUnion(newIns),\n      })\n      .catch((err) => console.log(err));\n\n    // dispatch\n    const newInstruments = [...about.Instruments];\n    newInstruments.push(newIns);\n\n    const newObj = {\n      ...about,\n      Instruments: newInstruments,\n    };\n\n    dispatch(storeProfileAboutDataAction(newObj));\n    dispatch(toggleNewInstrumentFormAction());\n  };\n\n  // HANDLE\n  const handleCurrPage = () => {\n    let feedBtn = document.querySelector(\"#link-feed\");\n    feedBtn.classList.remove(\"navy-back\");\n\n    let aboutBtn = document.querySelector(\"#link-about\");\n    aboutBtn.classList.add(\"navy-back\");\n\n    let awardsBtn = document.querySelector(\"#link-awards\");\n    awardsBtn.classList.remove(\"navy-back\");\n\n    let galleryBtn = document.querySelector(\"#link-gallery\");\n    galleryBtn.classList.remove(\"navy-back\");\n\n    let reviewsBtn = document.querySelector(\"#link-reviews\");\n    reviewsBtn.classList.remove(\"navy-back\");\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n\n    handleCurrPage();\n  }, []);\n  return (\n    <div className=\"post-edit-wrapper\">\n      <div>\n        <button\n          className=\"btn-back maroon-back\"\n          onClick={() => history.push(\"/teacher-profile/about\")}\n        >\n          Back\n        </button>\n      </div>\n\n      <div className=\"post-create\">\n        <div>\n          <h2>About</h2>\n          <textarea id=\"taAboutDescText\" defaultValue={about.About}></textarea>\n        </div>\n\n        <div>\n          <h2>Experience</h2>\n          {exp.map((ex, i) => {\n            const start = `${ex.Start.toDate().getFullYear()}-${\n              ex.Start.toDate().getMonth() + 1 < 10 ? \"0\" : \"\"\n            }${ex.Start.toDate().getMonth() + 1}-${\n              ex.Start.toDate().getDate() < 10 ? \"0\" : \"\"\n            }${ex.Start.toDate().getDate()}`;\n\n            const end = `${ex.End.toDate().getFullYear()}-${\n              ex.End.toDate().getMonth() + 1 < 10 ? \"0\" : \"\"\n            }${ex.End.toDate().getMonth() + 1}-${\n              ex.End.toDate().getDate() < 10 ? \"0\" : \"\"\n            }${ex.End.toDate().getDate()}`;\n\n            return (\n              <div key={i}>\n                <h4>Institution</h4>\n                <input\n                  id={`tbExpInstText${i}`}\n                  type=\"text\"\n                  defaultValue={ex.Institution}\n                />\n                <h4>Description</h4>\n                <textarea\n                  id={`taExpDescText${i}`}\n                  defaultValue={ex.Desc}\n                ></textarea>\n                <h4>Started</h4>\n                <input id={`dtStarted${i}`} type=\"date\" defaultValue={start} />\n                <h4>Ended</h4>\n                <input id={`dtEnded${i}`} type=\"date\" defaultValue={end} />\n                <button id={ex.id} onClick={removeExperience}>\n                  Remove\n                </button>\n                <hr />\n              </div>\n            );\n          })}\n\n          {toggleExpState ? (\n            <div>\n              <button\n                onClick={() => {\n                  dispatch(toggleNewExperienceFormAction());\n                }}\n              >\n                Cancel\n              </button>\n              {/* Form */}\n              <div>\n                <h3>Institution</h3>\n                <input id=\"tbInstText\" type=\"text\" placeholder=\"Institution\" />\n              </div>\n              <div>\n                <h3>Description</h3>\n                <textarea id=\"tbDescText\" placeholder=\"Description\"></textarea>\n              </div>\n              <div>\n                <h3>Started: </h3>\n                <input id=\"daStartDate\" type=\"date\" />\n              </div>\n              <div>\n                <h3>Ended: </h3>\n                <input id=\"daEndDate\" type=\"date\" />\n              </div>\n              <div>\n                <button onClick={applyNewExperience}>Apply</button>\n              </div>\n            </div>\n          ) : (\n            <button onClick={() => dispatch(toggleNewExperienceFormAction())}>\n              +\n            </button>\n          )}\n        </div>\n        <div>\n          <h2>Personal</h2>\n          <p>Email:</p>\n          <input id=\"tbEmailText\" type=\"text\" defaultValue={about.Email} />\n          <p>Location:</p>\n          <input\n            id=\"tbLocationText\"\n            type=\"text\"\n            defaultValue={about.Location}\n          />\n          <p>Instruments: </p>\n          {about.Instruments\n            ? about.Instruments.map((ins, i) => {\n                return (\n                  <div key={i}>\n                    <input\n                      id={`tbInstruments${i}`}\n                      type=\"text\"\n                      defaultValue={ins}\n                    />\n                    <button id={ins} onClick={removeInstrument}>\n                      -\n                    </button>\n                  </div>\n                );\n              })\n            : null}\n          {about.Joined ? (\n            <div>\n              {/* Toggle Instrument Add */}\n              {toggleInsState ? (\n                <div>\n                  <div>\n                    <button\n                      onClick={() => {\n                        dispatch(toggleNewInstrumentFormAction());\n                      }}\n                    >\n                      Cancel\n                    </button>\n                  </div>\n                  <h3>Instrument</h3>\n                  <input\n                    id=\"tbNewInsText\"\n                    type=\"text\"\n                    placeholder=\"Instrument\"\n                  />\n                  <div>\n                    <button onClick={addInstrument}>Apply</button>\n                  </div>\n                </div>\n              ) : (\n                <button\n                  onClick={() => {\n                    dispatch(toggleNewInstrumentFormAction());\n                  }}\n                >\n                  +\n                </button>\n              )}\n\n              <p>Joined: {about.Joined.toDate().toString().substr(4, 11)}</p>\n            </div>\n          ) : null}\n        </div>\n        <button onClick={saveAllChanges}>Save All Changes</button>\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Courses/StudentCourseExercise.js",["589","590"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  courses_Collection,\n  students_Collection,\n} from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nimport Footer from \"../Footer\";\nimport RandomString from \"../../RandomString\";\nimport GetToday from \"../../GetToday\";\nimport { storeStudentNextQuizAction } from \"../../../redux/actions\";\n\nexport default function StudentCourseExercise() {\n  const studentAuthID = useSelector((state) => state.storeStudentAuthIDReducer);\n  const user = useSelector((state) => state.storeStudentUserDataReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const currExer = useSelector(\n    (state) => state.storeStudentNextExerciseReducer\n  );\n  const course = useSelector((state) => state.storeStudentSingleCourseReducer);\n\n  //   HANDLE\n  const handleExercise = () => {\n    if (currExer.Type === \"textual\") {\n      return (\n        <div>\n          <div>\n            <p>{currExer.Text}</p>\n          </div>\n\n          <div>\n            <textarea id=\"taTextualResponse\" placeholder=\"Response\"></textarea>\n          </div>\n          <div>\n            <button onClick={navQuiz}>Finish</button>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  // NAV\n  const navQuiz = () => {\n    // First, store their response to DB. No need to dispatch\n    const textRes = document.querySelector(\"#taTextualResponse\").value;\n\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const exerResID = `ExerRes${rand1}${rand2}`;\n\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Exercises\")\n      .doc(exerResID)\n      .set({\n        Course: course.Name,\n        Response: textRes,\n        Order: currExer.Order,\n        Name: currExer.Name,\n        Date: GetToday(),\n      })\n      .catch((err) => console.log(err));\n\n    // Store in CourseProgress\n    const rand3 = RandomString();\n    const rand4 = RandomString();\n    const progID = `Prog${rand3}${rand4}`;\n\n    // Update Course Progress\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"CourseProgress\")\n      .doc(progID)\n      .set({\n        CourseName: course.Name,\n        CompName: currExer.Name,\n        CompType: \"Exercise\",\n        Order: currExer.Order,\n        Date: GetToday(),\n      })\n      .catch((err) => console.log(err));\n\n    // Get Next Quiz\n    courses_Collection\n      .doc(course.id)\n      .collection(\"Quizzes\")\n      .get()\n      .then((snapshot) => {\n        const quizData = firebaseLooper(snapshot);\n        quizData.forEach((quiz) => {\n          if (quiz.Order === currExer.Order) {\n            courses_Collection\n              .doc(course.id)\n              .collection(\"Quizzes\")\n              .doc(quiz.id)\n              .collection(\"Components\")\n              .get()\n              .then((snapshot) => {\n                const compData = firebaseLooper(snapshot);\n\n                const quizObj = {\n                  ...quiz,\n                  Components: compData,\n                };\n\n                dispatch(storeStudentNextQuizAction(quizObj));\n              })\n              .catch((err) => console.log(err));\n          }\n        });\n      })\n      .catch((err) => console.log(err));\n\n    history.push(\"/student-course-quiz\");\n  };\n\n  useEffect(() => {\n    if (!studentAuthID) {\n      history.push(\"/studentdash\");\n      return;\n    }\n  }, []);\n  return (\n    <div>\n      <div>\n        <h1>{currExer.Name}</h1>\n      </div>\n\n      {/* Content */}\n      <div>{handleExercise()}</div>\n\n      {/* Footer */}\n      <div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Assignments/AssignmentNew.js",["591"],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Profile/ProfileAboutEdit.js",["592","593"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport InputDateFormatter from \"../../InputDateFormatter\";\nimport FirebaseDate from \"../../FirebaseDate\";\nimport GetToday from \"../../GetToday\";\nimport RandomString from \"../../RandomString\";\nimport {\n  storeStudentAboutAction,\n  storeStudentExpAction,\n  toggleNewExpFormAction,\n  toggleNewInstrumentFormAction,\n} from \"../../../redux/actions\";\nimport { students_Collection } from \"../../../utils/firebase\";\n\nexport default function ProfileAboutEdit() {\n  const studentAuthID = useSelector((state) => state.storeStudentAuthIDReducer);\n  const user = useSelector((state) => state.storeStudentUserDataReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const about = useSelector((state) => state.storeStudentAboutReducer);\n  const exps = useSelector((state) => state.storeStudentExpReducer);\n\n  const toggleNewExpForm = useSelector(\n    (state) => state.toggleNewExpFormReducer\n  );\n  const toggleNewInstrumentForm = useSelector(\n    (state) => state.toggleNewInstrumentFormReducer\n  );\n\n  // HANDLE\n  const handleEditExp = () => {\n    return exps.map((exp, i) => {\n      return (\n        <div>\n          <div>\n            <h3>Institution</h3>\n            <input\n              id={`tbInstEdit${i}`}\n              type=\"text\"\n              defaultValue={exp.Institution}\n            />\n          </div>\n          <div>\n            <h3>Description</h3>\n            <textarea id={`taDescEdit${i}`} defaultValue={exp.Desc} />\n          </div>\n          <div>\n            <h3>Started</h3>\n            <input\n              type=\"date\"\n              id={`daStart${i}`}\n              defaultValue={InputDateFormatter(exp.Start)}\n            ></input>\n          </div>\n\n          <div>\n            <h3>Ended</h3>\n            <input\n              type=\"date\"\n              id={`daEnd${i}`}\n              defaultValue={InputDateFormatter(exp.End)}\n            ></input>\n          </div>\n          <button id={exp.id} onClick={removeExp}>\n            Remove\n          </button>\n          <hr />\n        </div>\n      );\n    });\n  };\n  const handleInstruments = () => {\n    if (about.Instruments) {\n      return about.Instruments.map((ins, i) => {\n        return (\n          <div key={i}>\n            <input id={`tbInstrument${i}`} type=\"text\" defaultValue={ins} />\n            <button id={ins} onClick={removeInstrument}>\n              -\n            </button>\n          </div>\n        );\n      });\n    }\n  };\n  const handleNewExp = () => {\n    return (\n      <div>\n        <div>\n          <h3>Institution</h3>\n          <input id=\"tbNewInstitution\" type=\"text\" placeholder=\"Institution\" />\n        </div>\n        <div>\n          <h3>Description</h3>\n          <textarea id=\"tbNewDesc\" placeholder=\"Description\"></textarea>\n        </div>\n        <div>\n          <h3>Started</h3>\n          <input\n            type=\"date\"\n            id=\"daNewStarted\"\n            defaultValue={InputDateFormatter(GetToday())}\n          />\n        </div>\n        <div>\n          <h3>Ended</h3>\n          <input\n            type=\"date\"\n            id=\"daNewEnded\"\n            defaultValue={InputDateFormatter(GetToday())}\n          />\n        </div>\n\n        <button onClick={saveExp}>Apply</button>\n      </div>\n    );\n  };\n  const handleNewInstrument = () => {\n    return (\n      <div>\n        <input id=\"tbNewInstrument\" type=\"text\" placeholder=\"Instrument\" />\n        <button onClick={saveInstrument}>Apply</button>\n      </div>\n    );\n  };\n\n  //   POST\n  const saveExp = () => {\n    const institution = document.querySelector(\"#tbNewInstitution\").value;\n    const desc = document.querySelector(\"#tbNewDesc\").value;\n    const started = FirebaseDate(document.querySelector(\"#daNewStarted\").value);\n    const ended = FirebaseDate(document.querySelector(\"#daNewEnded\").value);\n\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const expID = `Exp${rand1}${rand2}`;\n\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"Experience\")\n      .collection(\"ExpBlocks\")\n      .doc(expID)\n      .set({\n        Institution: institution,\n        Desc: desc,\n        Start: started,\n        End: ended,\n      })\n      .catch((err) => console.log(err));\n\n    //   Dispatch\n    const allExp = [...exps];\n    allExp.push({\n      id: expID,\n      Institution: institution,\n      Desc: desc,\n      Start: started,\n      End: ended,\n    });\n\n    dispatch(storeStudentExpAction(allExp));\n    dispatch(toggleNewExpFormAction());\n  };\n  const saveInstrument = () => {\n    const instrument = document.querySelector(\"#tbNewInstrument\").value;\n    const allInstruments = [...about.Instruments];\n    allInstruments.push(instrument);\n    //   Save to DB\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"About\")\n      .update({\n        Instruments: [...allInstruments],\n      })\n      .catch((err) => console.log(err));\n\n    //   Dispatch\n    const aboutObj = { ...about };\n    aboutObj.Instruments = [...allInstruments];\n\n    dispatch(storeStudentAboutAction(aboutObj));\n    dispatch(toggleNewInstrumentFormAction());\n  };\n  const saveAllChanges = () => {\n    const aboutText = document.querySelector(\"#taAboutText\").value;\n\n    const expCount = exps.length;\n    const instCount = about.Instruments.length;\n\n    const allExp = [];\n    const allInst = [];\n\n    for (let i = 0; i < expCount; i = i + 1) {\n      const expIns = document.querySelector(`#tbInstEdit${i}`).value;\n      const expDesc = document.querySelector(`#taDescEdit${i}`).value;\n      const expStart = document.querySelector(`#daStart${i}`).value;\n      const expEnd = document.querySelector(`#daEnd${i}`).value;\n\n      const tempObj = {\n        id: exps[i].id,\n        Institution: expIns,\n        Desc: expDesc,\n        Start: FirebaseDate(expStart),\n        End: FirebaseDate(expEnd),\n      };\n\n      allExp.push(tempObj);\n    }\n\n    for (let i = 0; i < instCount; i = i + 1) {\n      const ins = document.querySelector(`#tbInstrument${i}`).value;\n      allInst.push(ins);\n    }\n\n    const location = document.querySelector(\"#tbLocation\").value;\n\n    // Save to DB\n\n    // About\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"About\")\n      .update({\n        About: aboutText,\n        Location: location,\n        Instruments: [...allInst],\n      })\n      .catch((err) => console.log(err));\n\n    //   Experience\n    allExp.forEach((ex) => {\n      students_Collection\n        .doc(studentAuthID)\n        .collection(\"Profile\")\n        .doc(\"Experience\")\n        .collection(\"ExpBlocks\")\n        .doc(ex.id)\n        .update({\n          Institution: ex.Institution,\n          Desc: ex.Desc,\n          Start: ex.Start,\n          End: ex.End,\n        })\n        .catch((err) => console.log(err));\n    });\n\n    // Dispatch\n\n    // About\n    about.About = aboutText;\n    about.Instruments = [...allInst];\n    about.Location = location;\n\n    history.push(\"/student-profile/about\");\n  };\n\n  //   REMOVE\n  const removeExp = (event) => {\n    const expID = event.target.getAttribute(\"id\");\n\n    // Remove from DB\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"Experience\")\n      .collection(\"ExpBlocks\")\n      .doc(expID)\n      .delete()\n      .catch((err) => console.log(err));\n\n    //   Dispatch\n    const allExp = [...exps];\n    const filtered = allExp.filter((ex) => ex.id !== expID);\n\n    dispatch(storeStudentExpAction(filtered));\n  };\n  const removeInstrument = (event) => {\n    const instrument = event.target.getAttribute(\"id\");\n\n    const allInstruments = [...about.Instruments];\n    const filtered = allInstruments.filter((inst) => inst !== instrument);\n\n    // Remove from DB\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"About\")\n      .update({\n        Instruments: [...filtered],\n      })\n      .catch((err) => console.log(err));\n\n    //   Dispatch\n\n    const aboutObj = { ...about };\n    aboutObj.Instruments = [...filtered];\n\n    dispatch(storeStudentAboutAction(aboutObj));\n  };\n\n  useEffect(() => {\n    if (!studentAuthID) {\n      history.push(\"/studentdash\");\n      return;\n    }\n  }, []);\n  return (\n    <div>\n      {/* About */}\n      <div>\n        <h2>About</h2>\n        <textarea id=\"taAboutText\" defaultValue={about.About}></textarea>\n      </div>\n\n      {/* Experience */}\n      <div>\n        <h2>Experience</h2>\n        <div>{handleEditExp()}</div>\n        <div>{toggleNewExpForm ? handleNewExp() : null}</div>\n        <br />\n        <button onClick={() => dispatch(toggleNewExpFormAction())}>\n          {toggleNewExpForm ? \"Close\" : \"Add Experience\"}\n        </button>\n      </div>\n\n      {/* Persona; */}\n      <div>\n        <h2>Personal</h2>\n        <h3>Location:</h3>\n        <input type=\"text\" id=\"tbLocation\" defaultValue={about.Location} />\n        <h3>Instruments:</h3>\n        {/* instruments */}\n        {handleInstruments()}\n        <br />\n        {toggleNewInstrumentForm ? handleNewInstrument() : null}\n        <button onClick={() => dispatch(toggleNewInstrumentFormAction())}>\n          {toggleNewInstrumentForm ? \"Close\" : \"+\"}\n        </button>\n      </div>\n      <br />\n      <button onClick={saveAllChanges}>Save All Changes</button>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Assignments/StudentAssignmentsMain.js",["594","595","596","597","598","599"],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Events/EventsMain.js",["600","601","602"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport DashFooter from \"../Dash/DashFooter\";\nimport GetToday from \"../../GetToday\";\n\nimport { teachers_Collection } from \"../../../utils/firebase\";\nimport {\n  storeTeacherEventsGeneralInfoAction,\n  storeTodayArrayAction,\n  storeMonthEventsAction,\n  storeSingleMonthEventAction,\n} from \"../../../redux/actions\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nexport default function EventsMain() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const events = useSelector(\n    (state) => state.storeTeacherEventsGeneralInfoReducer\n  );\n\n  const todayArray = useSelector((state) => state.storeTodayArrayReducer);\n  const monthEvents = useSelector((state) => state.storeMonthEventsReducer);\n\n  // GET\n  const getAllEvents = () => {\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Events\")\n      .orderBy(\"Start\", \"asc\")\n      .get()\n      .then((snapshot) => {\n        const eventsData = firebaseLooper(snapshot);\n        dispatch(storeTeacherEventsGeneralInfoAction(eventsData));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  // HANDLE\n  const handleEventList = () => {\n    return monthEvents.map((eve, i) => {\n      return (\n        <div key={i}>\n          <h3>{eve.Name}</h3>\n          <p>\n            Start:{\" \"}\n            {eve.Start ? eve.Start.toDate().toString().substr(4, 11) : null}\n          </p>\n          <p>\n            End: {eve.End ? eve.End.toDate().toString().substr(4, 11) : null}\n          </p>\n          <button id={eve.id} onClick={navEventView}>\n            View\n          </button>\n          <button id={eve.id} onClick={navEventEdit}>\n            Edit\n          </button>\n          <button id={eve.id} onClick={removeEvent}>\n            Remove\n          </button>\n        </div>\n      );\n    });\n  };\n\n  // EVENT STUFFS\n  const turnMonthToNum = (shortMonth) => {\n    switch (shortMonth) {\n      case \"Jan\":\n        return 1;\n      case \"Feb\":\n        return 2;\n      case \"Mar\":\n        return 3;\n      case \"Apr\":\n        return 4;\n      case \"May\":\n        return 5;\n      case \"Jun\":\n        return 6;\n      case \"Jul\":\n        return 7;\n      case \"Aug\":\n        return 8;\n      case \"Sep\":\n        return 9;\n      case \"Oct\":\n        return 10;\n      case \"Nov\":\n        return 11;\n      case \"Dec\":\n        return 12;\n      default:\n        return \"No Month Found.\";\n    }\n  };\n  const turnMonthToLong = (shortMonth) => {\n    switch (shortMonth) {\n      case \"Jan\":\n        return \"January\";\n      case \"Feb\":\n        return \"Feburary\";\n      case \"Mar\":\n        return \"March\";\n      case \"Apr\":\n        return \"April\";\n      case \"May\":\n        return \"May\";\n      case \"Jun\":\n        return \"June\";\n      case \"Jul\":\n        return \"July\";\n      case \"Aug\":\n        return \"August\";\n      case \"Sep\":\n        return \"September\";\n      case \"Oct\":\n        return \"October\";\n      case \"Nov\":\n        return \"November\";\n      case \"Dec\":\n        return \"December\";\n      default:\n        return \"No Month Found.\";\n    }\n  };\n  const turnNumToShort = (numMonth) => {\n    switch (numMonth) {\n      case 1:\n        return \"Jan\";\n      case 2:\n        return \"Feb\";\n      case 3:\n        return \"Mar\";\n      case 4:\n        return \"Apr\";\n      case 5:\n        return \"May\";\n      case 6:\n        return \"Jun\";\n      case 7:\n        return \"Jul\";\n      case 8:\n        return \"Aug\";\n      case 9:\n        return \"Sep\";\n      case 10:\n        return \"Oct\";\n      case 11:\n        return \"Nov\";\n      case 12:\n        return \"Dec\";\n      default:\n        return \"No Month Found.\";\n    }\n  };\n  const turnNumToLong = (numMonth) => {\n    switch (numMonth) {\n      case 1:\n        return \"January\";\n      case 2:\n        return \"February\";\n      case 3:\n        return \"March\";\n      case 4:\n        return \"April\";\n      case 5:\n        return \"May\";\n      case 6:\n        return \"June\";\n      case 7:\n        return \"July\";\n      case 8:\n        return \"August\";\n      case 9:\n        return \"September\";\n      case 10:\n        return \"October\";\n      case 11:\n        return \"November\";\n      case 12:\n        return \"December\";\n      default:\n        return \"No Month Found\";\n    }\n  };\n\n  const getEventDetails = () => {\n    const today = GetToday().toDate().toString().substr(4, 11).split(\" \");\n    const todayArr = [\n      turnMonthToNum(today[0]),\n      parseInt(today[1], 10),\n      parseInt(today[2], 10),\n    ];\n\n    dispatch(storeTodayArrayAction(todayArr));\n\n    const todayMonth = todayArray[0];\n    const todayYear = todayArray[2];\n\n    const currentEvents = [];\n    events.forEach((eve) => {\n      if (eve.Start) {\n        const startArr = eve.Start.toDate().toString().substr(4, 11).split(\" \");\n        const endArr = eve.End.toDate().toString().substr(4, 11).split(\" \");\n\n        const startMonth = turnMonthToNum(startArr[0]);\n        const startYear = parseInt(startArr[2], 10);\n\n        const endMonth = turnMonthToNum(endArr[0]);\n        const endYear = parseInt(endArr[2], 10);\n\n        if (startMonth === todayMonth) {\n          if (startYear === todayYear) {\n            currentEvents.push(eve);\n          }\n        } else if (endMonth === todayMonth) {\n          if (endYear === todayYear) {\n            currentEvents.push(eve);\n          }\n        }\n      }\n    });\n\n    dispatch(storeMonthEventsAction(currentEvents));\n  };\n\n  const goBackMonth = () => {\n    let month = todayArray[0];\n    let day = todayArray[1];\n    let year = todayArray[2];\n\n    if (month === 1) {\n      month = 12;\n      year = year - 1;\n    } else {\n      month = month - 1;\n    }\n\n    const newTodayArr = [month, day, year];\n\n    dispatch(storeTodayArrayAction(newTodayArr));\n\n    const todayMonth = month;\n    const todayYear = year;\n\n    const currentEvents = [];\n    events.forEach((eve) => {\n      if (eve.Start) {\n        const startArr = eve.Start.toDate().toString().substr(4, 11).split(\" \");\n        const endArr = eve.End.toDate().toString().substr(4, 11).split(\" \");\n\n        const startMonth = turnMonthToNum(startArr[0]);\n        const startYear = parseInt(startArr[2], 10);\n\n        const endMonth = turnMonthToNum(endArr[0]);\n        const endYear = parseInt(endArr[2], 10);\n\n        if (startMonth === todayMonth) {\n          if (startYear === todayYear) {\n            currentEvents.push(eve);\n          }\n        } else if (endMonth === todayMonth) {\n          if (endYear === todayYear) {\n            currentEvents.push(eve);\n          }\n        }\n      }\n    });\n\n    dispatch(storeMonthEventsAction(currentEvents));\n  };\n  const goForwMonth = () => {\n    let month = todayArray[0];\n    let day = todayArray[1];\n    let year = todayArray[2];\n\n    if (month === 12) {\n      month = 11;\n      year = year + 1;\n    } else {\n      month = month + 1;\n    }\n\n    const newTodayArr = [month, day, year];\n\n    dispatch(storeTodayArrayAction(newTodayArr));\n\n    const todayMonth = month;\n    const todayYear = year;\n\n    const currentEvents = [];\n    events.forEach((eve) => {\n      if (eve.Start) {\n        const startArr = eve.Start.toDate().toString().substr(4, 11).split(\" \");\n        const endArr = eve.End.toDate().toString().substr(4, 11).split(\" \");\n\n        const startMonth = turnMonthToNum(startArr[0]);\n        const startYear = parseInt(startArr[2], 10);\n\n        const endMonth = turnMonthToNum(endArr[0]);\n        const endYear = parseInt(endArr[2], 10);\n\n        if (startMonth === todayMonth) {\n          if (startYear === todayYear) {\n            currentEvents.push(eve);\n          }\n        } else if (endMonth === todayMonth) {\n          if (endYear === todayYear) {\n            currentEvents.push(eve);\n          }\n        }\n      }\n    });\n\n    dispatch(storeMonthEventsAction(currentEvents));\n  };\n\n  // REMOVE\n  const removeEvent = (event) => {\n    const eventID = event.target.getAttribute(\"id\");\n\n    // Remove from DB\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Events\")\n      .doc(eventID)\n      .delete()\n      .catch((err) => console.log(err));\n\n    // Dispatch\n\n    const allEvents = [...events];\n    const newEves = allEvents.filter((eee) => eee.id !== eventID);\n\n    const allMonthEvents = [...monthEvents];\n    const newMonthEves = allMonthEvents.filter((eee) => eee.id !== eventID);\n\n    dispatch(storeTeacherEventsGeneralInfoAction(newEves));\n    dispatch(storeMonthEventsAction(newMonthEves));\n  };\n\n  // NAV\n  const navEventView = (event) => {\n    const eventID = event.target.getAttribute(\"id\");\n\n    monthEvents.forEach((eve) => {\n      if (eve.id === eventID) {\n        dispatch(storeSingleMonthEventAction(eve));\n      }\n    });\n\n    history.push(\"/teacher-event-view\");\n  };\n  const navEventEdit = (event) => {\n    const eventID = event.target.getAttribute(\"id\");\n\n    monthEvents.forEach((eve) => {\n      if (eve.id === eventID) {\n        dispatch(storeSingleMonthEventAction(eve));\n      }\n    });\n\n    history.push(\"/teacher-event-edit\");\n  };\n  const navEventNew = () => {\n    history.push(\"/teacher-event-new\");\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n\n    getAllEvents();\n    getEventDetails();\n  }, []);\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      {/* Content */}\n      <div>\n        <h1>Events</h1>\n        <button className=\"btn-lime\" onClick={navEventNew}>\n          Create Event\n        </button>\n        <button onClick={() => getEventDetails()}>Rerender</button>\n        <div>\n          {/* Show current month */}\n          <h2>\n            {turnNumToLong(todayArray[0])}, {todayArray[2]}\n          </h2>\n          <button onClick={goBackMonth}>{`<`}</button>\n          <button onClick={goForwMonth}>{`>`}</button>\n        </div>\n\n        <div>{handleEventList()}</div>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Home/HomeCoursesDeck.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Tutorials/TutorialsMain.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/TopBar.js",["603"],"import \"./TopBar.css\";\nimport { firebaseLooper } from \"../../utils/tools\";\nimport {\n  studentReqQueue_Collection,\n  students_Collection,\n  teachers_Collection,\n} from \"../../utils/firebase\";\nimport React, { useEffect } from \"react\";\nimport RandomString from \"../RandomString\";\nimport GetToday from \"../GetToday\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCommentAlt,\n  faBell,\n  faSignOutAlt,\n  faUser,\n  faStar,\n  faExclamationCircle,\n  faTimes,\n  faPlusCircle,\n  faChalkboardTeacher,\n  faBookReader,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  storeAccountTypeAction,\n  storeTeacherAuthIDAction,\n  isLoggedInAction,\n  storeStudentNotificationsAction,\n  toggleStudentNotificationsWindowAction,\n} from \"../../redux/actions\";\n\nexport default function TopBar() {\n  const user = useSelector((state) => state.storeStudentUserDataReducer);\n  const studentAuthID = useSelector((state) => state.storeStudentAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // States\n  const toggleNotifWin = useSelector(\n    (state) => state.toggleStudentNotificationsWindowReducer\n  );\n  const notifications = useSelector(\n    (state) => state.storeStudentNotificationsReducer\n  );\n\n  // GET\n  const getAllNotifications = () => {\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Notifications\")\n      .orderBy(\"Date\", \"desc\")\n      .get()\n      .then((snapshot) => {\n        const notifData = firebaseLooper(snapshot);\n        dispatch(storeStudentNotificationsAction(notifData));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  // HANDLE\n  const handleNotificationsList = () => {\n    return notifications.map((notif, i) => {\n      return (\n        <div className=\"notifPanel\" key={i}>\n          <div className=\"topPanel\">\n            <FontAwesomeIcon\n              className=\"iconNotif\"\n              icon={\n                notif.Icon === \"faBell\"\n                  ? faBell\n                  : notif.Icon === \"faUser\"\n                  ? faUser\n                  : notif.Icon === \"faStar\"\n                  ? faStar\n                  : notif.Icon === \"faExclamationCircle\"\n                  ? faExclamationCircle\n                  : null\n              }\n            />\n            <p className=\"notifText\">{notif.Text}</p>\n            <p className=\"notifDate\">\n              {notif.Date ? notif.Date.toDate().toString().substr(4, 11) : null}\n            </p>\n            <button className=\"notifDel\">\n              <FontAwesomeIcon className=\"notifDelIcon\" icon={faTimes} />\n            </button>\n          </div>\n          <div className=\"bottomPanel\">\n            {notif.Action === \"request\" ? (\n              <div className=\"btnsNotifReq\">\n                <button\n                  id={notif.id}\n                  onClick={onAcceptReqClick}\n                  className=\"btnReq reqAccept\"\n                >\n                  Accept\n                </button>\n                <button\n                  id={notif.id}\n                  onClick={onDeclineReqClick}\n                  className=\"btnReq reqDecline\"\n                >\n                  Decline\n                </button>\n              </div>\n            ) : notif.Action === \"navigate\" ? (\n              <div className=\"btnNotifNav\">\n                <button className=\"btnReq notifNav\">Go to Page</button>\n              </div>\n            ) : null}\n          </div>\n        </div>\n      );\n    });\n  };\n\n  // CLICK\n  const onAcceptReqClick = (event) => {\n    // Remove Notification\n    const notifID = event.target.getAttribute(\"id\");\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Notifications\")\n      .doc(notifID)\n      .delete()\n      .catch((err) => console.log(err));\n\n    // Dispatch notif removal\n    const allNotifs = [...notifications];\n    const filtered = allNotifs.filter((n) => n.id !== notifID);\n\n    dispatch(storeStudentNotificationsAction(filtered));\n\n    // Remove Request\n    studentReqQueue_Collection\n      .where(\"StudentID\", \"==\", studentAuthID)\n      .get()\n      .then((snapshot) => {\n        const studReq = firebaseLooper(snapshot);\n        studReq.forEach((req) => {\n          // Send Student Data\n          teachers_Collection\n            .doc(req.TeacherID)\n            .collection(\"Students\")\n            .doc(studentAuthID)\n            .set({\n              FirstName: user.FirstName,\n              LastName: user.LastName,\n              Email: user.Email,\n            })\n            .catch((err) => console.log(err));\n\n          // Add Teacher to list\n          const rand1 = RandomString();\n          const rand2 = RandomString();\n          const teachID = `Teach${rand1}${rand2}`;\n          const nID = `Notif${rand1}${rand2}`;\n\n          students_Collection\n            .doc(studentAuthID)\n            .collection(\"Teachers\")\n            .doc(teachID)\n            .set({\n              FirstName: req.TFirstName,\n              LastName: req.TLastName,\n              TeacherID: req.TeacherID,\n            })\n            .catch((err) => console.log(err));\n\n          // Send teacher notification\n\n          teachers_Collection\n            .doc(req.TeacherID)\n            .collection(\"Notifications\")\n            .doc(nID)\n            .set({\n              Action: \"\",\n              Date: GetToday(),\n              Text: `${user.FirstName} ${user.LastName} has accepted your request.`,\n              Icon: \"faUser\",\n            })\n            .catch((err) => console.log(err));\n\n          // Remove from queue\n          studentReqQueue_Collection\n            .doc(req.id)\n            .delete()\n            .catch((err) => console.log(err));\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n  const onDeclineReqClick = (event) => {\n    // Remove Notification\n    const notifID = event.target.getAttribute(\"id\");\n\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Notifications\")\n      .doc(notifID)\n      .delete()\n      .catch((err) => console.log(err));\n\n    // Dispatch notif\n    const allNotifs = [...notifications];\n    const filtered = allNotifs.filter((n) => n.id !== notifID);\n\n    dispatch(storeStudentNotificationsAction(filtered));\n\n    // Remove from Requests\n    studentReqQueue_Collection\n      .where(\"StudentID\", \"==\", studentAuthID)\n      .get()\n      .then((snapshot) => {\n        const studReq = firebaseLooper(snapshot);\n        studReq.forEach((req) => {\n          // Send Notification\n          const rand1 = RandomString();\n          const rand2 = RandomString();\n          const nID = `Notif${rand1}${rand2}`;\n          teachers_Collection\n            .doc(req.TeacherID)\n            .collection(\"Notifications\")\n            .doc(nID)\n            .set({\n              Action: \"\",\n              Date: GetToday(),\n              Text: `${user.FirstName} ${user.LastName} has declined your request.`,\n              Icon: \"faUser\",\n            })\n            .catch((err) => console.log(err));\n\n          // Remove from queue\n          studentReqQueue_Collection\n            .doc(req.id)\n            .delete()\n            .catch((err) => console.log(err));\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    if (!studentAuthID) {\n      history.push(\"/studentdash\");\n      return;\n    }\n\n    getAllNotifications();\n  }, []);\n  const onLogOut = () => {\n    dispatch(storeAccountTypeAction(\"\"));\n    dispatch(storeTeacherAuthIDAction(\"\"));\n    dispatch(isLoggedInAction());\n    history.push(\"/login\");\n  };\n\n  return (\n    <div className=\"topbar-wrapper\">\n      <div>\n        <button class=\"btn-topbar\">\n          <FontAwesomeIcon icon={faCommentAlt} />\n        </button>\n\n        <button class=\"btn-topbar\">\n          <FontAwesomeIcon icon={faPlusCircle} />\n        </button>\n        <button class=\"btn-topbar\">\n          <FontAwesomeIcon icon={faChalkboardTeacher} />\n        </button>\n        <button class=\"btn-topbar\">\n          <FontAwesomeIcon icon={faBookReader} />\n        </button>\n      </div>\n      <div id=\"search-input\">\n        <input id=\"tbSearch\" type=\"text\" placeholder=\"Search...\" />\n      </div>\n      <div>\n        <button\n          onClick={() => dispatch(toggleStudentNotificationsWindowAction())}\n          id=\"btnNotif\"\n          class=\"btn-topbar\"\n        >\n          <FontAwesomeIcon icon={faBell} />\n        </button>\n        {toggleNotifWin ? (\n          <div id=\"winNotifications\">{handleNotificationsList()}</div>\n        ) : null}\n      </div>\n      <div className=\"topbar-user\">\n        <p>\n          {user.FirstName} {user.LastName}\n        </p>\n        <p>{user.AccountType}</p>\n      </div>\n      <div>\n        <button onClick={onLogOut} class=\"btn-topbar red\">\n          <FontAwesomeIcon icon={faSignOutAlt} />\n        </button>\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Home.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Dash/RecentInvoices.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/Courses/StudentCoursesMain.js",["604","605"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TopBar from \"../TopBar\";\nimport Footer from \"../Footer\";\nimport {\n  storeStudentSingleCourseAction,\n  flagStudentTeacherConnectionAction,\n  storeStudentTeacherListAction,\n  storeStudentCoursesAction,\n} from \"../../../redux/actions\";\nimport {\n  courses_Collection,\n  teachers_Collection,\n} from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nexport default function StudentCoursesMain() {\n  const studentAuthID = useSelector((state) => state.storeStudentAuthIDReducer);\n  const user = useSelector((state) => state.storeStudentUserDataReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // States\n  const studentTeacherConn = useSelector(\n    (state) => state.flagStudentTeacherConnectionReducer\n  );\n  const studentTeacherList = useSelector(\n    (state) => state.storeStudentTeacherListReducer\n  );\n\n  const courses = useSelector((state) => state.storeStudentCoursesReducer);\n\n  //   GET\n  const getStudentTeacherConnection = () => {\n    let teachers = [];\n    teachers_Collection\n      .get()\n      .then((snapshot) => {\n        const teacherList = firebaseLooper(snapshot);\n        teacherList.forEach((teach) => {\n          teachers_Collection\n            .doc(teach.id)\n            .collection(\"Students\")\n            .get()\n            .then((snapshot) => {\n              const studentList = firebaseLooper(snapshot);\n              studentList.forEach((stud) => {\n                if (stud.id === studentAuthID) {\n                  dispatch(flagStudentTeacherConnectionAction(true));\n                  teachers.push(teach);\n                  dispatch(storeStudentTeacherListAction(teachers));\n                }\n              });\n            })\n            .catch((err) => console.log(err));\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n  const getAllCourses = () => {\n    if (studentTeacherConn) {\n      studentTeacherList.forEach((teach) => {\n        courses_Collection\n          .where(\"Creator\", \"==\", teach.id)\n          .get()\n          .then((snapshot) => {\n            const courses = firebaseLooper(snapshot);\n            dispatch(storeStudentCoursesAction(courses));\n          })\n          .catch((err) => console.log(err));\n      });\n    }\n  };\n\n  //   HANDLE\n  const handleCourseList = () => {\n    return courses.map((course, i) => {\n      return (\n        <div key={i}>\n          <h3>{course.Name}</h3>\n          <h4>Instructor: {course.Creator}</h4>\n          <button id={course.id} onClick={navCoursePreview}>\n            Enter Course\n          </button>\n        </div>\n      );\n    });\n  };\n\n  //   NAVIGATE\n  const navCoursePreview = (event) => {\n    const courseID = event.target.getAttribute(\"id\");\n\n    courses.forEach((course) => {\n      if (course.id === courseID) {\n        dispatch(storeStudentSingleCourseAction(course));\n      }\n    });\n\n    history.push(\"/student-course-preview\");\n  };\n\n  useEffect(() => {\n    if (!studentAuthID) {\n      history.push(\"/studentdash\");\n      return;\n    }\n\n    getStudentTeacherConnection();\n    getAllCourses();\n  }, []);\n  return (\n    <div>\n      {/* TopBar */}\n      <div>\n        <TopBar />\n      </div>\n\n      {/* Content */}\n      <div>\n        <div>\n          <h1>Courses</h1>\n        </div>\n\n        {/* Search */}\n        <div>\n          <input\n            id=\"tbCourseSearch\"\n            type=\"text\"\n            placeholder=\"Type Course Name/Keywords\"\n          />\n        </div>\n        <hr />\n        <button\n          onClick={() => {\n            getStudentTeacherConnection();\n            getAllCourses();\n          }}\n        >\n          Rerender\n        </button>\n        {/* Course List */}\n        <div>{handleCourseList()}</div>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Assignments/AssignmentsMain.js",["606"],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Dash/SimpleStats.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/MiscComponents/Notice.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Students/StudentDash.js",["607","608","609","610"],"import React, { useEffect } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  storeAccountTypeAction,\n  storeStudentAuthIDAction,\n  isLoggedInAction,\n  storeStudentUserDataAction,\n} from \"../../redux/actions\";\n\nimport TopBar from \"./TopBar\";\nimport Footer from \"./Footer\";\nimport \"./StudentDash.css\";\nimport { users_Collection } from \"../../utils/firebase\";\nimport { firebaseLooper } from \"../../utils/tools\";\n\nexport default function StudentDash() {\n  const studentAuthID = useSelector((state) => state.storeStudentAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const getStudentUserData = () => {\n    users_Collection\n      .get()\n      .then((snapshot) => {\n        const userData = firebaseLooper(snapshot);\n        userData.forEach((user) => {\n          if (user.AuthID === studentAuthID) {\n            dispatch(storeStudentUserDataAction(user));\n          }\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    if (!studentAuthID) {\n      history.push(\"/login\");\n      return;\n    }\n\n    getStudentUserData();\n  }, []);\n\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      <div className=\"content\">\n        <h1>Dashboard</h1>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Connections/ConnectionsMain.js",["611","612"],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Statistics/ForumStats.js",["613"],"import React, { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { statisticsObjectAction } from \"../../../redux/actions\";\n\nexport default function ForumStats() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const storageState = useSelector(\n    (state) => state.storeTeacherStatisticsGeneralInfoReducer\n  );\n  const storageObj = useSelector((state) => state.statisticsObjectReducer);\n\n  const getStorageObj = () => {\n    storageState.forEach((obj) => {\n      if (obj.id === \"ForumStats\") {\n        dispatch(statisticsObjectAction(obj));\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n    }\n    getStorageObj();\n  }, []);\n  return (\n    <div>\n      <h1>Forum Stats</h1>\n      <hr/>\n      <p># of Forum Discussions: {storageObj.Num}</p>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Profile/ProfileFeedView.js",["614","615","616","617","618"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { teachers_Collection } from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\nimport {\n  storeProfileFeedPostDataAction,\n  storeProfileFeedSinglePostDataAction,\n} from \"../../../redux/actions\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport \"./Profile.css\";\nimport { faEllipsisV, faPen, faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function ProfileFeedView() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  //   States\n  const posts = useSelector((state) => state.storeProfileFeedPostDataReducer);\n  const userDataState = useSelector((state) => state.userDataReducer);\n\n  // GET\n  const getProfileFeedData = () => {\n    const feed_Collection = teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"Feed\")\n      .collection(\"Posts\");\n    feed_Collection\n      .orderBy(\"Date\", \"desc\")\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        const feedPostArray = [];\n        data.forEach((d, i) => {\n          const comments_Collection = teachers_Collection\n            .doc(teacherAuthID)\n            .collection(\"Profile\")\n            .doc(\"Feed\")\n            .collection(\"Posts\")\n            .doc(d.id)\n            .collection(\"Comments\");\n          comments_Collection\n            .orderBy(\"Date\", \"desc\")\n            .get()\n            .then((snapshot) => {\n              const commentData = firebaseLooper(snapshot);\n              d = {\n                ...d,\n                commentData,\n              };\n              feedPostArray.push(d);\n              // Dispatch feedPostArray\n              if (i === data.length - 1) {\n                dispatch(storeProfileFeedPostDataAction(feedPostArray));\n              }\n            })\n            .catch((err) => console.log(err));\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const storeSinglePost = (event) => {\n    const postID = event.target.getAttribute(\"id\");\n    posts.forEach((post) => {\n      if (post.id === postID) {\n        dispatch(storeProfileFeedSinglePostDataAction(post));\n        history.push(\"/teacher-profile/edit-feed\");\n      }\n    });\n  };\n\n  // HANDLE\n  const handleCurrPage = () => {\n    let feedBtn = document.querySelector(\"#link-feed\");\n    feedBtn.classList.add(\"navy-back\");\n\n    let aboutBtn = document.querySelector(\"#link-about\");\n    aboutBtn.classList.remove(\"navy-back\");\n\n    let awardsBtn = document.querySelector(\"#link-awards\");\n    awardsBtn.classList.remove(\"navy-back\");\n\n    let galleryBtn = document.querySelector(\"#link-gallery\");\n    galleryBtn.classList.remove(\"navy-back\");\n\n    let reviewsBtn = document.querySelector(\"#link-reviews\");\n    reviewsBtn.classList.remove(\"navy-back\");\n  };\n  const handlePostList = () => {\n    return posts.map((post, i) => {\n      return (\n        <div className=\"post-wrapper\" key={i}>\n          <div className=\"post-top-wrapper\">\n            <div className=\"post-name-split\">\n              <h3 className=\"post-name\">\n                {userDataState.FirstName} {userDataState.LastName}\n              </h3>\n              <p className=\"post-date\">\n                {post.Date ? post.Date.toDate().toString().substr(4, 11) : null}\n              </p>\n            </div>\n            <div>\n              <button\n                className=\"btn-edit\"\n                id={post.id}\n                onClick={storeSinglePost}\n              >\n                Edit\n              </button>\n            </div>\n          </div>\n\n          <div className=\"post-body\">\n            <p>{post.Text}</p>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n    getProfileFeedData();\n    handleCurrPage();\n  }, []);\n\n  return (\n    <div>\n      <button\n        className=\"btn-newPost\"\n        onClick={() => history.push(\"/teacher-profile/new-feed\")}\n      >\n        Create Post\n      </button>\n      <br />\n      <div>{handlePostList()}</div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Messages/MessagesMain.js",["619"],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Groups/GroupMembersView.js",["620","621"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { storeGroupMembersListAction } from \"../../../redux/actions\";\nimport { groups_Collection } from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nexport default function GroupMembersView() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const members = useSelector((state) => state.storeGroupMembersListReducer);\n  const group = useSelector((state) => state.storeSingleGroupReducer);\n\n  const getAllMembers = () => {\n    groups_Collection\n      .doc(group.id)\n      .collection(\"Members\")\n      .get()\n      .then((snapshot) => {\n        const memberData = firebaseLooper(snapshot);\n        dispatch(storeGroupMembersListAction(memberData));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleMemberList = () => {\n    return members.map((mem, i) => {\n      if (mem.Username) {\n        return (\n          <div key={i}>\n            {/* Profile Pic */}\n            <img src=\"\" alt=\"\" />\n\n            <p>{mem.Username}</p>\n            <p>{mem.Role}</p>\n          </div>\n        );\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n\n    getAllMembers();\n  }, []);\n  return (\n    <div>\n      <div>{handleMemberList()}</div>\n    </div>\n  );\n}\n","/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Dash/Earnings.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Plans.js",[],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Courses/CoursesMain.js",["622","623"],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Courses/WizardNewCourse.js",["624","625"],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/FileUpload.js",["626","627","628","629"],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Courses/WizardNewLesson.js",["630","631"],"/Users/jesusjimenez/Creative/MusicProject/musicapp/src/components/Teachers/Courses/WizardNewQuiz.js",["632","633"],{"ruleId":"634","severity":1,"message":"635","line":22,"column":9,"nodeType":"636","messageId":"637","endLine":22,"endColumn":13},{"ruleId":"638","severity":1,"message":"639","line":41,"column":39,"nodeType":"640","messageId":"641","endLine":41,"endColumn":41},{"ruleId":"638","severity":1,"message":"639","line":112,"column":30,"nodeType":"640","messageId":"641","endLine":112,"endColumn":32},{"ruleId":"642","severity":1,"message":"643","line":332,"column":6,"nodeType":"644","endLine":332,"endColumn":8,"suggestions":"645"},{"ruleId":"646","replacedBy":"647"},{"ruleId":"648","replacedBy":"649"},{"ruleId":"642","severity":1,"message":"650","line":163,"column":6,"nodeType":"644","endLine":163,"endColumn":8,"suggestions":"651"},{"ruleId":"646","replacedBy":"652"},{"ruleId":"648","replacedBy":"653"},{"ruleId":"642","severity":1,"message":"654","line":37,"column":6,"nodeType":"644","endLine":37,"endColumn":8,"suggestions":"655"},{"ruleId":"646","replacedBy":"656"},{"ruleId":"648","replacedBy":"657"},{"ruleId":"646","replacedBy":"658"},{"ruleId":"648","replacedBy":"659"},{"ruleId":"646","replacedBy":"660"},{"ruleId":"648","replacedBy":"661"},{"ruleId":"646","replacedBy":"662"},{"ruleId":"648","replacedBy":"663"},{"ruleId":"642","severity":1,"message":"664","line":87,"column":6,"nodeType":"644","endLine":87,"endColumn":8,"suggestions":"665"},{"ruleId":"642","severity":1,"message":"654","line":97,"column":6,"nodeType":"644","endLine":97,"endColumn":8,"suggestions":"666"},{"ruleId":"646","replacedBy":"667"},{"ruleId":"648","replacedBy":"668"},{"ruleId":"642","severity":1,"message":"669","line":31,"column":6,"nodeType":"644","endLine":31,"endColumn":8,"suggestions":"670"},{"ruleId":"646","replacedBy":"671"},{"ruleId":"648","replacedBy":"672"},{"ruleId":"634","severity":1,"message":"635","line":13,"column":9,"nodeType":"636","messageId":"637","endLine":13,"endColumn":13},{"ruleId":"642","severity":1,"message":"673","line":90,"column":6,"nodeType":"644","endLine":90,"endColumn":8,"suggestions":"674"},{"ruleId":"642","severity":1,"message":"675","line":164,"column":6,"nodeType":"644","endLine":164,"endColumn":8,"suggestions":"676"},{"ruleId":"646","replacedBy":"677"},{"ruleId":"648","replacedBy":"678"},{"ruleId":"638","severity":1,"message":"639","line":319,"column":37,"nodeType":"640","messageId":"641","endLine":319,"endColumn":39},{"ruleId":"642","severity":1,"message":"679","line":436,"column":6,"nodeType":"644","endLine":436,"endColumn":8,"suggestions":"680"},{"ruleId":"634","severity":1,"message":"635","line":19,"column":9,"nodeType":"636","messageId":"637","endLine":19,"endColumn":13},{"ruleId":"642","severity":1,"message":"681","line":227,"column":6,"nodeType":"644","endLine":227,"endColumn":8,"suggestions":"682"},{"ruleId":"634","severity":1,"message":"683","line":28,"column":3,"nodeType":"636","messageId":"637","endLine":28,"endColumn":10},{"ruleId":"642","severity":1,"message":"684","line":275,"column":6,"nodeType":"644","endLine":275,"endColumn":8,"suggestions":"685"},{"ruleId":"642","severity":1,"message":"654","line":83,"column":6,"nodeType":"644","endLine":83,"endColumn":8,"suggestions":"686"},{"ruleId":"646","replacedBy":"687"},{"ruleId":"648","replacedBy":"688"},{"ruleId":"634","severity":1,"message":"689","line":14,"column":3,"nodeType":"636","messageId":"637","endLine":14,"endColumn":27},{"ruleId":"642","severity":1,"message":"654","line":170,"column":6,"nodeType":"644","endLine":170,"endColumn":8,"suggestions":"690"},{"ruleId":"634","severity":1,"message":"691","line":11,"column":9,"nodeType":"636","messageId":"637","endLine":11,"endColumn":17},{"ruleId":"642","severity":1,"message":"654","line":20,"column":6,"nodeType":"644","endLine":20,"endColumn":8,"suggestions":"692"},{"ruleId":"646","replacedBy":"693"},{"ruleId":"648","replacedBy":"694"},{"ruleId":"642","severity":1,"message":"695","line":47,"column":6,"nodeType":"644","endLine":47,"endColumn":8,"suggestions":"696"},{"ruleId":"646","replacedBy":"697"},{"ruleId":"648","replacedBy":"698"},{"ruleId":"634","severity":1,"message":"699","line":9,"column":10,"nodeType":"636","messageId":"637","endLine":9,"endColumn":27},{"ruleId":"634","severity":1,"message":"700","line":25,"column":9,"nodeType":"636","messageId":"637","endLine":25,"endColumn":19},{"ruleId":"642","severity":1,"message":"654","line":73,"column":6,"nodeType":"644","endLine":73,"endColumn":8,"suggestions":"701"},{"ruleId":"642","severity":1,"message":"654","line":43,"column":6,"nodeType":"644","endLine":43,"endColumn":8,"suggestions":"702"},{"ruleId":"642","severity":1,"message":"669","line":31,"column":6,"nodeType":"644","endLine":31,"endColumn":8,"suggestions":"703"},{"ruleId":"634","severity":1,"message":"635","line":19,"column":9,"nodeType":"636","messageId":"637","endLine":19,"endColumn":13},{"ruleId":"642","severity":1,"message":"643","line":394,"column":6,"nodeType":"644","endLine":394,"endColumn":8,"suggestions":"704"},{"ruleId":"646","replacedBy":"705"},{"ruleId":"648","replacedBy":"706"},{"ruleId":"634","severity":1,"message":"707","line":22,"column":9,"nodeType":"636","messageId":"637","endLine":22,"endColumn":24},{"ruleId":"634","severity":1,"message":"708","line":23,"column":9,"nodeType":"636","messageId":"637","endLine":23,"endColumn":25},{"ruleId":"642","severity":1,"message":"709","line":125,"column":6,"nodeType":"644","endLine":125,"endColumn":8,"suggestions":"710"},{"ruleId":"634","severity":1,"message":"711","line":13,"column":8,"nodeType":"636","messageId":"637","endLine":13,"endColumn":17},{"ruleId":"642","severity":1,"message":"712","line":113,"column":6,"nodeType":"644","endLine":113,"endColumn":8,"suggestions":"713"},{"ruleId":"642","severity":1,"message":"654","line":23,"column":6,"nodeType":"644","endLine":23,"endColumn":8,"suggestions":"714"},{"ruleId":"642","severity":1,"message":"654","line":99,"column":6,"nodeType":"644","endLine":99,"endColumn":8,"suggestions":"715"},{"ruleId":"634","severity":1,"message":"716","line":6,"column":8,"nodeType":"636","messageId":"637","endLine":6,"endColumn":16},{"ruleId":"642","severity":1,"message":"654","line":54,"column":6,"nodeType":"644","endLine":54,"endColumn":8,"suggestions":"717"},{"ruleId":"634","severity":1,"message":"635","line":13,"column":9,"nodeType":"636","messageId":"637","endLine":13,"endColumn":13},{"ruleId":"642","severity":1,"message":"718","line":79,"column":6,"nodeType":"644","endLine":79,"endColumn":8,"suggestions":"719"},{"ruleId":"634","severity":1,"message":"720","line":19,"column":3,"nodeType":"636","messageId":"637","endLine":19,"endColumn":38},{"ruleId":"634","severity":1,"message":"721","line":23,"column":3,"nodeType":"636","messageId":"637","endLine":23,"endColumn":25},{"ruleId":"634","severity":1,"message":"722","line":24,"column":3,"nodeType":"636","messageId":"637","endLine":24,"endColumn":19},{"ruleId":"634","severity":1,"message":"699","line":29,"column":3,"nodeType":"636","messageId":"637","endLine":29,"endColumn":20},{"ruleId":"634","severity":1,"message":"723","line":39,"column":9,"nodeType":"636","messageId":"637","endLine":39,"endColumn":14},{"ruleId":"642","severity":1,"message":"724","line":90,"column":6,"nodeType":"644","endLine":90,"endColumn":8,"suggestions":"725"},{"ruleId":"634","severity":1,"message":"635","line":20,"column":9,"nodeType":"636","messageId":"637","endLine":20,"endColumn":13},{"ruleId":"642","severity":1,"message":"643","line":216,"column":6,"nodeType":"644","endLine":216,"endColumn":8,"suggestions":"726"},{"ruleId":"642","severity":1,"message":"712","line":204,"column":6,"nodeType":"644","endLine":204,"endColumn":8,"suggestions":"727"},{"ruleId":"642","severity":1,"message":"654","line":144,"column":6,"nodeType":"644","endLine":144,"endColumn":8,"suggestions":"728"},{"ruleId":"642","severity":1,"message":"729","line":74,"column":6,"nodeType":"644","endLine":74,"endColumn":8,"suggestions":"730"},{"ruleId":"642","severity":1,"message":"654","line":239,"column":6,"nodeType":"644","endLine":239,"endColumn":8,"suggestions":"731"},{"ruleId":"634","severity":1,"message":"732","line":16,"column":3,"nodeType":"636","messageId":"637","endLine":16,"endColumn":16},{"ruleId":"634","severity":1,"message":"733","line":24,"column":3,"nodeType":"636","messageId":"637","endLine":24,"endColumn":43},{"ruleId":"642","severity":1,"message":"734","line":110,"column":6,"nodeType":"644","endLine":110,"endColumn":8,"suggestions":"735"},{"ruleId":"634","severity":1,"message":"736","line":79,"column":3,"nodeType":"636","messageId":"637","endLine":79,"endColumn":21},{"ruleId":"634","severity":1,"message":"737","line":87,"column":9,"nodeType":"636","messageId":"637","endLine":87,"endColumn":22},{"ruleId":"634","severity":1,"message":"691","line":19,"column":9,"nodeType":"636","messageId":"637","endLine":19,"endColumn":17},{"ruleId":"642","severity":1,"message":"643","line":27,"column":6,"nodeType":"644","endLine":27,"endColumn":8,"suggestions":"738"},{"ruleId":"634","severity":1,"message":"635","line":18,"column":9,"nodeType":"636","messageId":"637","endLine":18,"endColumn":13},{"ruleId":"642","severity":1,"message":"643","line":117,"column":6,"nodeType":"644","endLine":117,"endColumn":8,"suggestions":"739"},{"ruleId":"634","severity":1,"message":"740","line":13,"column":10,"nodeType":"636","messageId":"637","endLine":13,"endColumn":16},{"ruleId":"642","severity":1,"message":"654","line":71,"column":6,"nodeType":"644","endLine":71,"endColumn":8,"suggestions":"741"},{"ruleId":"634","severity":1,"message":"691","line":8,"column":9,"nodeType":"636","messageId":"637","endLine":8,"endColumn":17},{"ruleId":"642","severity":1,"message":"654","line":17,"column":6,"nodeType":"644","endLine":17,"endColumn":8,"suggestions":"742"},{"ruleId":"642","severity":1,"message":"669","line":31,"column":6,"nodeType":"644","endLine":31,"endColumn":8,"suggestions":"743"},{"ruleId":"642","severity":1,"message":"669","line":31,"column":6,"nodeType":"644","endLine":31,"endColumn":8,"suggestions":"744"},{"ruleId":"634","severity":1,"message":"635","line":9,"column":9,"nodeType":"636","messageId":"637","endLine":9,"endColumn":13},{"ruleId":"642","severity":1,"message":"643","line":49,"column":6,"nodeType":"644","endLine":49,"endColumn":8,"suggestions":"745"},{"ruleId":"634","severity":1,"message":"635","line":26,"column":9,"nodeType":"636","messageId":"637","endLine":26,"endColumn":13},{"ruleId":"642","severity":1,"message":"746","line":254,"column":6,"nodeType":"644","endLine":254,"endColumn":8,"suggestions":"747"},{"ruleId":"634","severity":1,"message":"748","line":9,"column":3,"nodeType":"636","messageId":"637","endLine":9,"endColumn":42},{"ruleId":"642","severity":1,"message":"654","line":131,"column":6,"nodeType":"644","endLine":131,"endColumn":8,"suggestions":"749"},{"ruleId":"642","severity":1,"message":"750","line":78,"column":6,"nodeType":"644","endLine":78,"endColumn":8,"suggestions":"751"},{"ruleId":"642","severity":1,"message":"752","line":142,"column":6,"nodeType":"644","endLine":142,"endColumn":8,"suggestions":"753"},{"ruleId":"634","severity":1,"message":"635","line":21,"column":9,"nodeType":"636","messageId":"637","endLine":21,"endColumn":13},{"ruleId":"642","severity":1,"message":"643","line":165,"column":6,"nodeType":"644","endLine":165,"endColumn":8,"suggestions":"754"},{"ruleId":"642","severity":1,"message":"654","line":200,"column":6,"nodeType":"644","endLine":200,"endColumn":8,"suggestions":"755"},{"ruleId":"642","severity":1,"message":"654","line":266,"column":6,"nodeType":"644","endLine":266,"endColumn":8,"suggestions":"756"},{"ruleId":"634","severity":1,"message":"635","line":17,"column":9,"nodeType":"636","messageId":"637","endLine":17,"endColumn":13},{"ruleId":"642","severity":1,"message":"643","line":126,"column":6,"nodeType":"644","endLine":126,"endColumn":8,"suggestions":"757"},{"ruleId":"642","severity":1,"message":"654","line":190,"column":6,"nodeType":"644","endLine":190,"endColumn":8,"suggestions":"758"},{"ruleId":"634","severity":1,"message":"635","line":19,"column":9,"nodeType":"636","messageId":"637","endLine":19,"endColumn":13},{"ruleId":"642","severity":1,"message":"643","line":312,"column":6,"nodeType":"644","endLine":312,"endColumn":8,"suggestions":"759"},{"ruleId":"634","severity":1,"message":"760","line":12,"column":3,"nodeType":"636","messageId":"637","endLine":12,"endColumn":32},{"ruleId":"634","severity":1,"message":"635","line":20,"column":9,"nodeType":"636","messageId":"637","endLine":20,"endColumn":13},{"ruleId":"634","severity":1,"message":"761","line":24,"column":9,"nodeType":"636","messageId":"637","endLine":24,"endColumn":20},{"ruleId":"638","severity":1,"message":"639","line":47,"column":45,"nodeType":"640","messageId":"641","endLine":47,"endColumn":47},{"ruleId":"638","severity":1,"message":"639","line":61,"column":45,"nodeType":"640","messageId":"641","endLine":61,"endColumn":47},{"ruleId":"642","severity":1,"message":"762","line":109,"column":6,"nodeType":"644","endLine":109,"endColumn":8,"suggestions":"763"},{"ruleId":"634","severity":1,"message":"764","line":102,"column":9,"nodeType":"636","messageId":"637","endLine":102,"endColumn":24},{"ruleId":"634","severity":1,"message":"765","line":132,"column":9,"nodeType":"636","messageId":"637","endLine":132,"endColumn":23},{"ruleId":"642","severity":1,"message":"766","line":383,"column":6,"nodeType":"644","endLine":383,"endColumn":8,"suggestions":"767"},{"ruleId":"642","severity":1,"message":"768","line":252,"column":6,"nodeType":"644","endLine":252,"endColumn":8,"suggestions":"769"},{"ruleId":"634","severity":1,"message":"635","line":21,"column":9,"nodeType":"636","messageId":"637","endLine":21,"endColumn":13},{"ruleId":"642","severity":1,"message":"770","line":113,"column":6,"nodeType":"644","endLine":113,"endColumn":8,"suggestions":"771"},{"ruleId":"642","severity":1,"message":"772","line":85,"column":6,"nodeType":"644","endLine":85,"endColumn":8,"suggestions":"773"},{"ruleId":"634","severity":1,"message":"721","line":6,"column":3,"nodeType":"636","messageId":"637","endLine":6,"endColumn":25},{"ruleId":"634","severity":1,"message":"774","line":7,"column":3,"nodeType":"636","messageId":"637","endLine":7,"endColumn":27},{"ruleId":"634","severity":1,"message":"722","line":8,"column":3,"nodeType":"636","messageId":"637","endLine":8,"endColumn":19},{"ruleId":"642","severity":1,"message":"775","line":44,"column":6,"nodeType":"644","endLine":44,"endColumn":8,"suggestions":"776"},{"ruleId":"634","severity":1,"message":"691","line":8,"column":9,"nodeType":"636","messageId":"637","endLine":8,"endColumn":17},{"ruleId":"642","severity":1,"message":"654","line":15,"column":6,"nodeType":"644","endLine":15,"endColumn":8,"suggestions":"777"},{"ruleId":"642","severity":1,"message":"669","line":31,"column":6,"nodeType":"644","endLine":31,"endColumn":8,"suggestions":"778"},{"ruleId":"634","severity":1,"message":"779","line":11,"column":10,"nodeType":"636","messageId":"637","endLine":11,"endColumn":25},{"ruleId":"634","severity":1,"message":"780","line":14,"column":10,"nodeType":"636","messageId":"637","endLine":14,"endColumn":21},{"ruleId":"634","severity":1,"message":"781","line":14,"column":23,"nodeType":"636","messageId":"637","endLine":14,"endColumn":28},{"ruleId":"634","severity":1,"message":"782","line":14,"column":30,"nodeType":"636","messageId":"637","endLine":14,"endColumn":36},{"ruleId":"642","severity":1,"message":"783","line":133,"column":6,"nodeType":"644","endLine":133,"endColumn":8,"suggestions":"784"},{"ruleId":"642","severity":1,"message":"785","line":250,"column":6,"nodeType":"644","endLine":250,"endColumn":8,"suggestions":"786"},{"ruleId":"638","severity":1,"message":"639","line":29,"column":33,"nodeType":"640","messageId":"641","endLine":29,"endColumn":35},{"ruleId":"642","severity":1,"message":"787","line":51,"column":6,"nodeType":"644","endLine":51,"endColumn":8,"suggestions":"788"},{"ruleId":"634","severity":1,"message":"691","line":12,"column":9,"nodeType":"636","messageId":"637","endLine":12,"endColumn":17},{"ruleId":"642","severity":1,"message":"654","line":19,"column":6,"nodeType":"644","endLine":19,"endColumn":8,"suggestions":"789"},{"ruleId":"634","severity":1,"message":"691","line":11,"column":9,"nodeType":"636","messageId":"637","endLine":11,"endColumn":17},{"ruleId":"642","severity":1,"message":"654","line":26,"column":6,"nodeType":"644","endLine":26,"endColumn":8,"suggestions":"790"},{"ruleId":"634","severity":1,"message":"791","line":1,"column":17,"nodeType":"636","messageId":"637","endLine":1,"endColumn":26},{"ruleId":"634","severity":1,"message":"792","line":2,"column":10,"nodeType":"636","messageId":"637","endLine":2,"endColumn":21},{"ruleId":"634","severity":1,"message":"793","line":2,"column":23,"nodeType":"636","messageId":"637","endLine":2,"endColumn":34},{"ruleId":"634","severity":1,"message":"794","line":3,"column":10,"nodeType":"636","messageId":"637","endLine":3,"endColumn":20},{"ruleId":"634","severity":1,"message":"691","line":11,"column":9,"nodeType":"636","messageId":"637","endLine":11,"endColumn":17},{"ruleId":"642","severity":1,"message":"654","line":26,"column":6,"nodeType":"644","endLine":26,"endColumn":8,"suggestions":"795"},{"ruleId":"634","severity":1,"message":"691","line":11,"column":9,"nodeType":"636","messageId":"637","endLine":11,"endColumn":17},{"ruleId":"642","severity":1,"message":"654","line":18,"column":6,"nodeType":"644","endLine":18,"endColumn":8,"suggestions":"796"},"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'studentAuthID'. Either include them or remove the dependency array.","ArrayExpression",["797"],"no-native-reassign",["798"],"no-negated-in-lhs",["799"],"React Hook useEffect has missing dependencies: 'getAllMilestones', 'history', and 'teacherAuthID'. Either include them or remove the dependency array.",["800"],["798"],["799"],"React Hook useEffect has missing dependencies: 'history' and 'teacherAuthID'. Either include them or remove the dependency array.",["801"],["798"],["799"],["798"],["799"],["798"],["799"],["798"],["799"],"React Hook useEffect has missing dependencies: 'getAllReviews', 'history', and 'teacherAuthID'. Either include them or remove the dependency array.",["802"],["803"],["798"],["799"],"React Hook useEffect has missing dependencies: 'getStorageObj', 'history', and 'teacherAuthID'. Either include them or remove the dependency array.",["804"],["798"],["799"],"React Hook useEffect has missing dependencies: 'getAllAwards', 'getAllCerts', 'history', and 'studentAuthID'. Either include them or remove the dependency array.",["805"],"React Hook useEffect has missing dependencies: 'getAllFeedPosts', 'history', and 'studentAuthID'. Either include them or remove the dependency array.",["806"],["798"],["799"],"React Hook useEffect has missing dependencies: 'getAllAssignments', 'getAllExercises', 'getAllLessons', 'getAllMilestones', 'getAllQuizzes', 'history', and 'teacherAuthID'. Either include them or remove the dependency array.",["807"],"React Hook useEffect has missing dependencies: 'getAllMessages', 'getAllTeachers', 'history', and 'studentAuthID'. Either include them or remove the dependency array.",["808"],"'faTimes' is defined but never used.","React Hook useEffect has missing dependencies: 'checkForExistingStudents', 'getAllStudents', 'history', and 'teacherAuthID'. Either include them or remove the dependency array.",["809"],["810"],["798"],["799"],"'toggleAssigneeFormAction' is defined but never used.",["811"],"'dispatch' is assigned a value but never used.",["812"],["798"],["799"],"React Hook useEffect has missing dependencies: 'getAllServices', 'history', 'invoice', and 'teacherAuthID'. Either include them or remove the dependency array.",["813"],["798"],["799"],"'groups_Collection' is defined but never used.","'groupState' is assigned a value but never used.",["814"],["815"],["816"],["817"],["798"],["799"],"'isLoggedInState' is assigned a value but never used.","'accountTypeState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'checkJoined', 'checkRequested', 'history', and 'teacherAuthID'. Either include them or remove the dependency array.",["818"],"'firestore' is defined but never used.","React Hook useEffect has missing dependencies: 'getAllStudents', 'history', and 'teacherAuthID'. Either include them or remove the dependency array.",["819"],["820"],["821"],"'GetToday' is defined but never used.",["822"],"React Hook useEffect has missing dependencies: 'getAllStudentAbout', 'getAllStudentExp', 'history', and 'studentAuthID'. Either include them or remove the dependency array.",["823"],"'storeTeacherForumsGeneralInfoAction' is defined but never used.","'storeAccountTypeAction' is defined but never used.","'isLoggedInAction' is defined but never used.","'state' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllSettingData', 'getAllStatisticData', 'getAllUserData', 'history', and 'teacherAuthID'. Either include them or remove the dependency array.",["824"],["825"],["826"],["827"],"React Hook useEffect has missing dependencies: 'getAllAwards', 'history', and 'teacherAuthID'. Either include them or remove the dependency array.",["828"],["829"],"'faTimesCircle' is defined but never used.","'storeTeacherAddStudentSearchResultAction' is defined but never used.","React Hook useEffect has missing dependencies: 'getAllNotifications', 'history', and 'teacherAuthID'. Either include them or remove the dependency array.",["830"],"'dashFullMenuAction' is defined but never used.","'dashMenuState' is assigned a value but never used.",["831"],["832"],"'create' is defined but never used.",["833"],["834"],["835"],["836"],["837"],"React Hook useEffect has missing dependencies: 'getAllCourseExercises', 'getAllCourseLessons', 'getAllCourseQuizzes', 'getStudentProgress', 'history', and 'studentAuthID'. Either include them or remove the dependency array.",["838"],"'storeTeacherMilestonesGeneralInfoAction' is defined but never used.",["839"],"React Hook useEffect has missing dependencies: 'getAllAboutData', 'getAllExperienceData', 'history', and 'teacherAuthID'. Either include them or remove the dependency array.",["840"],"React Hook useEffect has missing dependencies: 'getAllPosts', 'history', and 'teacherAuthID'. Either include them or remove the dependency array.",["841"],["842"],["843"],["844"],["845"],["846"],["847"],"'storeStudentAssignmentsAction' is defined but never used.","'assignments' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllAssignments', 'history', and 'studentAuthID'. Either include them or remove the dependency array.",["848"],"'turnMonthToLong' is assigned a value but never used.","'turnNumToShort' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllEvents', 'getEventDetails', 'history', and 'teacherAuthID'. Either include them or remove the dependency array.",["849"],"React Hook useEffect has missing dependencies: 'getAllNotifications', 'history', and 'studentAuthID'. Either include them or remove the dependency array.",["850"],"React Hook useEffect has missing dependencies: 'getAllCourses', 'getStudentTeacherConnection', 'history', and 'studentAuthID'. Either include them or remove the dependency array.",["851"],"React Hook useEffect has missing dependencies: 'getAllAssignments', 'history', and 'teacherAuthID'. Either include them or remove the dependency array.",["852"],"'storeStudentAuthIDAction' is defined but never used.","React Hook useEffect has missing dependencies: 'getStudentUserData', 'history', and 'studentAuthID'. Either include them or remove the dependency array.",["853"],["854"],["855"],"'FontAwesomeIcon' is defined but never used.","'faEllipsisV' is defined but never used.","'faPen' is defined but never used.","'faPlus' is defined but never used.","React Hook useEffect has missing dependencies: 'getProfileFeedData', 'history', and 'teacherAuthID'. Either include them or remove the dependency array.",["856"],"React Hook useEffect has missing dependencies: 'getAllMessages', 'getAllStudentGeneralInfo', 'history', and 'teacherAuthID'. Either include them or remove the dependency array.",["857"],"React Hook useEffect has missing dependencies: 'getAllMembers', 'history', and 'teacherAuthID'. Either include them or remove the dependency array.",["858"],["859"],["860"],"'useEffect' is defined but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'useHistory' is defined but never used.",["861"],["862"],{"desc":"863","fix":"864"},"no-global-assign","no-unsafe-negation",{"desc":"865","fix":"866"},{"desc":"867","fix":"868"},{"desc":"869","fix":"870"},{"desc":"867","fix":"871"},{"desc":"872","fix":"873"},{"desc":"874","fix":"875"},{"desc":"876","fix":"877"},{"desc":"878","fix":"879"},{"desc":"880","fix":"881"},{"desc":"882","fix":"883"},{"desc":"867","fix":"884"},{"desc":"867","fix":"885"},{"desc":"867","fix":"886"},{"desc":"887","fix":"888"},{"desc":"867","fix":"889"},{"desc":"867","fix":"890"},{"desc":"872","fix":"891"},{"desc":"863","fix":"892"},{"desc":"893","fix":"894"},{"desc":"895","fix":"896"},{"desc":"867","fix":"897"},{"desc":"867","fix":"898"},{"desc":"867","fix":"899"},{"desc":"900","fix":"901"},{"desc":"902","fix":"903"},{"desc":"863","fix":"904"},{"desc":"895","fix":"905"},{"desc":"867","fix":"906"},{"desc":"907","fix":"908"},{"desc":"867","fix":"909"},{"desc":"910","fix":"911"},{"desc":"863","fix":"912"},{"desc":"863","fix":"913"},{"desc":"867","fix":"914"},{"desc":"867","fix":"915"},{"desc":"872","fix":"916"},{"desc":"872","fix":"917"},{"desc":"863","fix":"918"},{"desc":"919","fix":"920"},{"desc":"867","fix":"921"},{"desc":"922","fix":"923"},{"desc":"924","fix":"925"},{"desc":"863","fix":"926"},{"desc":"867","fix":"927"},{"desc":"867","fix":"928"},{"desc":"863","fix":"929"},{"desc":"867","fix":"930"},{"desc":"863","fix":"931"},{"desc":"932","fix":"933"},{"desc":"934","fix":"935"},{"desc":"936","fix":"937"},{"desc":"938","fix":"939"},{"desc":"940","fix":"941"},{"desc":"942","fix":"943"},{"desc":"867","fix":"944"},{"desc":"872","fix":"945"},{"desc":"946","fix":"947"},{"desc":"948","fix":"949"},{"desc":"950","fix":"951"},{"desc":"867","fix":"952"},{"desc":"867","fix":"953"},{"desc":"867","fix":"954"},{"desc":"867","fix":"955"},"Update the dependencies array to be: [history, studentAuthID]",{"range":"956","text":"957"},"Update the dependencies array to be: [getAllMilestones, history, teacherAuthID]",{"range":"958","text":"959"},"Update the dependencies array to be: [history, teacherAuthID]",{"range":"960","text":"961"},"Update the dependencies array to be: [getAllReviews, history, teacherAuthID]",{"range":"962","text":"963"},{"range":"964","text":"961"},"Update the dependencies array to be: [getStorageObj, history, teacherAuthID]",{"range":"965","text":"966"},"Update the dependencies array to be: [getAllAwards, getAllCerts, history, studentAuthID]",{"range":"967","text":"968"},"Update the dependencies array to be: [getAllFeedPosts, history, studentAuthID]",{"range":"969","text":"970"},"Update the dependencies array to be: [getAllAssignments, getAllExercises, getAllLessons, getAllMilestones, getAllQuizzes, history, teacherAuthID]",{"range":"971","text":"972"},"Update the dependencies array to be: [getAllMessages, getAllTeachers, history, studentAuthID]",{"range":"973","text":"974"},"Update the dependencies array to be: [checkForExistingStudents, getAllStudents, history, teacherAuthID]",{"range":"975","text":"976"},{"range":"977","text":"961"},{"range":"978","text":"961"},{"range":"979","text":"961"},"Update the dependencies array to be: [getAllServices, history, invoice, teacherAuthID]",{"range":"980","text":"981"},{"range":"982","text":"961"},{"range":"983","text":"961"},{"range":"984","text":"966"},{"range":"985","text":"957"},"Update the dependencies array to be: [checkJoined, checkRequested, history, teacherAuthID]",{"range":"986","text":"987"},"Update the dependencies array to be: [getAllStudents, history, teacherAuthID]",{"range":"988","text":"989"},{"range":"990","text":"961"},{"range":"991","text":"961"},{"range":"992","text":"961"},"Update the dependencies array to be: [getAllStudentAbout, getAllStudentExp, history, studentAuthID]",{"range":"993","text":"994"},"Update the dependencies array to be: [getAllSettingData, getAllStatisticData, getAllUserData, history, teacherAuthID]",{"range":"995","text":"996"},{"range":"997","text":"957"},{"range":"998","text":"989"},{"range":"999","text":"961"},"Update the dependencies array to be: [getAllAwards, history, teacherAuthID]",{"range":"1000","text":"1001"},{"range":"1002","text":"961"},"Update the dependencies array to be: [getAllNotifications, history, teacherAuthID]",{"range":"1003","text":"1004"},{"range":"1005","text":"957"},{"range":"1006","text":"957"},{"range":"1007","text":"961"},{"range":"1008","text":"961"},{"range":"1009","text":"966"},{"range":"1010","text":"966"},{"range":"1011","text":"957"},"Update the dependencies array to be: [getAllCourseExercises, getAllCourseLessons, getAllCourseQuizzes, getStudentProgress, history, studentAuthID]",{"range":"1012","text":"1013"},{"range":"1014","text":"961"},"Update the dependencies array to be: [getAllAboutData, getAllExperienceData, history, teacherAuthID]",{"range":"1015","text":"1016"},"Update the dependencies array to be: [getAllPosts, history, teacherAuthID]",{"range":"1017","text":"1018"},{"range":"1019","text":"957"},{"range":"1020","text":"961"},{"range":"1021","text":"961"},{"range":"1022","text":"957"},{"range":"1023","text":"961"},{"range":"1024","text":"957"},"Update the dependencies array to be: [getAllAssignments, history, studentAuthID]",{"range":"1025","text":"1026"},"Update the dependencies array to be: [getAllEvents, getEventDetails, history, teacherAuthID]",{"range":"1027","text":"1028"},"Update the dependencies array to be: [getAllNotifications, history, studentAuthID]",{"range":"1029","text":"1030"},"Update the dependencies array to be: [getAllCourses, getStudentTeacherConnection, history, studentAuthID]",{"range":"1031","text":"1032"},"Update the dependencies array to be: [getAllAssignments, history, teacherAuthID]",{"range":"1033","text":"1034"},"Update the dependencies array to be: [getStudentUserData, history, studentAuthID]",{"range":"1035","text":"1036"},{"range":"1037","text":"961"},{"range":"1038","text":"966"},"Update the dependencies array to be: [getProfileFeedData, history, teacherAuthID]",{"range":"1039","text":"1040"},"Update the dependencies array to be: [getAllMessages, getAllStudentGeneralInfo, history, teacherAuthID]",{"range":"1041","text":"1042"},"Update the dependencies array to be: [getAllMembers, history, teacherAuthID]",{"range":"1043","text":"1044"},{"range":"1045","text":"961"},{"range":"1046","text":"961"},{"range":"1047","text":"961"},{"range":"1048","text":"961"},[9562,9564],"[history, studentAuthID]",[4334,4336],"[getAllMilestones, history, teacherAuthID]",[1032,1034],"[history, teacherAuthID]",[2634,2636],"[getAllReviews, history, teacherAuthID]",[2561,2563],[868,870],"[getStorageObj, history, teacherAuthID]",[2430,2432],"[getAllAwards, getAllCerts, history, studentAuthID]",[4122,4124],"[getAllFeedPosts, history, studentAuthID]",[13128,13130],"[getAllAssignments, getAllExercises, getAllLessons, getAllMilestones, getAllQuizzes, history, teacherAuthID]",[6119,6121],"[getAllMessages, getAllTeachers, history, studentAuthID]",[7978,7980],"[checkForExistingStudents, getAllStudents, history, teacherAuthID]",[2246,2248],[4580,4582],[597,599],[1424,1426],"[getAllServices, history, invoice, teacherAuthID]",[2358,2360],[1144,1146],[868,870],[10642,10644],[3631,3633],"[checkJoined, checkRequested, history, teacherAuthID]",[2991,2993],"[getAllStudents, history, teacherAuthID]",[624,626],[2713,2715],[1489,1491],[2228,2230],"[getAllStudentAbout, getAllStudentExp, history, studentAuthID]",[2697,2699],"[getAllSettingData, getAllStatisticData, getAllUserData, history, teacherAuthID]",[6416,6418],[5319,5321],[4043,4045],[2206,2208],"[getAllAwards, history, teacherAuthID]",[6782,6784],[3251,3253],"[getAllNotifications, history, teacherAuthID]",[1053,1055],[3274,3276],[2103,2105],[516,518],[872,874],[868,870],[1405,1407],[7993,7995],"[getAllCourseExercises, getAllCourseLessons, getAllCourseQuizzes, getStudentProgress, history, studentAuthID]",[3226,3228],[2394,2396],"[getAllAboutData, getAllExperienceData, history, teacherAuthID]",[3652,3654],"[getAllPosts, history, teacherAuthID]",[4283,4285],[5462,5464],[7542,7544],[3466,3468],[6091,6093],[8306,8308],[2987,2989],"[getAllAssignments, history, studentAuthID]",[9401,9403],"[getAllEvents, getEventDetails, history, teacherAuthID]",[7424,7426],"[getAllNotifications, history, studentAuthID]",[3219,3221],"[getAllCourses, getStudentTeacherConnection, history, studentAuthID]",[2421,2423],"[getAllAssignments, history, teacherAuthID]",[1176,1178],"[getStudentUserData, history, studentAuthID]",[445,447],[868,870],[4057,4059],"[getProfileFeedData, history, teacherAuthID]",[6839,6841],"[getAllMessages, getAllStudentGeneralInfo, history, teacherAuthID]",[1437,1439],"[getAllMembers, history, teacherAuthID]",[548,550],[735,737],[731,733],[526,528]]