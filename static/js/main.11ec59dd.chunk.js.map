{"version":3,"sources":["components/Home/HomeCoursesCard.js","components/Home/HomeCoursesDeck.js","components/Footer.js","components/Home.js","redux/actions.js","components/Courses/CoursesCard.js","components/Courses/CoursesDeck.js","components/Courses.js","components/Plans/PlanPanel.js","components/Plans.js","components/Contact.js","utils/firebase.js","utils/tools.js","components/Login.js","components/Teachers/Dash/TopBar.js","components/Teachers/Dash/AnnouncementBox.js","components/Teachers/Dash/SimpleStats.js","components/Teachers/Dash/RecentActivity.js","components/Teachers/Dash/RecentInvoices.js","components/Teachers/Dash/Earnings.js","components/Teachers/Dash/Achievement.js","components/Teachers/Dash/UpcomingEvents.js","components/Teachers/Dash/DashFooter.js","components/TeacherDash.js","components/Teachers/Statistics/StorageStats.js","components/Teachers/Statistics/StudentStats.js","components/Teachers/Statistics/GroupStats.js","components/Teachers/Statistics/CourseStats.js","components/Teachers/Statistics/ForumStats.js","components/Teachers/Statistics/EventStats.js","components/Teachers/Statistics/StatisticsMain.js","components/Teachers/Profile/ProfileFeedViewBlock.js","components/Teachers/Profile/ProfileFeedView.js","components/GetToday.js","components/Teachers/Profile/ProfileFeedEdit.js","components/Teachers/Profile/ProfileFeedCreate.js","components/Teachers/Profile/ProfileAboutView.js","components/Teachers/Profile/ProfileAboutEdit.js","components/Teachers/Profile/ProfileAwardsView.js","components/InputDateFormatter.js","components/RandomString.js","components/FirebaseDate.js","components/Teachers/Profile/ProfileAwardsEdit.js","components/Teachers/Profile/ProfileGallery.js","components/Teachers/Profile/ProfileReviewsView.js","components/Teachers/Profile/ProfileMain.js","components/Teachers/Students/StudentsMain.js","components/Teachers/Groups/GroupsMain.js","components/Teachers/Groups/GroupFeedView.js","components/Teachers/Groups/GroupFeedEdit.js","components/Teachers/Groups/GroupAboutView.js","components/Teachers/Groups/GroupAboutEdit.js","components/Teachers/Groups/GroupMembersView.js","components/Teachers/Groups/GroupsPage.js","components/Teachers/Courses/CoursesMain.js","components/Teachers/Courses/CourseFullWizard.js","components/Teachers/Courses/CourseEditWizard.js","components/Teachers/Assignments/AssignmentBlock.js","components/Teachers/Assignments/AssignmentsMain.js","components/Teachers/Milestones/MilestoneBlock.js","components/Teachers/Milestones/MilestonesMain.js","components/Teachers/Forums/ForumBlocks.js","components/Teachers/Forums/ForumSinglePostBlock.js","components/Teachers/Forums/ForumSingleBlock.js","components/Teachers/Forums/ForumsMain.js","components/Teachers/Articles/ArticleBlock.js","components/Teachers/Articles/ArticlesMain.js","components/Teachers/Messages/MessageThumbBlock.js","components/Teachers/Messages/MessagesThread.js","components/Teachers/Messages/MessagesMain.js","components/Teachers/FileManager/FileManagerMain.js","components/Teachers/Events/EventBlock.js","components/Teachers/Events/EventsMain.js","components/Teachers/Invoices/InvoiceBlock.js","components/Teachers/Invoices/InvoicesMain.js","components/Teachers/Invoices/InvoiceView.js","components/Teachers/Settings/SettingsMain.js","components/Teachers/Tutorials/TutorialsMain.js","components/Teachers/Support/SupportMain.js","components/Students/TopBar.js","components/Students/Footer.js","components/Students/StudentDash.js","components/Students/Profile/ProfileFeedView.js","components/Students/Profile/ProfileFeedEdit.js","components/Students/Profile/ProfileAboutView.js","components/Students/Profile/ProfileAboutEdit.js","components/Students/Profile/ProfileAwardsView.js","components/Students/Profile/ProfileAwardsEdit.js","components/Students/Profile/StudentProfileMain.js","components/Students/Courses/StudentCoursesMain.js","components/Students/Courses/StudentCoursePreview.js","components/Students/Courses/StudentCourseLesson.js","components/Students/Courses/StudentCourseExercise.js","components/Students/Courses/StudentCourseQuiz.js","App.js","redux/reducers.js","index.js"],"names":["HomeCoursesCard","course","this","props","name","src","img","alt","desc","price","Component","HomeCoursesDeck","key","map","Footer","Home","className","loginRegisterToggleAction","payload","type","storeAccountTypeAction","storeTeacherAuthIDAction","storeStudentAuthIDAction","statisticsObjectAction","storeProfileFeedPostDataAction","storeProfileAboutDataAction","storeProfileExperienceDataAction","storeAwardListAction","storeCertListAction","storeTeacherStudentGeneralInfoAction","storeNewStudentAction","storeTeacherGroupGeneralInfoAction","storeSingleGroupAction","storeGroupFeedPostsAction","checkJoinedGroupStatusAction","checkRequestedGroupStatusAction","storeTeacherCourseGeneralInfoAction","toggleCourseFullWizardComponentAction","storeShortOptionsAction","toggleExerciseTypeOptionAction","storeQuizComponentsAction","storeSingleCourseLessonsAction","storeSingleCourseExersAction","storeSingleCourseQuizzesAction","toggleCourseTypeEditAction","storeLessonCountAction","storeCurrentMonthAction","storeStudentProfileFeedPostsAction","storeStudentAboutAction","storeStudentExpAction","storeStudentAwardsAction","storeStudentCertsAction","storeCurrentCourseComponentAction","storeStudentLessonQuestionResultAction","storeStudentNextExerciseAction","storeStudentNextQuizAction","CoursesCard","CoursesDeck","courses","Courses","courseState","useSelector","state","courseSearchReducer","dispatch","useDispatch","id","placeholder","onClick","document","querySelector","value","length","PlanPanel","list","l","Plans","planState","trueFalseReducer","Contact","rows","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","users_Collection","FieldValue","serverTimestamp","collection","teachers_Collection","students_Collection","groups_Collection","forums_Collection","articles_Collection","courses_Collection","studentReqQueue_Collection","groupReqQueue_Collection","firebaseLooper","snapshot","data","forEach","doc","push","Login","loginSwitchState","loginRegisterSwitchReducer","isLoggedInReducer","storeAccountTypeReducer","history","useHistory","handleRouteClick","username","password","get","then","user","Username","Password","classList","add","AccountType","remove","catch","err","console","log","TopBar","AnnouncementBox","SimpleStats","RecentActivity","RecentInvoices","Earnings","Achievement","UpcomingEvents","DashFooter","TeacherDash","teacherAuthID","storeTeacherAuthIDReducer","storeTeacherStudentGeneralInfoReducer","Date","now","useEffect","where","idArray","d","forumData","groupID","orderBy","style","float","StorageStats","storageState","storeTeacherStatisticsGeneralInfoReducer","storageObj","statisticsObjectReducer","obj","Usage","StudentStats","Num","GroupStats","CourseStats","ForumStats","EventStats","StatisticsMain","url","useRouteMatch","to","path","ProfileFeedViewBlock","showComments","displayComments","bind","comm","i","commDate","Text","Commenter","post","date","toDate","toString","substr","setState","commentData","ProfileFeedView","feedDataState","storeProfileFeedPostDataReducer","storeSinglePost","event","postID","target","getAttribute","feedPostArray","GetToday","Timestamp","fromDate","ProfileFeedEdit","singlePostState","storeProfileFeedSinglePostDataReducer","allPostsState","defaultValue","postText","postObj","set","Likes","delete","newArray","filter","ProfileFeedCreate","rand1","Math","random","substring","rand2","commentID","allPosts","ProfileAboutView","about","storeProfileAboutDataReducer","exp","storeProfileExperienceDataReducer","window","scrollTo","About","ex","Institution","Desc","Start","End","Email","Location","Instruments","ins","Joined","ProfileAboutEdit","toggleExpState","toggleNewExperienceFormReducer","toggleInsState","toggleNewInstrumentFormReducer","removeExperience","exID","filtered","removeInstrument","instrument","newList","newObj","update","arrayRemove","start","getFullYear","getMonth","getDate","end","expBlockID","institution","started","ended","startedSplit","split","endedSplit","startedDate","endedDate","allExp","newIns","arrayUnion","newInstruments","aboutText","newExperienceArray","expCount","tbInstitution","tbDesc","daStarted","daEnded","email","location","insArray","insCount","tbInstrument","tempAbout","tempExp","ProfileAwardsView","awards","storeAwardListReducer","certs","storeCertListReducer","awards_Collection","cert_Collection","awardData","certData","getAllAwards","award","Name","cert","InputDateFormatter","firebaseDate","RandomString","FirebaseDate","dateInput","dateSplit","ProfileAwardsEdit","toggleAwardForm","toggleNewAwardFormReducer","toggleCertForm","toggleNewCertFormReducer","removeAward","awardID","filteredAwards","a","removeCert","certID","filteredCerts","c","awardName","awardLocation","awardDate","awardDesc","allAwards","certName","certLocation","certDate","certDesc","allCerts","awardCount","certCount","tempObj","ProfileGallery","ProfileReviewsView","reviews","storeReviewListReducer","newReviewArray","fullName","Reviewer","userData","FirstName","LastName","FullName","getAllReviews","rev","Rating","Review","ProfileMain","userDataState","userDataReducer","StudentsMain","toggleStudentOverview","toggleStudentOverviewReducer","toggleSearchUsername","toggleSearchUsernameReducer","toggleSendRequestState","toggleSendRequestButtonReducer","students","student","storeSingleStudentInfoReducer","searchResult","storeNewStudentReducer","lessons","storeTeacherStudentLessonsReducer","exercises","storeTeacherStudentExercisesReducer","quizzes","storeTeacherStudentQuizzesReducer","exams","storeTeacherStudentExamsReducer","getAllStudentGeneralInfo","studentData","studCount","size","studentArray","count","stud","snapshot2","studData","getSingleStudentInfo","studentID","getStudentLessons","getStudentExercises","getStudentQuizzes","getStudentExams","OveralGrade","Subscriptions","sub","lesson","replaceAll","Completed","exer","quiz","exam","onChange","searchInput","studID","toLowerCase","includes","queueData","found","que","StudentID","doubleFound","s","studs","valid","fullname","reqID","TeacherID","isAccepted","OverallGrade","GroupsMain","toggleNewGroupForm","toggleNewGroupFormReducer","groups","storeTeacherGroupGeneralInfoReducer","removeGroup","group","navigateGroupPage","gr","createGroup","groupName","groupDesc","groupAccess","raPublic","raPrivate","checked","memberID","Host","Access","Role","newGroupList","groupData","for","GroupFeedView","storeSingleGroupReducer","posts","storeGroupFeedPostsReducer","removePost","navigateEdit","Poster","GroupFeedEdit","storeSingleGroupFeedPostReducer","editText","newPosts","p","GroupAboutView","GroupAboutEdit","groupObj","GroupMembersView","members","storeGroupMembersListReducer","memberData","mem","GroupsPage","joined","checkJoinedGroupStatusReducer","requested","checkRequestedGroupStatusReducer","q","MemberID","alert","enabled","HostID","CoursesMain","storeTeacherCourseGeneralInfoReducer","removeCourse","courseID","comp","editCourse","lessonData","exerData","quizData","CourseFullWizard","wizardState","toggleCourseFullWizardComponentReducer","options","storeShortOptionsReducer","exerciseTypeState","toggleExerciseTypeOptionReducer","courseIDState","storeCourseIDFullWizardReducer","lessonNameState","storeLessonNameFullWizardReducer","quizComponents","storeQuizComponentsReducer","removeOption","optionText","opt","addOption","allOptions","optionCount","chooseExercise","handleQuizComponents","Type","border","padding","margin","backgroundColor","Options","TempID","removeQuizComponent","compID","handleExerciseWizard","saveLesson","lessonName","lessonText","shortQui","shortAns","opts","lessonID","courseName","courseDesc","Created","Creator","lessonCount","Video","Question","Answer","Order","storeLessonNameFullWizardAction","saveExercise","text","exerciseName","exerID","exerCount","saveQuiz","newComponents","quizName","qui","newOpt","ans","shortText","longText","longAns","statement","answer","raTrue","raFalse","Statement","quizID","quizCount","rand3","rand4","saveAndExit","saveAndContinue","saveAndExam","position","right","allObjs","CourseEditWizard","toggleCourseTypeState","toggleCourseTypeEditReducer","toggleNewCompFormState","toggleNewLessonFormReducer","toggleEditCompFormState","toggleEditLessonFormReducer","storeSingleCourseReducer","storeSingleCourseLessonsReducer","storeSingleCourseExersReducer","storeSingleCourseQuizzesReducer","editLesson","storeLessonCountReducer","storeSingleCourseLessonReducer","editExer","storeSingleCourseExerReducer","getCompCount","handleEditExerciseWizard","handleNewComp","saveComp","width","marginRight","handleEditComp","saveEditComp","onCompEditClick","tempLesson","less","tempExer","storeSingleCourseExerAction","allLessons","allExers","lessonQui","lessonOpts","lessonAns","newLesson","sort","b","newExer","dragEnd","filteredLessons","querySelectorAll","lessID","filteredExers","Sortable","onDragEnd","icon","faBars","AssignmentBlock","showAssigned","due","assignedTo","AssignmentsMain","assignmentState","storeTeacherAssignmentsGeneralInfoReducer","ass","Due","AssignedTo","MilestoneBlock","MilestonesMain","milestoneState","storeTeacherMilestonesGeneralInfoReducer","assignedArray","m","index","self","indexOf","getAllAssigned","assigned","ForumBlocks","topic","ForumSinglePostBlock","poster","comments","com","ForumSingleBlock","ForumsMain","forumState","storeTeacherForumsGeneralInfoReducer","singleForumState","storeSingleForumReducer","getSingleForum","singleForum","f","postData","pd","Topic","DateCreated","ArticleBlock","mainTopic","ArticlesMain","articleState","storeTeacherArticlesGeneralInfoReducer","art","MainTopic","MessageThumbBlock","firstMessage","recipient","firstDate","MessagesThread","messInOrder","messages","reverse","mess","Sender","color","MessagesMain","messageState","storeTeacherMessagesGeneralInfoReducer","messagesData","storeTeacherMessagesReducer","threadData","storeSingleThreadReducer","OnThreadClick","threadID","thread","messageData","getThumbnailMessageData","RecipientID","FileManagerMain","EventBlock","showFullEvent","title","invited","allday","fullDate","borderLeft","inv","borderRadius","fontSize","EventsMain","eventState","storeTeacherEventsGeneralInfoReducer","currentMonthState","storeCurrentMonthReducer","studentState","today","currentMonthShort","currentYear","allMonths","monthShort","month","num","monthType","ev","year","Color","Title","Invited","isAllDay","showEvents","InvoiceBlock","no","status","balance","created","InvoicesMain","invoiceState","storeTeacherInvoicesGeneralInfoReducer","viewSingleInvoice","invoiceNo","No","Status","Balance","InvoiceView","invoice","storeSingleInvoiceReducer","services","storeInvoiceServicesReducer","invoiceID","getAllServices","Address","City","State","Zip","serv","Rate","Hours","FullPrice","Message","SettingsMain","TutorialsMain","SupportMain","storeStudentUserDataReducer","studentAuthID","storeStudentAuthIDReducer","StudentDash","AuthID","storeStudentProfileFeedPostsReducer","newPost","Commentor","onPostEdit","storeStudentProfileFeedPostReducer","storeStudentAboutReducer","exps","storeStudentExpReducer","handleInstruments","toggleNewExpForm","toggleNewExpFormReducer","toggleNewInstrumentForm","saveExp","expID","saveInstrument","allInstruments","aboutObj","removeExp","inst","instCount","allInst","expIns","expDesc","expStart","expEnd","ProfileAwardView","storeStudentAwardsReducer","storeStudentCertsReducer","awd","toggleNewAwardForm","toggleStudentNewAwardFormReducer","toggleNewCertForm","toggleStudentNewCertFormReducer","saveNewAward","awardInstitution","saveNewCert","certInstitution","awardArray","certArray","awardInstutition","awardObj","certObj","StudentProfileMain","StudentCoursesMain","studentTeacherConn","flagStudentTeacherConnectionReducer","studentTeacherList","storeStudentTeacherListReducer","storeStudentCoursesReducer","getStudentTeacherConnection","teachers","teach","storeStudentTeacherListAction","getAllCourses","navCoursePreview","StudentCoursePreview","toggleLessonList","toggleStudentCourseLessonListReducer","toggleExerList","toggleStudentCourseExerListReducer","toggleQuizList","toggleStudentCourseQuizListReducer","storeStudentSingleCourseReducer","storeStudentCourseLessonListReducer","currComp","storeCurrentCourseComponentReducer","exers","storeStudentCourseExerListReducer","storeStudentCourseQuizListReducer","navCourseLesson","navCourseExercise","navCourseQuiz","lessonsList","exerList","quizList","progressData","progress","prog","CourseName","lastComp","CompType","compData","Components","height","textAlign","clear","StudentCourseLesson","currLesson","result","storeStudentLessonQuestionResultReducer","handleLessonQuestion","calcQuestionResult","handleResult","navExercise","progID","CompName","StudentCourseExercise","currExer","storeStudentNextExerciseReducer","navQuiz","textRes","exerResID","Course","Response","quizObj","handleExercise","StudentCourseQuiz","toggleQuizResults","toggleStudentQuizResultsReducer","storeStudentNextQuizReducer","results","storeStudentQuizResultsReducer","calcResults","compLength","radioChecked","radioValue","thing","Given","Result","shortRes","longRes","trueRes","falseRes","resultID","navLesson","nextOrder","re","App","menuState","menuReducer","dashMenuTextState","dashFullMenuSwitchReducer","dashMenuTextSwitchReducer","accountTypeState","handleDashMenuText","allTextObj","allDashObj","allNavHeadings","dash","head","exact","keywords","allReducers","combineReducers","action","copy","courseKey","storeTeacherSettingsGeneralInfoReducer","storeTeacherProfileGeneralInfoReducer","storeExamQuizComponentsReducer","toggleStudentNewInstrumentFormReducer","storeStudentNextLessonReducer","store","createStore","ReactDOM","render","getElementById"],"mappings":"gQAEqBA,E,uKACT,IACAC,EAAWC,KAAKC,MAAhBF,OACR,OACE,gCACE,6BAAKA,EAAOG,OACZ,qBAAKC,IAAKJ,EAAOK,IAAKC,IAAKN,EAAOM,MAClC,4BAAIN,EAAOO,OACX,6BAAKP,EAAOQ,QACZ,gCACE,gDACA,uD,GAXmCC,aCExBC,E,uKAqBjB,OACE,8BApBc,CACd,CACEC,IAAK,EACLN,IAAK,GACLC,IAAK,GACLH,KAAM,eACNI,KAAM,qFACNC,MAAO,UAET,CACEG,IAAK,EACLN,IAAK,GACLC,IAAK,GACLH,KAAM,yCACNI,KAAM,+GACNC,MAAO,WAMEI,KAAI,SAACZ,GACZ,OAAO,cAAC,EAAD,CAAiBA,OAAQA,a,GAxBGS,aCFxBI,E,uKAEb,OACI,gCACI,uDACA,qDACA,6CACA,uBACA,kFACA,8EACA,4F,GAVoBJ,aCMfK,G,mLAGjB,OACE,sBAAKC,UAAU,eAAf,UAEE,gCACE,qBAAKX,IAAI,GAAGE,IAAI,KAChB,+CAIF,gCAEE,gCACE,wCACA,sHAKF,8BACE,qBAAKF,IAAI,GAAGE,IAAI,OAElB,8BACE,0DAEF,gCACE,0CACA,yHAIA,+BACE,oHAIA,oGAIA,4FAGA,yIAMJ,gCACE,0CACA,6JAIA,+BACE,qMAKA,yIAIA,6HAMJ,8BACE,mDAIF,gCACE,2DACA,6JAIA,8BACI,cAAC,EAAD,SAKJ,gCACI,0EACA,uBACA,2CACA,qBAAKF,IAAI,GAAGE,IAAI,KAChB,mDACA,uBACA,uCACA,qBAAKF,IAAI,GAAGE,IAAI,KAChB,+CACA,uBACA,uCACA,qBAAKF,IAAI,GAAGE,IAAI,KAChB,kDAIJ,wBAKF,gCACI,uBACA,cAAC,EAAD,iB,GAlHoBG,c,OCWrBO,EAA4B,SAACC,GACxC,MAAO,CACLC,KAAM,cACND,QAASA,IAsBAE,EAAyB,SAACF,GACrC,MAAO,CACLC,KAAM,yBACND,QAASA,IAIAG,EAA2B,SAACH,GACvC,MAAO,CACLC,KAAM,cACND,QAASA,IAIAI,EAA2B,SAACJ,GACvC,MAAO,CACLC,KAAM,2BACND,QAASA,IAmFAK,EAAyB,SAACL,GACrC,MAAO,CACLC,KAAM,UACND,QAASA,IAKAM,EAAiC,SAACN,GAC7C,MAAO,CACLC,KAAM,iCACND,QAASA,IAWAO,EAA8B,SAACP,GAC1C,MAAO,CACLC,KAAM,8BACND,QAASA,IAIAQ,EAAmC,SAACR,GAC/C,MAAO,CACLC,KAAM,mCACND,QAASA,IAgBAS,EAAuB,SAACT,GACnC,MAAO,CACLC,KAAM,uBACND,QAASA,IAIAU,EAAsB,SAACV,GAClC,MAAO,CACLC,KAAM,sBACND,QAASA,IAwBAW,EAAuC,SAACX,GACnD,MAAO,CACLC,KAAM,iBACND,QAASA,IAsBAY,EAAwB,SAACZ,GACpC,MAAO,CACLC,KAAM,wBACND,QAASA,IAyCAa,EAAqC,SAACb,GACjD,MAAO,CACLC,KAAM,eACND,QAASA,IAUAc,EAAyB,SAACd,GACrC,MAAO,CACLC,KAAM,yBACND,QAASA,IAIAe,EAA4B,SAACf,GACxC,MAAO,CACLC,KAAM,4BACND,QAASA,IAkBAgB,EAA+B,SAAChB,GAC3C,MAAO,CACLC,KAAM,+BACND,QAASA,IAIAiB,EAAkC,SAACjB,GAC9C,MAAO,CACLC,KAAM,kCACND,QAASA,IAKAkB,EAAsC,SAAClB,GAClD,MAAO,CACLC,KAAM,gBACND,QAASA,IAIAmB,EAAwC,SAACnB,GACpD,MAAO,CACLC,KAAM,wCACND,QAASA,IAIAoB,EAA0B,SAACpB,GACtC,MAAO,CACLC,KAAM,0BACND,QAASA,IAIAqB,EAAiC,SAACrB,GAC7C,MAAO,CACLC,KAAM,iCACND,QAASA,IAkBAsB,EAA4B,SAACtB,GACxC,MAAO,CACLC,KAAM,4BACND,QAASA,IAkBAuB,EAAiC,SAACvB,GAC7C,MAAO,CACLC,KAAM,iCACND,QAASA,IAIAwB,EAA+B,SAACxB,GAC3C,MAAO,CACLC,KAAM,+BACND,QAASA,IAIAyB,EAAiC,SAACzB,GAC7C,MAAO,CACLC,KAAM,iCACND,QAASA,IAIA0B,EAA6B,SAAC1B,GACzC,MAAO,CACLC,KAAM,6BACND,QAASA,IAgBA2B,EAAyB,SAAC3B,GAC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","file":"static/js/main.11ec59dd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class HomeCoursesCard extends Component {\n  render() {\n    const { course } = this.props;\n    return (\n      <div>\n        <h1>{course.name}</h1>\n        <img src={course.img} alt={course.alt} />\n        <p>{course.desc}</p>\n        <h4>{course.price}</h4>\n        <div>\n          <button>View Plans</button>\n          <button>Buy Now</button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport HomeCoursesCard from \"./HomeCoursesCard\";\n\nexport default class HomeCoursesDeck extends Component {\n  render() {\n    const courses = [\n      {\n        key: 1,\n        img: \"\",\n        alt: \"\",\n        name: \"Music Theory\",\n        desc: \"Learn the fundamentals of Music Theory from Beginner, to Advanced (College Level).\",\n        price: \"$19.99\",\n      },\n      {\n        key: 2,\n        img: \"\",\n        alt: \"\",\n        name: \"Counterpoint and Harmony (Composition)\",\n        desc: \"Learn to compose without the need of an instrument, but based on the same rules used by Johann Bach himself.\",\n        price: \"$19.99\",\n      },\n    ];\n\n    return (\n      <div>\n        {courses.map((course) => {\n          return <HomeCoursesCard course={course} />;\n        })}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Footer extends Component {\n    render() {\n        return (\n            <div>\n                <p>Based in San Diego, CA</p>\n                <p>musicademy@gmail.com</p>\n                <p>760.208.0335</p>\n                <br/>\n                <p>Developed by Jesus Jimenez Santos, Miguel Ramirez</p>\n                <p>Music Content by John Ramirez, Miguel Ramirez</p>\n                <p>Copyright &copy; 2020 Musicademy. All Rights Reserved.</p>\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\n\nimport HomeCoursesDeck from './Home/HomeCoursesDeck';\nimport Footer from './Footer';\n\nimport \"./main.css\";\nimport './Home.css';\n\nexport default class Home extends Component {\n\n  render() {\n    return (\n      <div className=\"main-wrapper\">\n        {/* Logo */}\n        <div>\n          <img src=\"\" alt=\"\" />\n          <h1>Musicademy</h1>\n        </div>\n\n        {/* Main */}\n        <div>\n          {/* About */}\n          <div>\n            <h2>Hello!</h2>\n            <p>\n              Welcome to Musicademy. The best music platform for learning and\n              student management\n            </p>\n          </div>\n          <div>\n            <img src=\"\" alt=\"\" />\n          </div>\n          <div>\n            <h1>Who is Musicademy for?</h1>\n          </div>\n          <div>\n            <h2>Students</h2>\n            <p>\n              Anyone registering as a student has full access to all our\n              courses, tools, and features.\n            </p>\n            <ul>\n              <li>\n                Courses come packed with lessons, exercises, quizzes, exams,\n                grading, you name it!\n              </li>\n              <li>\n                Interact with other music lovers by connecting and joining\n                groups.\n              </li>\n              <li>\n                Participate in discussion to contribute to anything music.\n              </li>\n              <li>\n                Work closely with instructors by using our calendar, grading,\n                point system, and message features.\n              </li>\n            </ul>\n          </div>\n          <div>\n            <h2>Teachers</h2>\n            <p>\n              Make your job easier by registering as a teacher on our platform.\n              We supply the best music teacher platform on the internet.\n            </p>\n            <ul>\n              <li>\n                All provided courses come with automated grading algorithms.\n                Just assign the number of points the courses will be worth and\n                the program will take care of the rest.\n              </li>\n              <li>\n                Keep track of student progress and obtain constant communication\n                with messages and notification alerts.\n              </li>\n              <li>\n                Record student data, notes, lessons, invoices, and more with our\n                state of the art UI.\n              </li>\n            </ul>\n          </div>\n          <div>\n            <button>Try it now!</button>\n          </div>\n\n          {/* Courses */}\n          <div>\n            <h1>Learn music the easy way!</h1>\n            <p>\n              Each course comes with content built with new and innovative tools\n              to learn, including 3D Render objects for full immersion.\n            </p>\n            <div>\n                <HomeCoursesDeck />\n            </div>\n          </div>\n\n          {/* Free Tools */}\n            <div>\n                <h1>Here are some free tools for you to try.</h1>\n                <br/>\n                <h2>Metronome</h2>\n                <img src=\"\" alt=\"\" />\n                <button>Metronome App</button>\n                <br/>\n                <h2>Tuner</h2>\n                <img src=\"\" alt=\"\" />\n                <button>Tuner App</button>\n                <br/>\n                <h2>Drone</h2>\n                <img src=\"\" alt=\"\" />\n                <button>Drone App</button>\n            </div>\n\n            {/* Testimonials */}\n            <div>\n                \n            </div>\n\n          {/* Footer */}\n          <div>\n              <hr />\n              <Footer />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","export const menuAction = () => {\n  return {\n    type: \"SHOWHIDE\",\n  };\n};\n\nexport const searchCourseAction = (payload) => {\n  return {\n    type: \"SEARCH_COURSE_KEYWORDS\",\n    payload: payload,\n  };\n};\n\nexport const trueFalseAction = () => {\n  return {\n    type: \"TRUEFALSE\",\n  };\n};\n\nexport const loginRegisterToggleAction = (payload) => {\n  return {\n    type: \"LOGINSWITCH\",\n    payload: payload,\n  };\n};\n\nexport const isLoggedInAction = () => {\n  return {\n    type: \"ISLOGGEDIN\",\n  };\n};\n\nexport const dashFullMenuAction = () => {\n  return {\n    type: \"FULLMENUSWITCH\",\n  };\n};\n\nexport const dashMenuTextAction = () => {\n  return {\n    type: \"MENUTEXTSWITCH\",\n  };\n};\n\nexport const storeAccountTypeAction = (payload) => {\n  return {\n    type: \"storeAccountTypeAction\",\n    payload: payload,\n  };\n};\n\nexport const storeTeacherAuthIDAction = (payload) => {\n  return {\n    type: \"TEACHERAUTH\",\n    payload: payload,\n  };\n};\n\nexport const storeStudentAuthIDAction = (payload) => {\n  return {\n    type: \"storeStudentAuthIDAction\",\n    payload: payload,\n  };\n};\n\n// Teacher Stuffs *****************************************************************************************\n\nexport const userDataAction = (payload) => {\n  return {\n    type: \"USERDATA\",\n    payload: payload,\n  };\n};\n\nexport const storeTeacherAssignmentsGeneralInfoAction = (payload) => {\n  return {\n    type: \"TEACHERASS\",\n    payload: payload,\n  };\n};\n\nexport const storeTeacherMilestonesGeneralInfoAction = (payload) => {\n  return {\n    type: \"TEACHERMILE\",\n    payload: payload,\n  };\n};\n\nexport const storeTeacherForumsGeneralInfoAction = (payload) => {\n  return {\n    type: \"TEACHERFORUM\",\n    payload: payload,\n  };\n};\n\nexport const storeTeacherArticlesGeneralInfoAction = (payload) => {\n  return {\n    type: \"TEACHERART\",\n    payload: payload,\n  };\n};\n\nexport const storeTeacherMessagesGeneralInfoAction = (payload) => {\n  return {\n    type: \"TEACHERMESS\",\n    payload: payload,\n  };\n};\n\nexport const storeTeacherEventsGeneralInfoAction = (payload) => {\n  return {\n    type: \"TEACHEREVE\",\n    payload: payload,\n  };\n};\n\nexport const storeTeacherInvoicesGeneralInfoAction = (payload) => {\n  return {\n    type: \"TEACHERINV\",\n    payload: payload,\n  };\n};\n\nexport const storeTeacherSettingsGeneralInfoAction = (payload) => {\n  return {\n    type: \"TEACHERSET\",\n    payload: payload,\n  };\n};\n\nexport const storeTeacherProfileGeneralInfoAction = (payload) => {\n  return {\n    type: \"TEACHERPRO\",\n    payload: payload,\n  };\n};\n\nexport const storeTeacherStatisticsGeneralInfoAction = (payload) => {\n  return {\n    type: \"TEACHERSTAT\",\n    payload: payload,\n  };\n};\n\nexport const statisticsObjectAction = (payload) => {\n  return {\n    type: \"STATOBJ\",\n    payload: payload,\n  };\n};\n\n// Profile Actions\nexport const storeProfileFeedPostDataAction = (payload) => {\n  return {\n    type: \"storeProfileFeedPostDataAction\",\n    payload: payload,\n  };\n};\n\nexport const storeProfileFeedSinglePostDataAction = (payload) => {\n  return {\n    type: \"storeProfileFeedSinglePostDataAction\",\n    payload: payload,\n  };\n};\n\nexport const storeProfileAboutDataAction = (payload) => {\n  return {\n    type: \"storeProfileAboutDataAction\",\n    payload: payload,\n  };\n};\n\nexport const storeProfileExperienceDataAction = (payload) => {\n  return {\n    type: \"storeProfileExperienceDataAction\",\n    payload: payload,\n  };\n};\n\nexport const toggleNewExperienceFormAction = () => {\n  return {\n    type: \"toggleNewExperienceFormAction\",\n  };\n};\n\nexport const toggleNewInstrumentFormAction = () => {\n  return {\n    type: \"toggleNewInstrumentFormAction\",\n  };\n};\n\nexport const storeAwardListAction = (payload) => {\n  return {\n    type: \"storeAwardListAction\",\n    payload: payload,\n  };\n};\n\nexport const storeCertListAction = (payload) => {\n  return {\n    type: \"storeCertListAction\",\n    payload: payload,\n  };\n};\n\nexport const toggleNewAwardFormAction = () => {\n  return {\n    type: \"toggleNewAwardFormAction\",\n  };\n};\n\nexport const toggleNewCertFormAction = () => {\n  return {\n    type: \"toggleNewCertFormAction\",\n  };\n};\n\nexport const storeReviewListAction = (payload) => {\n  return {\n    type: \"storeReviewListAction\",\n    payload: payload,\n  };\n};\n\n// Student Actions\nexport const storeTeacherStudentGeneralInfoAction = (payload) => {\n  return {\n    type: \"TEACHERSTUDENT\",\n    payload: payload,\n  };\n};\n\nexport const toggleStudentOverviewAction = () => {\n  return {\n    type: \"toggleStudentOverviewAction\",\n  };\n};\n\nexport const toggleSearchUsernameAction = () => {\n  return {\n    type: \"toggleSearchUsernameAction\",\n  };\n};\n\nexport const toggleSendRequestButtonAction = () => {\n  return {\n    type: \"toggleSendRequestButtonAction\",\n  };\n};\n\nexport const storeNewStudentAction = (payload) => {\n  return {\n    type: \"storeNewStudentAction\",\n    payload: payload,\n  };\n};\n\nexport const storeSingleStudentInfoAction = (payload) => {\n  return {\n    type: \"storeSingleStudentInfoAction\",\n    payload: payload,\n  };\n};\n\nexport const storeTeacherStudentLessonsAction = (payload) => {\n  return {\n    type: \"storeTeacherStudentLessonsAction\",\n    payload: payload,\n  };\n};\n\nexport const storeTeacherStudentExercisesAction = (payload) => {\n  return {\n    type: \"storeTeacherStudentExercisesAction\",\n    payload: payload,\n  };\n};\n\nexport const storeTeacherStudentQuizzesAction = (payload) => {\n  return {\n    type: \"storeTeacherStudentQuizzesAction\",\n    payload: payload,\n  };\n};\n\nexport const storeTeacherStudentExamsAction = (payload) => {\n  return {\n    type: \"storeTeacherStudentExamsAction\",\n    payload: payload,\n  };\n};\n\n// Group Actions\n\nexport const storeTeacherGroupGeneralInfoAction = (payload) => {\n  return {\n    type: \"TEACHERGROUP\",\n    payload: payload,\n  };\n};\n\nexport const toggleNewGroupFormAction = () => {\n  return {\n    type: \"toggleNewGroupFormAction\",\n  };\n};\n\nexport const storeSingleGroupAction = (payload) => {\n  return {\n    type: \"storeSingleGroupAction\",\n    payload: payload,\n  };\n};\n\nexport const storeGroupFeedPostsAction = (payload) => {\n  return {\n    type: \"storeGroupFeedPostsAction\",\n    payload: payload,\n  };\n};\n\nexport const storeSingleGroupFeedPostAction = (payload) => {\n  return {\n    type: \"storeSingleGroupFeedPostAction\",\n    payload: payload,\n  };\n};\n\nexport const storeGroupMembersListAction = (payload) => {\n  return {\n    type: \"storeGroupMembersListAction\",\n    payload: payload,\n  };\n};\n\nexport const checkJoinedGroupStatusAction = (payload) => {\n  return {\n    type: \"checkJoinedGroupStatusAction\",\n    payload: payload,\n  };\n};\n\nexport const checkRequestedGroupStatusAction = (payload) => {\n  return {\n    type: \"checkRequestedGroupStatusAction\",\n    payload: payload,\n  };\n};\n\n// Courses Actions\nexport const storeTeacherCourseGeneralInfoAction = (payload) => {\n  return {\n    type: \"TEACHERCOURSE\",\n    payload: payload,\n  };\n};\n\nexport const toggleCourseFullWizardComponentAction = (payload) => {\n  return {\n    type: \"toggleCourseFullWizardComponentAction\",\n    payload: payload,\n  };\n};\n\nexport const storeShortOptionsAction = (payload) => {\n  return {\n    type: \"storeShortOptionsAction\",\n    payload: payload,\n  };\n};\n\nexport const toggleExerciseTypeOptionAction = (payload) => {\n  return {\n    type: \"toggleExerciseTypeOptionAction\",\n    payload: payload,\n  };\n};\n\nexport const storeCourseIDFullWizardAction = (payload) => {\n  return {\n    type: \"storeCourseIDFullWizardAction\",\n    payload: payload,\n  };\n};\n\nexport const storeLessonNameFullWizardAction = (payload) => {\n  return {\n    type: \"storeLessonNameFullWizardAction\",\n    payload: payload,\n  };\n};\n\nexport const storeQuizComponentsAction = (payload) => {\n  return {\n    type: \"storeQuizComponentsAction\",\n    payload: payload,\n  };\n};\n\nexport const storeExamQuizComponentsAction = (payload) => {\n  return {\n    type: \"storeExamQuizComponentsAction\",\n    payload: payload,\n  };\n};\n\nexport const storeSingleCourseAction = (payload) => {\n  return {\n    type: \"storeSingleCourseAction\",\n    payload: payload,\n  };\n};\n\nexport const storeSingleCourseLessonsAction = (payload) => {\n  return {\n    type: \"storeSingleCourseLessonsAction\",\n    payload: payload,\n  };\n};\n\nexport const storeSingleCourseExersAction = (payload) => {\n  return {\n    type: \"storeSingleCourseExersAction\",\n    payload: payload,\n  };\n};\n\nexport const storeSingleCourseQuizzesAction = (payload) => {\n  return {\n    type: \"storeSingleCourseQuizzesAction\",\n    payload: payload,\n  };\n};\n\nexport const toggleCourseTypeEditAction = (payload) => {\n  return {\n    type: \"toggleCourseTypeEditAction\",\n    payload: payload,\n  };\n};\n\nexport const toggleNewLessonFormAction = () => {\n  return {\n    type: \"toggleNewLessonFormAction\",\n  };\n};\n\nexport const toggleEditLessonFormAction = () => {\n  return {\n    type: \"toggleEditLessonFormAction\",\n  };\n};\n\nexport const storeLessonCountAction = (payload) => {\n  return {\n    type: \"storeLessonCountAction\",\n    payload: payload,\n  };\n};\n\nexport const storeSingleCourseLessonAction = (payload) => {\n  return {\n    type: \"storeSingleCourseLessonAction\",\n    payload: payload,\n  };\n};\n\nexport const storeSingleCourseExerAction = (payload) => {\n  return {\n    type: \"storeSingleCourseExerAction\",\n    payload: payload,\n  };\n};\n\n// Messages Actions\nexport const storeTeacherMessagesAction = (payload) => {\n  return {\n    type: \"STORETEACHMESS\",\n    payload: payload,\n  };\n};\n\nexport const storeSingleThreadAction = (payload) => {\n  return {\n    type: \"STORESINGLETHREAD\",\n    payload: payload,\n  };\n};\n\nexport const storeCurrentMonthAction = (payload) => {\n  return {\n    type: \"STORECURRMONTH\",\n    payload: payload,\n  };\n};\n\nexport const storeSingleForumAction = (payload) => {\n  return {\n    type: \"STORESINGFORUM\",\n    payload: payload,\n  };\n};\n\nexport const storeSingleInvoiceAction = (payload) => {\n  return {\n    type: \"STORESINGINV\",\n    payload: payload,\n  };\n};\n\nexport const storeInvoiceServicesAction = (payload) => {\n  return {\n    type: \"STOREINVSERV\",\n    payload: payload,\n  };\n};\n\n// Student Stuffs ******************************************************************************************\n\nexport const storeStudentUserDataAction = (payload) => {\n  return {\n    type: \"storeStudentUserDataAction\",\n    payload: payload,\n  };\n};\n\n// Profile\nexport const storeStudentProfileFeedPostsAction = (payload) => {\n  return {\n    type: \"storeStudentProfileFeedPostsAction\",\n    payload: payload,\n  };\n};\n\nexport const storeStudentProfileFeedPostAction = (payload) => {\n  return {\n    type: \"storeStudentProfileFeedPostAction\",\n    payload: payload,\n  };\n};\n\nexport const storeStudentAboutAction = (payload) => {\n  return {\n    type: \"storeStudentAboutAction\",\n    payload: payload,\n  };\n};\n\nexport const storeStudentExpAction = (payload) => {\n  return {\n    type: \"storeStudentExpAction\",\n    payload: payload,\n  };\n};\n\nexport const toggleNewExpFormAction = () => {\n  return {\n    type: \"toggleNewExpFormAction\",\n  };\n};\n\nexport const toggleStudentNewInstrumentFormAction = () => {\n  return {\n    type: \"toggleStudentNewInstrumentFormAction\",\n  };\n};\n\nexport const storeStudentAwardsAction = (payload) => {\n  return {\n    type: \"storeStudentAwardsAction\",\n    payload: payload,\n  };\n};\n\nexport const storeStudentCertsAction = (payload) => {\n  return {\n    type: \"storeStudentCertsAction\",\n    payload: payload,\n  };\n};\n\nexport const toggleStudentNewAwardFormAction = () => {\n  return {\n    type: \"toggleStudentNewAwardFormAction\",\n  };\n};\n\nexport const toggleStudentNewCertFormAction = () => {\n  return {\n    type: \"toggleStudentNewCertFormAction\",\n  };\n};\n\n// Courses\nexport const flagStudentTeacherConnectionAction = (payload) => {\n  return {\n    type: \"flagStudentTeacherConnectionAction\",\n    payload: payload,\n  };\n};\n\nexport const storeStudentTeacherListAction = (payload) => {\n  return {\n    type: \"storeStudentTeacherListAction\",\n    payload: payload,\n  };\n};\n\nexport const storeStudentCoursesAction = (payload) => {\n  return {\n    type: \"storeStudentCoursesAction\",\n    payload: payload,\n  };\n};\n\nexport const storeStudentSingleCourseAction = (payload) => {\n  return {\n    type: \"storeStudentSingleCourseAction\",\n    payload: payload,\n  };\n};\n\nexport const toggleStudentCourseLessonListAction = () => {\n  return {\n    type: \"toggleStudentCourseLessonListAction\",\n  };\n};\n\nexport const storeStudentCourseLessonListAction = (payload) => {\n  return {\n    type: \"storeStudentCourseLessonListAction\",\n    payload: payload,\n  };\n};\n\nexport const toggleStudentCourseExerListAction = () => {\n  return {\n    type: \"toggleStudentCourseExerListAction\",\n  };\n};\n\nexport const storeStudentCourseExerListAction = (payload) => {\n  return {\n    type: \"storeStudentCourseExerListAction\",\n    payload: payload,\n  };\n};\n\nexport const toggleStudentCourseQuizListAction = () => {\n  return {\n    type: \"toggleStudentCourseQuizListAction\",\n  };\n};\n\nexport const storeStudentCourseQuizListAction = (payload) => {\n  return {\n    type: \"storeStudentCourseQuizListAction\",\n    payload: payload,\n  };\n};\n\nexport const storeCurrentCourseComponentAction = (payload) => {\n  return {\n    type: \"storeCurrentCourseComponentAction\",\n    payload: payload,\n  };\n};\n\nexport const storeStudentLessonQuestionResultAction = (payload) => {\n  return {\n    type: \"storeStudentLessonQuestionResultAction\",\n    payload: payload,\n  };\n};\n\nexport const storeStudentNextExerciseAction = (payload) => {\n  return {\n    type: \"storeStudentNextExerciseAction\",\n    payload: payload,\n  };\n};\n\nexport const storeStudentNextQuizAction = (payload) => {\n  return {\n    type: \"storeStudentNextQuizAction\",\n    payload: payload,\n  };\n};\n\nexport const toggleStudentQuizResultsAction = () => {\n  return {\n    type: \"toggleStudentQuizResultsAction\",\n  };\n};\n\nexport const storeStudentQuizResultsAction = (payload) => {\n  return {\n    type: \"storeStudentQuizResultsAction\",\n    payload: payload,\n  };\n};\n\nexport const storeStudentNextLessonAction = (payload) => {\n  return {\n    type: \"storeStudentNextLessonAction\",\n    payload: payload,\n  };\n};\n","import React, { Component } from 'react';\n\nexport default class CoursesCard extends Component {\n    render() {\n        const {course} = this.props;\n        return (\n            <div>\n                <h1>{course.name}</h1>\n                <img src={course.img} alt={course.alt} />\n                <p>{course.desc}</p>\n                <h3>{course.price}</h3>\n                <div>\n                    <button>Buy Now</button>\n                    <button>View Plans</button>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\nimport CoursesCard from './CoursesCard';\n\nexport default class CoursesDeck extends Component {\n    render() {\n        const {courses} = this.props;\n        return (\n            <div>\n                {courses.map((course) => {\n                    return <CoursesCard key={course.key} course={course} />\n                })}\n            </div>\n        )\n    }\n}\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { searchCourseAction } from \"../redux/actions\";\nimport CoursesDeck from \"./Courses/CoursesDeck\";\n\nimport Footer from \"./Footer\";\n\nimport './main.css';\n\nexport default function Courses() {\n  const courseState = useSelector((state) => state.courseSearchReducer);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"main-wrapper\">\n      {/* Logo */}\n      <div>\n        <img src=\"\" alt=\"\" />\n        <h1>Musicademy</h1>\n      </div>\n      {/* Main */}\n      <div>\n        <div>\n          <h1>Check out our courses catalog.</h1>\n        </div>\n        <div>\n          <h3>Search for the right course.</h3>\n          <p>Use keywords or search for the course directly.</p>\n          <input\n            id=\"tbSearch\"\n            type=\"text\"\n            placeholder=\"Enter keywords here...\"\n          />\n          <button\n            onClick={() => {\n              dispatch(\n                searchCourseAction(document.querySelector(\"#tbSearch\").value)\n              );\n            }}\n          >\n            Search\n          </button>\n        </div>\n        <div>\n          <p>Showing {courseState.length} out of 8 courses.</p>\n        </div>\n        <div>\n          {courseState.length > 0 ? <CoursesDeck courses={courseState} /> : <h3>No results found.</h3>}\n        </div>\n\n        {/* Footer */}\n        <Footer />\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nexport default class PlanPanel extends Component {\n  render() {\n    const { name, price, desc, list } = this.props;\n    return (\n      <div>\n        <div>\n          <h1>{name}</h1>\n          <h3>{price}</h3>\n          <p>{desc}</p>\n\n          <ul>\n              {list.map((l) => {\n                  return(\n                    <li>{l}</li>\n                  );\n              })}\n          </ul>\n          <button>Subscribe</button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport PlanPanel from \"./Plans/PlanPanel\";\nimport Footer from './Footer';\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { trueFalseAction } from \"../redux/actions\";\n\nexport default function Plans() {\n  const planState = useSelector((state) => state.trueFalseReducer);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      {/* Logo */}\n      <div>\n        <img src=\"\" alt=\"\" />\n        <h1>Musicademy</h1>\n      </div>\n\n      {/* Main */}\n      <div>\n        <div>\n          <h1>Check out our plans and subscribe to your best fit!</h1>\n        </div>\n        <div>\n          <p>\n            Choose the perfect plan based on your preferred subscription length.\n          </p>\n          <button onClick={() => dispatch(trueFalseAction())}>\n            {planState ? \"View Annual Plans\" : \"View Monthly Plans\"}\n          </button>\n        </div>\n        <div>\n          {/* Monthly */}\n          <div>\n            {planState ? (\n              <div>\n                <PlanPanel\n                  name=\"Free\"\n                  price=\"$0/mo\"\n                  desc=\"Best way to try out if Musicademy is best for you.\"\n                  list={[\n                    \"Preview access to one course.\",\n                    \"Full access to Musicademy apps.\",\n                  ]}\n                />\n                <PlanPanel\n                  name=\"Premium\"\n                  price=\"$19.99/mo\"\n                  desc=\"Best for students and teachers to launch a feature rich online platform.\"\n                  list={[\n                    \"Preview access to one course.\",\n                    \"Full access to Musicademy apps.\",\n                  ]}\n                />\n                <PlanPanel\n                  name=\"Pro\"\n                  price=\"$29.99/mo\"\n                  desc=\"Only available for teachers.\"\n                  list={[\n                    \"Preview access to one course.\",\n                    \"Full access to Musicademy apps.\",\n                  ]}\n                />\n              </div>\n            ) : (\n              \n              <div>\n                  <PlanPanel\n                  name=\"Free\"\n                  price=\"$0/yr\"\n                  desc=\"Blah Blah Blah\"\n                  list={[\n                    \"Preview access to one course.\",\n                    \"Full access to Musicademy apps.\",\n                  ]}\n                />\n                <PlanPanel\n                  name=\"Premium\"\n                  price=\"$199.99/yr\"\n                  desc=\"Blah Blah Blah\"\n                  list={[\n                    \"Preview access to one course.\",\n                    \"Full access to Musicademy apps.\",\n                  ]}\n                />\n                <PlanPanel\n                  name=\"Pro\"\n                  price=\"$299.99/yr\"\n                  desc=\"Blah Blah Blah\"\n                  list={[\n                    \"Preview access to one course.\",\n                    \"Full access to Musicademy apps.\",\n                  ]}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Footer */}\n        <Footer />\n      </div>\n\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Contact() {\n\n\n  return (\n    <div>\n      {/* Logo */}\n      <div>\n        <img src=\"\" alt=\"\" />\n        <h1>Musicademy</h1>\n      </div>\n\n      {/* Main */}\n      <div>\n        {/* Left Side */}\n        <div>\n          <img src=\"\" alt=\"\" />\n          <ul>\n            <li>musicademy@gmail.com</li>\n            <li>760.208.0335</li>\n            <li>San Diego, CA</li>\n            <br />\n            <li>Social Media 1</li>\n            <li>Social Media 2</li>\n          </ul>\n        </div>\n\n        {/* Right Side */}\n        <div>\n          <h2>Send us a message</h2>\n          <p>\n            Tempor commodo aliquip anim laboris laborum. Deserunt occaecat\n            officia sit reprehenderit dolore ea id adipisicing ex qui officia ut\n            occaecat do.{\" \"}\n          </p>\n          <div>\n            <form id=\"contactForm\">\n              <div>\n                <label>Full Name</label>\n                <input\n                  id=\"contact-fullName\"\n                  type=\"text\"\n                  placeholder=\"Full Name\"\n                />\n              </div>\n              <div>\n                <label>Email</label>\n                <input id=\"contact-email\" type=\"text\" placeholder=\"Email\" />\n              </div>\n              <div>\n                <label>Subject</label>\n                <input id=\"contact-subject\" type=\"text\" placeholder=\"Subject\" />\n              </div>\n              <div>\n                <label>Message</label>\n                <textarea\n                  id=\"contact-message\"\n                  name=\"tbMessage\"\n                  rows=\"10\"\n                  placeholder=\"Message\"\n                ></textarea>\n              </div>\n              <div>\n                <button>Send</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","// Firebase App (the core Firebase SDK) is always required and\n// must be listed before other Firebase SDKs\nimport firebase from \"firebase/app\";\n\n// Add the Firebase services that you want to use\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAPSLS3bcx62CEWuOOc-NXKO_3Ys_H-HQk\",\n  authDomain: \"musicademy-2021.firebaseapp.com\",\n  projectId: \"musicademy-2021\",\n  storageBucket: \"musicademy-2021.appspot.com\",\n  messagingSenderId: \"768437036610\",\n  appId: \"1:768437036610:web:904069e49fda4ac30fefdb\",\n  measurementId: \"G-T8NK6Q16C1\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const db = firebase.firestore();\n\n// Timestamp\nexport const firebaseTimestamp = firebase.firestore.FieldValue.serverTimestamp();\n\n// Collections\nexport const users_Collection = db.collection(\"Users\");\nexport const teachers_Collection = db.collection(\"Teachers\");\nexport const students_Collection = db.collection(\"Student\");\nexport const groups_Collection = db.collection(\"Groups\");\nexport const forums_Collection = db.collection(\"Forums\");\nexport const articles_Collection = db.collection(\"Articles\");\nexport const courses_Collection = db.collection(\"Courses\");\nexport const studentReqQueue_Collection = db.collection(\"StudentReqQueue\");\nexport const groupReqQueue_Collection = db.collection(\"GroupReqQueue\");\n\n////////////////////////////////\nexport default firebase;\n","export const firebaseLooper = (snapshot) => {\n    let data = [];\n    snapshot.forEach((doc) => {\n      data.push({\n        ...doc.data(),\n        id: doc.id,\n      });\n    });\n    return data;\n  };","import React from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport {\n  loginRegisterToggleAction,\n  isLoggedInAction,\n  storeTeacherAuthIDAction,\n  storeStudentAuthIDAction,\n  storeAccountTypeAction,\n} from \"../redux/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { users_Collection } from \"../utils/firebase\";\nimport { firebaseLooper } from \"../utils/tools\";\n\nexport default function Login() {\n  const loginSwitchState = useSelector(\n    (state) => state.loginRegisterSwitchReducer\n  );\n  const isLoggedInState = useSelector((state) => state.isLoggedInReducer);\n  const accountTypeState = useSelector(\n    (state) => state.storeAccountTypeReducer\n  );\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleRouteClick = () => {\n    const username = document.querySelector(\"#tbUsername\").value;\n    const password = document.querySelector(\"#tbPassword\").value;\n\n    // Check if they exist in the DB\n    users_Collection\n      .get()\n      .then((snapshot) => {\n        const userData = firebaseLooper(snapshot);\n        userData.forEach((user) => {\n          if (user.Username === username && user.Password === password) {\n            // If they do exist and are correct, then do the stuffs\n\n            document.querySelector(\"#mainMenu\").classList.add(\"hide\");\n            \n            // Choose between teacher or student depending on their credentials\n\n            dispatch(isLoggedInAction());\n\n            if (user.AccountType === \"Teacher\") {\n              // Save authID\n              dispatch(storeTeacherAuthIDAction(username));\n              dispatch(storeAccountTypeAction('Teacher'));\n              document.querySelector(\"#teacherMainMenu\").classList.remove(\"hide\");\n              history.push(\"/teacherdash\");\n            } else if (user.AccountType === \"Student\") {\n              // Save authID\n              dispatch(storeStudentAuthIDAction(username));\n              dispatch(storeAccountTypeAction('Student'));\n              document.querySelector(\"#studentMainMenu\").classList.remove(\"hide\");\n              history.push(\"/studentdash\");\n            }\n          }\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleLoginSwitch = () => {\n    if (loginSwitchState === \"login\") {\n      return (\n        <div>\n          <div>\n            <h2>Welcome back!</h2>\n            <p>Please log in to begin your musical adventures!</p>\n          </div>\n          <div>\n            <div>\n              <label>Username or Email</label>\n              <input\n                id=\"tbUsername\"\n                type=\"text\"\n                placeholder=\"jdoe123! or johndoe@gmail.com\"\n              />\n            </div>\n            <div>\n              <div>\n                <label>Password</label>\n                <button\n                  onClick={() => dispatch(loginRegisterToggleAction(\"forgot\"))}\n                >\n                  Forgot Password?\n                </button>\n              </div>\n              <input id=\"tbPassword\" type=\"password\" placeholder=\"Password\" />\n            </div>\n            <div>\n              <button onClick={handleRouteClick}>Login</button>\n            </div>\n            <div>\n              <p>Are you new to Musicademy?</p>\n              <button\n                onClick={() => dispatch(loginRegisterToggleAction(\"register\"))}\n              >\n                Create an account\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    } else if (loginSwitchState === \"register\") {\n      return (\n        <div>\n          <div>\n            <h2>A new musical adventure begins here!</h2>\n            <p>\n              Make sure to enter correct information for proper registration.\n            </p>\n          </div>\n          <div>\n            <div>\n              <div>\n                <label>First Name</label>\n                <input id=\"tbFname\" type=\"text\" placeholder=\"John\" />\n              </div>\n              <div>\n                <label>Last Name</label>\n                <input id=\"tbLname\" type=\"text\" placeholder=\"Doe\" />\n              </div>\n            </div>\n            <div>\n              <label>Email</label>\n              <input\n                id=\"tbRegisEmail\"\n                type=\"text\"\n                placeholder=\"johndoe@gmail.com\"\n              />\n            </div>\n            <div>\n              <label>Username</label>\n              <input id=\"tbRegisUser\" type=\"text\" placeholder=\"jdoe123!\" />\n            </div>\n            <div>\n              <label>Password</label>\n              <input id=\"tbRegisPass\" type=\"text\" placeholder=\"Password\" />\n            </div>\n            <div>\n              <label>Confirm Password</label>\n              <input\n                id=\"tbRegisPassConf\"\n                type=\"password\"\n                placeholder=\"Password Confirmation\"\n              />\n            </div>\n            <div>\n              <button>Register</button>\n            </div>\n            <div>\n              <p>Already a member?</p>\n              <button\n                onClick={() => dispatch(loginRegisterToggleAction(\"login\"))}\n              >\n                Login to account\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    } else if (loginSwitchState === \"forgot\") {\n      return (\n        <div>\n          <div>\n            <h2>Forgot Password?</h2>\n            <p>Enter your email and we will email you instructions shortly.</p>\n          </div>\n          <div>\n            <div>\n              <label>Email</label>\n              <input\n                id=\"tbForgotEmail\"\n                type=\"text\"\n                placeholder=\"johndoe@gmail.com\"\n              />\n            </div>\n            <div>\n              <button>Send reset link</button>\n            </div>\n          </div>\n          <div>\n            <button\n              onClick={() => dispatch(loginRegisterToggleAction(\"login\"))}\n            >\n              {\"<\"} Back to Login\n            </button>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div>\n      {/* Form */}\n      <div>\n        <div>\n          <img src=\"\" alt=\"\" />\n          <h1>Musicademy</h1>\n        </div>\n        <div>{handleLoginSwitch()}</div>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nexport default class TopBar extends Component {\n  render() {\n    return (\n      <div>\n        <div>\n          <button>New Message</button>\n          <button>New Assignment</button>\n          <button>New Event</button>\n          <button>New Forum Post</button>\n        </div>\n        <div>\n          <button>Search</button>\n          <button>Notifications</button>\n          <div>\n            <div>\n              <p>Jesus Jimenez</p>\n            </div>\n            <div>\n              <p>Teacher</p>\n            </div>\n          </div>\n          <div>\n            <img src=\"\" alt=\"\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class AnnouncementBox extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Announcement Box</h1>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\nexport default class SimpleStats extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Simple Stats</h1>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\nexport default class RecentActivity extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Recent Activity</h1>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\nexport default class RecentInvoices extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Recent Invoices</h1>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\nexport default class Earnings extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Earnings</h1>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\nexport default class Achievement extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Achievement</h1>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\nexport default class UpcomingEvents extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Upcoming Events</h1>\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\n\nexport default class DashFooter extends Component {\n  render() {\n    return (\n      <div>\n        <hr />\n        <div>\n          <p>COPYRIGHT &copy; 2021 MUSICADEMY</p>\n        </div>\n        <div>\n          <p>Made for music learners and teachers all over the nation.</p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useEffect } from \"react\";\n\nimport TopBar from \"./Teachers/Dash/TopBar\";\nimport AnnouncementBox from \"./Teachers/Dash/AnnouncementBox\";\nimport SimpleStats from \"./Teachers/Dash/SimpleStats\";\nimport RecentActivity from \"./Teachers/Dash/RecentActivity\";\nimport RecentInvoices from \"./Teachers/Dash/RecentInvoices\";\nimport Earnings from \"./Teachers/Dash/Earnings\";\nimport Achievement from \"./Teachers/Dash/Achievement\";\nimport UpcomingEvents from \"./Teachers/Dash/UpcomingEvents\";\n\nimport DashFooter from \"./Teachers/Dash/DashFooter\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  storeTeacherAuthIDAction,\n  storeTeacherAssignmentsGeneralInfoAction,\n  storeTeacherMilestonesGeneralInfoAction,\n  storeTeacherForumsGeneralInfoAction,\n  storeTeacherArticlesGeneralInfoAction,\n  storeTeacherMessagesGeneralInfoAction,\n  storeTeacherEventsGeneralInfoAction,\n  storeTeacherInvoicesGeneralInfoAction,\n  storeTeacherSettingsGeneralInfoAction,\n  storeTeacherStatisticsGeneralInfoAction,\n  userDataAction,\n  storeAccountTypeAction,\n  isLoggedInAction,\n} from \"../redux/actions\";\n\nimport {\n  teachers_Collection,\n  groups_Collection,\n  forums_Collection,\n  articles_Collection,\n  users_Collection,\n} from \"../utils/firebase\";\nimport { firebaseLooper } from \"../utils/tools\";\n\nexport default function TeacherDash() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  dispatch(storeTeacherAuthIDAction(\"jssjmnzsnts\"));\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const state = useSelector(\n    (state) => state.storeTeacherStudentGeneralInfoReducer\n  );\n  const today = Date.now();\n  // All Data Needed\n\n  // Student Collection\n  const getAllUserData = () => {\n    users_Collection\n      .where(\"AuthID\", \"==\", teacherAuthID)\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        dispatch(userDataAction(data[0]));\n      })\n      .catch((err) => console.log(err));\n  };\n  const getAllStatisticData = () => {\n    const statistics_Collection = teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Statistics\");\n    statistics_Collection\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        dispatch(storeTeacherStatisticsGeneralInfoAction(data));\n      })\n      .catch((err) => console.log(err));\n  };\n  const getAllAssignmentData = () => {\n    const assignments_Collection = teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Assignments\");\n    assignments_Collection\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        dispatch(storeTeacherAssignmentsGeneralInfoAction(data));\n      })\n      .catch((err) => console.log(err));\n  };\n  const getAllMilestoneData = () => {\n    const milestone_Collection = teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Milestones\");\n    milestone_Collection\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        dispatch(storeTeacherMilestonesGeneralInfoAction(data));\n      })\n      .catch((err) => console.log(err));\n  };\n  const getAllForumDiscussionData = () => {\n    groups_Collection\n      .get()\n      .then((snapshot) => {\n        const idArray = [];\n        const data = firebaseLooper(snapshot);\n        data.forEach((d) => {\n          idArray.push(d.id);\n        });\n        const forumData = [];\n        idArray.forEach((groupID) => {\n          forums_Collection\n            .where(\"GroupID\", \"==\", groupID)\n            .get()\n            .then((snapshot) => {\n              const data = firebaseLooper(snapshot);\n              if (data.length > 0) {\n                forumData.push(data[0]);\n              }\n              dispatch(storeTeacherForumsGeneralInfoAction(forumData));\n            })\n            .catch((err) => console.log(err));\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n  const getAllArticleData = () => {\n    articles_Collection\n      .where(\"Author\", \"==\", teacherAuthID)\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        dispatch(storeTeacherArticlesGeneralInfoAction(data));\n      })\n      .catch((err) => console.log(err));\n  };\n  const getAllMessageData = () => {\n    const messages_Collection = teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Messages\");\n    messages_Collection\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        dispatch(storeTeacherMessagesGeneralInfoAction(data));\n      })\n      .catch((err) => console.log(err));\n  };\n  const getAllEventData = () => {\n    const events_Collection = teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Events\");\n    events_Collection\n      .orderBy(\"Date\", \"asc\")\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        dispatch(storeTeacherEventsGeneralInfoAction(data));\n      })\n      .catch((err) => console.log(err));\n  };\n  const getAllInvoiceData = () => {\n    const invoices_Collection = teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Invoices\");\n    invoices_Collection\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        dispatch(storeTeacherInvoicesGeneralInfoAction(data));\n      })\n      .catch((err) => console.log(err));\n  };\n  const getAllSettingData = () => {\n    const settings_Collection = teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Settings\");\n    settings_Collection\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        dispatch(storeTeacherSettingsGeneralInfoAction(data));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const onLogOut = () => {\n    dispatch(storeAccountTypeAction(\"\"));\n    dispatch(storeTeacherAuthIDAction(\"\"));\n    dispatch(isLoggedInAction());\n    history.push(\"/login\");\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/login\");\n      return;\n    }\n    getAllUserData();\n    getAllStatisticData();\n    getAllAssignmentData();\n    getAllMilestoneData();\n    getAllForumDiscussionData();\n    getAllArticleData();\n    getAllMessageData();\n    getAllEventData();\n    getAllInvoiceData();\n    getAllSettingData();\n  }, []);\n\n  return (\n    //   This entire component will have a background. The pieces inside will be another color, in chunks.\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      <div style={{ float: \"right\" }}>\n        <button onClick={onLogOut}>Log Out</button>\n      </div>\n\n      {/* Main Content */}\n      <div>\n        {/* Announcement Box */}\n        <div>\n          <AnnouncementBox />\n        </div>\n\n        {/* Simple Stats */}\n        <div>\n          <SimpleStats />\n        </div>\n\n        {/* Recent Student,Group,Forum Activity */}\n        <div>\n          <RecentActivity />\n        </div>\n\n        {/* Recent Invoices */}\n        <div>\n          <RecentInvoices />\n        </div>\n\n        {/* Earnings, Achievement, Upcoming Events*/}\n        <div>\n          {/* Earnings */}\n          <div>\n            <Earnings />\n          </div>\n\n          {/* Achievement */}\n          <div>\n            <Achievement />\n          </div>\n\n          {/* Upcoming Events */}\n          <div>\n            <UpcomingEvents />\n          </div>\n        </div>\n      </div>\n\n      {/* Footer */}\n      <DashFooter />\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {statisticsObjectAction} from '../../../redux/actions';\n\nexport default function StorageStats() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  \n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const storageState = useSelector(\n    (state) => state.storeTeacherStatisticsGeneralInfoReducer\n  );\n  const storageObj = useSelector(state => state.statisticsObjectReducer);\n\n  const getStorageObj = () => {\n    storageState.forEach((obj) => {\n      if (obj.id === 'StorageStats') {\n        dispatch(statisticsObjectAction(obj));\n      }\n    })\n  }\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n    }\n    getStorageObj();\n  }, []);\n\n  return (\n    <div>\n      <div>\n        <h1>Storage Statistics</h1>\n        <hr />\n        <p>Usage: {storageObj.Usage} MB</p>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { statisticsObjectAction } from \"../../../redux/actions\";\n\nexport default function StudentStats() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const storageState = useSelector(\n    (state) => state.storeTeacherStatisticsGeneralInfoReducer\n  );\n  const storageObj = useSelector((state) => state.statisticsObjectReducer);\n\n  const getStorageObj = () => {\n    storageState.forEach((obj) => {\n      if (obj.id === \"StudentStats\") {\n        dispatch(statisticsObjectAction(obj));\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n    }\n    getStorageObj();\n  }, []);\n  return (\n    <div>\n      \n      <h1>Student Stats</h1>\n      <hr/>\n      <p># of Students: {storageObj.Num}</p>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { statisticsObjectAction } from \"../../../redux/actions\";\n\nexport default function GroupStats() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const storageState = useSelector(\n    (state) => state.storeTeacherStatisticsGeneralInfoReducer\n  );\n  const storageObj = useSelector((state) => state.statisticsObjectReducer);\n\n  const getStorageObj = () => {\n    storageState.forEach((obj) => {\n      if (obj.id === \"GroupStats\") {\n        dispatch(statisticsObjectAction(obj));\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n    }\n    getStorageObj();\n  }, []);\n  return (\n    <div>\n      <h1>Group Stats</h1>\n      <hr/>\n      <p># of Groups: {storageObj.Num}</p>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { statisticsObjectAction } from \"../../../redux/actions\";\n\nexport default function CourseStats() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const storageState = useSelector(\n    (state) => state.storeTeacherStatisticsGeneralInfoReducer\n  );\n  const storageObj = useSelector((state) => state.statisticsObjectReducer);\n\n  const getStorageObj = () => {\n    storageState.forEach((obj) => {\n      if (obj.id === \"CourseStats\") {\n        dispatch(statisticsObjectAction(obj));\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n    }\n    getStorageObj();\n  }, []);\n  return (\n    <div>\n      <h1>Course Stats</h1>\n      <hr />\n      <p># of Courses: {storageObj.Num}</p>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { statisticsObjectAction } from \"../../../redux/actions\";\n\nexport default function ForumStats() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const storageState = useSelector(\n    (state) => state.storeTeacherStatisticsGeneralInfoReducer\n  );\n  const storageObj = useSelector((state) => state.statisticsObjectReducer);\n\n  const getStorageObj = () => {\n    storageState.forEach((obj) => {\n      if (obj.id === \"ForumStats\") {\n        dispatch(statisticsObjectAction(obj));\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n    }\n    getStorageObj();\n  }, []);\n  return (\n    <div>\n      <h1>Forum Stats</h1>\n      <hr/>\n      <p># of Forum Discussions: {storageObj.Num}</p>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { statisticsObjectAction } from \"../../../redux/actions\";\n\nexport default function EventStats() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const storageState = useSelector(\n    (state) => state.storeTeacherStatisticsGeneralInfoReducer\n  );\n  const storageObj = useSelector((state) => state.statisticsObjectReducer);\n\n  const getStorageObj = () => {\n    storageState.forEach((obj) => {\n      if (obj.id === \"EventStats\") {\n        dispatch(statisticsObjectAction(obj));\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n    }\n    getStorageObj();\n  }, []);\n  return (\n    <div>\n      <h1>Event Stats</h1>\n      <hr/>\n      <p># of Events: {storageObj.Num}</p>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport StorageStats from \"./StorageStats\";\nimport StudentStats from \"./StudentStats\";\nimport GroupStats from \"./GroupStats\";\nimport CourseStats from \"./CourseStats\";\nimport ForumStats from \"./ForumStats\";\nimport EventStats from \"./EventStats\";\nimport DashFooter from \"../Dash/DashFooter\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n} from \"react-router-dom\";\n\nexport default function StatisticsMain() {\n  let { url } = useRouteMatch();\n  return (\n    <Router>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n      <div>\n        <div>\n          <Link to={`${url}/storage`}>Storage</Link>\n          <br />\n          <Link to={`${url}/student`}>Student</Link>\n          <br />\n          <Link to={`${url}/group`}>Group</Link>\n          <br />\n          <Link to={`${url}/course`}>Course</Link>\n          <br />\n          <Link to={`${url}/forum`}>Forum</Link>\n          <br />\n          <Link to={`${url}/event`}>Event</Link>\n          <br />\n        </div>\n\n        <div>\n          <Switch>\n            <Route path={`${url}/storage`}>\n              <StorageStats />\n            </Route>\n            <Route path={`${url}/student`}>\n              <StudentStats />\n            </Route>\n            <Route path={`${url}/group`}>\n              <GroupStats />\n            </Route>\n            <Route path={`${url}/course`}>\n              <CourseStats />\n            </Route>\n            <Route path={`${url}/forum`}>\n              <ForumStats />\n            </Route>\n            <Route path={`${url}/event`}>\n              <EventStats />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </Router>\n  );\n}\n","import React, { Component } from \"react\";\n\nexport default class ProfileFeedViewBlock extends Component {\n  state = {\n    showComments: false,\n  };\n\n  constructor(props) {\n    super(props);\n    this.displayComments = this.displayComments.bind(this);\n  }\n\n  displayComments(comm, i, commDate) {\n    if (comm.Text) {\n      return (\n        <div key={i}>\n          <p>{comm.Commenter}</p>\n          <p>{comm.Text}</p>\n          <p>{commDate}</p>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n  render() {\n    const { post } = this.props;\n    const date = post.Date.toDate().toString().substr(4, 11);\n    return (\n      <div>\n        <p>Jesus Jimenez Santos</p>\n        <p>{post.Text}</p>\n        <p>{date}</p>\n        <button\n          onClick={() => {\n            this.setState({ showComments: !this.state.showComments });\n          }}\n        >\n          Comments\n        </button>\n        {this.state.showComments\n          ? post.commentData.map((comm, i) => {\n              const commDate = comm.Date.toDate().toString().substr(4, 11);\n              return this.displayComments(comm, i, commDate);\n            })\n          : null}\n      </div>\n    );\n  }\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { teachers_Collection } from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\nimport {\n  storeProfileFeedPostDataAction,\n  storeProfileFeedSinglePostDataAction,\n} from \"../../../redux/actions\";\n\nimport ProfileFeedViewBlock from \"./ProfileFeedViewBlock\";\n\nexport default function ProfileFeedView() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  //   States\n  const feedDataState = useSelector(\n    (state) => state.storeProfileFeedPostDataReducer\n  );\n\n  const getProfileFeedData = () => {\n    const feed_Collection = teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"Feed\")\n      .collection(\"Posts\");\n    feed_Collection\n      .orderBy(\"Date\", \"desc\")\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        const feedPostArray = [];\n        data.forEach((d, i) => {\n          const comments_Collection = teachers_Collection\n            .doc(teacherAuthID)\n            .collection(\"Profile\")\n            .doc(\"Feed\")\n            .collection(\"Posts\")\n            .doc(d.id)\n            .collection(\"Comments\");\n          comments_Collection\n            .orderBy(\"Date\", \"desc\")\n            .get()\n            .then((snapshot) => {\n              const commentData = firebaseLooper(snapshot);\n              d = {\n                ...d,\n                commentData,\n              };\n              feedPostArray.push(d);\n              // Dispatch feedPostArray\n              if (i === data.length - 1) {\n                dispatch(storeProfileFeedPostDataAction(feedPostArray));\n              }\n            })\n            .catch((err) => console.log(err));\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const storeSinglePost = (event) => {\n    const postID = event.target.getAttribute(\"id\");\n    feedDataState.forEach((post) => {\n      if (post.id === postID) {\n        dispatch(storeProfileFeedSinglePostDataAction(post));\n        history.push(\"/teacher-profile/edit-feed\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n    getProfileFeedData();\n  }, []);\n\n  return (\n    <div>\n      <div>\n        <button onClick={() => history.push(\"/teacher-profile/new-feed\")}>\n          Create New Post\n        </button>\n      </div>\n      <hr />\n      <div>\n        {feedDataState.map((post, i) => {\n          return (\n            <div key={i}>\n              <button id={post.id} onClick={storeSinglePost}>\n                Edit\n              </button>\n              <ProfileFeedViewBlock post={post} />\n              <br />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","\n\nimport firebase from '../utils/firebase';\n\nexport default function GetToday() {\n    return firebase.firestore.Timestamp.fromDate(new Date());\n}\n\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { storeProfileFeedPostDataAction } from \"../../../redux/actions\";\nimport { teachers_Collection } from \"../../../utils/firebase\";\nimport GetToday from \"../../GetToday\";\n\nexport default function ProfileFeedEdit() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  //   States\n  const singlePostState = useSelector(\n    (state) => state.storeProfileFeedSinglePostDataReducer\n  );\n  const allPostsState = useSelector(\n    (state) => state.storeProfileFeedPostDataReducer\n  );\n\n  const saveSinglePost = () => {\n    const postText = document.querySelector(\"#tbPostText\").value;\n    const postObj = {\n      ...singlePostState,\n      Text: postText,\n      Date: GetToday(),\n    };\n    // Save to DB\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"Feed\")\n      .collection(\"Posts\")\n      .doc(singlePostState.id)\n      .set({\n        Likes: singlePostState.Likes,\n        Text: postText,\n        Date: GetToday(),\n      })\n      .catch((err) => console.log(err));\n\n    allPostsState.forEach((post) => {\n      if (post.id === singlePostState.id) {\n        post = {\n          ...postObj,\n        };\n        dispatch(storeProfileFeedPostDataAction(allPostsState));\n      }\n    });\n\n    history.push(\"/teacher-profile/feed\");\n  };\n\n  const removeSinglePost = () => {\n    const postID = singlePostState.id;\n\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"Feed\")\n      .collection(\"Posts\")\n      .doc(postID)\n      .delete()\n      .catch((err) => console.log(err));\n\n    const all = [...allPostsState];\n    const newArray = all.filter((post) => post.id !== postID);\n\n    dispatch(storeProfileFeedPostDataAction(newArray));\n    history.push(\"/teacher-profile/feed\");\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n  }, []);\n\n  return (\n    <div>\n      <button\n        onClick={() => {\n          history.push(\"/teacher-profile/feed\");\n        }}\n      >\n        Back to Feed\n      </button>\n\n      <div>\n        <h1>Edit Post</h1>\n        <label>Post</label>\n        <br />\n        <input\n          id=\"tbPostText\"\n          type=\"text\"\n          defaultValue={singlePostState.Text}\n        />\n      </div>\n      <button onClick={saveSinglePost}>Save</button>\n      <button onClick={removeSinglePost}>Remove</button>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { storeProfileFeedPostDataAction } from \"../../../redux/actions\";\nimport { teachers_Collection } from \"../../../utils/firebase\";\nimport GetToday from \"../../GetToday\";\n\nexport default function ProfileFeedCreate() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const allPostsState = useSelector(\n    (state) => state.storeProfileFeedPostDataReducer\n  );\n\n  const savePost = () => {\n    const postText = document.querySelector(\"#tbPostText\").value;\n    let rand1 = Math.random().toString(36).substring(3);\n    let rand2 = Math.random().toString(36).substring(3);\n    const postID = `Post${rand1}${rand2}`;\n    const commentID = `Comment${rand1}${rand2}`;\n\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"Feed\")\n      .collection(\"Posts\")\n      .doc(postID)\n      .set({\n        Date: GetToday(),\n        Text: postText,\n        Likes: 0,\n      })\n      .catch((err) => console.log(err));\n\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"Feed\")\n      .collection(\"Posts\")\n      .doc(postID)\n      .collection(\"Comments\")\n      .doc(commentID)\n      .set({\n        Date: GetToday(),\n        Text: \"\",\n        Commenter: \"\",\n      })\n      .catch((err) => console.log(err));\n\n    //   Dispatch\n    const allPosts = [...allPostsState];\n    \n    allPosts.push({\n      Text: postText,\n      Date: GetToday(),\n      Likes: 0,\n      commentData: []\n    });\n\n    console.log(allPosts);\n\n    dispatch(storeProfileFeedPostDataAction(allPosts));\n\n    history.push(\"/teacher-profile/feed\");\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n  }, []);\n  return (\n    <div>\n      <h1>Create Post</h1>\n      <button onClick={() => history.push(\"/teacher-profile/feed\")}>\n        Back to Feed\n      </button>\n\n      <div>\n        <label>Post</label>\n        <br />\n        <input id=\"tbPostText\" type=\"text\" placeholder=\"Enter post here...\" />\n        <button onClick={savePost}>Post</button>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  storeProfileAboutDataAction,\n  storeProfileExperienceDataAction,\n} from \"../../../redux/actions\";\nimport { teachers_Collection } from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nexport default function ProfileAboutView() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const about = useSelector((state) => state.storeProfileAboutDataReducer);\n  const exp = useSelector((state) => state.storeProfileExperienceDataReducer);\n\n  const getAllAboutData = () => {\n    const profile_Collection = teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\");\n    profile_Collection\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        data.forEach((d) => {\n          if (d.id === \"About\") {\n            dispatch(storeProfileAboutDataAction(d));\n          }\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const getAllExperienceData = () => {\n    const experience_Collection = teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"Experience\")\n      .collection(\"ExpBlocks\");\n    experience_Collection\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        dispatch(storeProfileExperienceDataAction(data));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n    window.scrollTo(0, 0);\n    getAllAboutData();\n    getAllExperienceData();\n  }, []);\n  return (\n    <div>\n      <div>\n        <button onClick={() => history.push(\"/teacher-profile/edit-about\")}>\n          Edit\n        </button>\n      </div>\n      <div>\n        <h2>About</h2>\n        <p>{about.About}</p>\n      </div>\n      <hr />\n      <div>\n        <h2>Experience</h2>\n        {exp.map((ex, i) => {\n          return (\n            <div key={i}>\n              <h3>{ex.Institution}</h3>\n              <p>{ex.Desc}</p>\n              <p>Started: {ex.Start.toDate().toString().substr(4, 11)}</p>\n              <p>Ended: {ex.End.toDate().toString().substr(4, 11)}</p>\n            </div>\n          );\n        })}\n      </div>\n      <hr />\n      <div>\n        <h2>Personal</h2>\n        <p>Email: {about.Email}</p>\n        <p>Location: {about.Location}</p>\n        <p>Instruments:</p>\n        {about.Instruments ? (\n          <div>\n            <ul>\n              {about.Instruments.map((ins, i) => {\n                return <li key={i}>{ins}</li>;\n              })}\n            </ul>\n            <p>Joined: {about.Joined.toDate().toString().substr(4, 11)}</p>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  toggleNewExperienceFormAction,\n  storeProfileExperienceDataAction,\n  storeProfileAboutDataAction,\n  toggleNewInstrumentFormAction,\n} from \"../../../redux/actions\";\nimport { teachers_Collection } from \"../../../utils/firebase\";\nimport firebase from \"../../../utils/firebase\";\n\nexport default function ProfileAboutEdit() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const about = useSelector((state) => state.storeProfileAboutDataReducer);\n  const exp = useSelector((state) => state.storeProfileExperienceDataReducer);\n\n  const toggleExpState = useSelector(\n    (state) => state.toggleNewExperienceFormReducer\n  );\n  const toggleInsState = useSelector(\n    (state) => state.toggleNewInstrumentFormReducer\n  );\n\n  const saveAllChanges = () => {\n    // About Section\n    const aboutText = document.querySelector(\"#taAboutDescText\").value;\n\n    // Experience Section\n    const newExperienceArray = [];\n\n    const expCount = exp.length;\n    for (let i = 0; i < expCount; i = i + 1) {\n      const tbInstitution = document.querySelector(`#tbExpInstText${i}`).value;\n      const tbDesc = document.querySelector(`#taExpDescText${i}`).value;\n      const daStarted = document.querySelector(`#dtStarted${i}`).value;\n      const daEnded = document.querySelector(`#dtEnded${i}`).value;\n\n      const startedSplit = daStarted.split(\"-\");\n      const endedSplit = daEnded.split(\"-\");\n\n      const startedDate = firebase.firestore.Timestamp.fromDate(\n        new Date(`${startedSplit[1]} ${startedSplit[2]}, ${startedSplit[0]}`)\n      );\n      const endedDate = firebase.firestore.Timestamp.fromDate(\n        new Date(`${endedSplit[1]} ${endedSplit[2]}, ${endedSplit[0]}`)\n      );\n\n      newExperienceArray.push({\n        id: exp[i].id,\n        Institution: tbInstitution,\n        Desc: tbDesc,\n        Start: startedDate,\n        End: endedDate,\n      });\n    }\n\n\n    // Personal\n    const email = document.querySelector(\"#tbEmailText\").value;\n    const location = document.querySelector(\"#tbLocationText\").value;\n\n    const insArray = [];\n    const insCount = about.Instruments.length;\n    for (let i = 0; i < insCount; i = i + 1) {\n      const tbInstrument = document.querySelector(`#tbInstruments${i}`).value;\n\n      insArray.push(tbInstrument);\n    }\n\n    // Save to DB\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"About\")\n      .update({\n        About: aboutText,\n        Email: email,\n        Location: location,\n        Instruments: insArray,\n        Joined: about.Joined,\n      })\n      .catch((err) => console.log(err));\n\n    newExperienceArray.forEach((ex) => {\n      teachers_Collection\n        .doc(teacherAuthID)\n        .collection(\"Profile\")\n        .doc(\"Experience\")\n        .collection(\"ExpBlocks\")\n        .doc(ex.id)\n        .update({\n          Institution: ex.Institution,\n          Desc: ex.Desc,\n          Start: ex.Start,\n          End: ex.End,\n        })\n        .catch((err) => console.log(err));\n    });\n\n    // Dispatch\n    const tempAbout = {\n      About: aboutText,\n      Email: email,\n      Location: location,\n      Instruments: insArray,\n      Joined: about.Joined,\n    };\n\n    const tempExp = [...newExperienceArray];\n\n    dispatch(storeProfileAboutDataAction(tempAbout));\n    dispatch(storeProfileExperienceDataAction(tempExp));\n\n    history.push(\"/teacher-profile/about\");\n  };\n\n  const applyNewExperience = () => {\n    let rand1 = Math.random().toString(36).substring(3);\n    let rand2 = Math.random().toString(36).substring(3);\n    const expBlockID = `ExpBlock${rand1}${rand2}`;\n\n    const institution = document.querySelector(\"#tbInstText\").value;\n    const desc = document.querySelector(\"#tbDescText\").value;\n    const started = document.querySelector(\"#daStartDate\").value;\n    const ended = document.querySelector(\"#daEndDate\").value;\n\n    const startedSplit = started.split(\"-\");\n    const endedSplit = ended.split(\"-\");\n\n    const startedDate = firebase.firestore.Timestamp.fromDate(\n      new Date(`${startedSplit[1]} ${startedSplit[2]}, ${startedSplit[0]}`)\n    );\n    const endedDate = firebase.firestore.Timestamp.fromDate(\n      new Date(`${endedSplit[1]} ${endedSplit[2]}, ${endedSplit[0]}`)\n    );\n\n    // Save to database\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"Experience\")\n      .collection(\"ExpBlocks\")\n      .doc(expBlockID)\n      .set({\n        Institution: institution,\n        Desc: desc,\n        Start: startedDate,\n        End: endedDate,\n      })\n      .catch((err) => console.log(err));\n\n    // dispatch new exp\n    const allExp = [...exp];\n\n    allExp.push({\n      id: expBlockID,\n      Institution: institution,\n      Desc: desc,\n      Start: startedDate,\n      End: endedDate,\n    });\n\n    console.log(allExp);\n\n    dispatch(storeProfileExperienceDataAction(allExp));\n    dispatch(toggleNewExperienceFormAction());\n  };\n\n  const removeExperience = (event) => {\n    const exID = event.target.getAttribute(\"id\");\n\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"Experience\")\n      .collection(\"ExpBlocks\")\n      .doc(exID)\n      .delete()\n      .catch((err) => console.log(err));\n\n    const allExp = [...exp];\n\n    const filtered = allExp.filter((ex) => ex.id !== exID);\n\n    dispatch(storeProfileExperienceDataAction(filtered));\n  };\n\n  const removeInstrument = (event) => {\n    const instrument = event.target.getAttribute(\"id\");\n    const allInstruments = [...about.Instruments];\n\n    const newList = allInstruments.filter((ins) => ins !== instrument);\n\n    const newObj = {\n      ...about,\n      Instruments: newList,\n    };\n\n    // Remove from DB\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"About\")\n      .update({\n        Instruments: firebase.firestore.FieldValue.arrayRemove(instrument),\n      })\n      .catch((err) => console.log(err));\n\n    dispatch(storeProfileAboutDataAction(newObj));\n  };\n\n  const addInstrument = () => {\n    const newIns = document.querySelector(\"#tbNewInsText\").value;\n\n    // Add to DB\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"About\")\n      .update({\n        Instruments: firebase.firestore.FieldValue.arrayUnion(newIns),\n      })\n      .catch((err) => console.log(err));\n\n    // dispatch\n    const newInstruments = [...about.Instruments];\n    newInstruments.push(newIns);\n\n    const newObj = {\n      ...about,\n      Instruments: newInstruments,\n    };\n\n    dispatch(storeProfileAboutDataAction(newObj));\n    dispatch(toggleNewInstrumentFormAction());\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n  }, []);\n  return (\n    <div>\n      <div>\n        <button onClick={() => history.push(\"/teacher-profile/about\")}>\n          Back to About\n        </button>\n      </div>\n\n      <div></div>\n      <div>\n        <h2>About</h2>\n        <textarea id=\"taAboutDescText\" defaultValue={about.About}></textarea>\n      </div>\n      <hr />\n      <div>\n        <h2>Experience</h2>\n        {exp.map((ex, i) => {\n          const start = `${ex.Start.toDate().getFullYear()}-${\n            ex.Start.toDate().getMonth() + 1 < 10 ? \"0\" : \"\"\n          }${ex.Start.toDate().getMonth() + 1}-${\n            ex.Start.toDate().getDate() < 10 ? \"0\" : \"\"\n          }${ex.Start.toDate().getDate()}`;\n\n          const end = `${ex.End.toDate().getFullYear()}-${\n            ex.End.toDate().getMonth() + 1 < 10 ? \"0\" : \"\"\n          }${ex.End.toDate().getMonth() + 1}-${\n            ex.End.toDate().getDate() < 10 ? \"0\" : \"\"\n          }${ex.End.toDate().getDate()}`;\n\n          return (\n            <div key={i}>\n              <h4>Institution</h4>\n              <input\n                id={`tbExpInstText${i}`}\n                type=\"text\"\n                defaultValue={ex.Institution}\n              />\n              <h4>Description</h4>\n              <textarea\n                id={`taExpDescText${i}`}\n                defaultValue={ex.Desc}\n              ></textarea>\n              <h4>Started</h4>\n              <input id={`dtStarted${i}`} type=\"date\" defaultValue={start} />\n              <h4>Ended</h4>\n              <input id={`dtEnded${i}`} type=\"date\" defaultValue={end} />\n              <button id={ex.id} onClick={removeExperience}>\n                Remove\n              </button>\n              <hr />\n            </div>\n          );\n        })}\n\n        {toggleExpState ? (\n          <div>\n            <button\n              onClick={() => {\n                dispatch(toggleNewExperienceFormAction());\n              }}\n            >\n              Cancel\n            </button>\n            {/* Form */}\n            <div>\n              <h3>Institution</h3>\n              <input id=\"tbInstText\" type=\"text\" placeholder=\"Institution\" />\n            </div>\n            <div>\n              <h3>Description</h3>\n              <textarea id=\"tbDescText\" placeholder=\"Description\"></textarea>\n            </div>\n            <div>\n              <h3>Started: </h3>\n              <input id=\"daStartDate\" type=\"date\" />\n            </div>\n            <div>\n              <h3>Ended: </h3>\n              <input id=\"daEndDate\" type=\"date\" />\n            </div>\n            <div>\n              <button onClick={applyNewExperience}>Apply</button>\n            </div>\n          </div>\n        ) : (\n          <button onClick={() => dispatch(toggleNewExperienceFormAction())}>\n            +\n          </button>\n        )}\n      </div>\n      <div>\n        <h2>Personal</h2>\n        <p>Email:</p>\n        <input id=\"tbEmailText\" type=\"text\" defaultValue={about.Email} />\n        <p>Location:</p>\n        <input id=\"tbLocationText\" type=\"text\" defaultValue={about.Location} />\n        <p>Instruments: </p>\n        {about.Instruments\n          ? about.Instruments.map((ins, i) => {\n              return (\n                <div key={i}>\n                  <input\n                    id={`tbInstruments${i}`}\n                    type=\"text\"\n                    defaultValue={ins}\n                  />\n                  <button id={ins} onClick={removeInstrument}>\n                    -\n                  </button>\n                </div>\n              );\n            })\n          : null}\n        {about.Joined ? (\n          <div>\n            {/* Toggle Instrument Add */}\n            {toggleInsState ? (\n              <div>\n                <div>\n                  <button\n                    onClick={() => {\n                      dispatch(toggleNewInstrumentFormAction());\n                    }}\n                  >\n                    Cancel\n                  </button>\n                </div>\n                <h3>Instrument</h3>\n                <input id=\"tbNewInsText\" type=\"text\" placeholder=\"Instrument\" />\n                <div>\n                  <button onClick={addInstrument}>Apply</button>\n                </div>\n              </div>\n            ) : (\n              <button\n                onClick={() => {\n                  dispatch(toggleNewInstrumentFormAction());\n                }}\n              >\n                +\n              </button>\n            )}\n\n            <p>Joined: {about.Joined.toDate().toString().substr(4, 11)}</p>\n          </div>\n        ) : null}\n      </div>\n      <button onClick={saveAllChanges}>Save All Changes</button>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { teachers_Collection } from \"../../../utils/firebase\";\nimport {\n  storeAwardListAction,\n  storeCertListAction,\n} from \"../../../redux/actions\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nexport default function ProfileAwardsView() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const awards = useSelector((state) => state.storeAwardListReducer);\n  const certs = useSelector((state) => state.storeCertListReducer);\n\n  const getAllAwards = () => {\n    const awards_Collection = teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"Awards\")\n      .collection(\"AwardList\");\n    const cert_Collection = teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"Awards\")\n      .collection(\"CertificationList\");\n\n    awards_Collection\n      .get()\n      .then((snapshot) => {\n        const awardData = firebaseLooper(snapshot);\n        dispatch(storeAwardListAction(awardData));\n      })\n      .catch((err) => console.log(err));\n\n    cert_Collection\n      .get()\n      .then((snapshot) => {\n        const certData = firebaseLooper(snapshot);\n        dispatch(storeCertListAction(certData));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n    getAllAwards();\n  }, []);\n  return (\n    <div>\n      <div>\n        <button\n          onClick={() => {\n            history.push(\"/teacher-profile/edit-awards\");\n          }}\n        >\n          Edit\n        </button>\n      </div>\n      <div>\n        <h2>Awards</h2>\n        {awards.map((award, i) => {\n          return (\n            <div key={i}>\n              <h3>{award.Name}</h3>\n              <p>Location: {award.Location}</p>\n              <p>Date: {award.Date.toDate().toString().substr(4, 11)}</p>\n              <p>Description: {award.Desc}</p>\n            </div>\n          );\n        })}\n      </div>\n      <div>\n        <h2>Certifications</h2>\n        {certs.map((cert, i) => {\n          return (\n            <div key={i}>\n              <h3>{cert.Name}</h3>\n              <p>Location: {cert.Location}</p>\n              <p>Date: {cert.Date.toDate().toString().substr(4, 11)}</p>\n              <p>Description: {cert.Desc}</p>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","export default function InputDateFormatter(firebaseDate) {\n  const date = `${firebaseDate.toDate().getFullYear()}-${\n    firebaseDate.toDate().getMonth() + 1 < 10 ? \"0\" : \"\"\n  }${firebaseDate.toDate().getMonth() + 1}-${\n    firebaseDate.toDate().getDate() < 10 ? \"0\" : \"\"\n  }${firebaseDate.toDate().getDate()}`;\n\n  return date;\n}\n","export default function RandomString() {\n  let r = Math.random().toString(36).substring(3);\n  return r;\n}\n","import firebase from \"../utils/firebase\";\n\nexport default function FirebaseDate(dateInput) {\n  const dateSplit = dateInput.split(\"-\");\n\n  const date = firebase.firestore.Timestamp.fromDate(\n    new Date(`${dateSplit[1]} ${dateSplit[2]}, ${dateSplit[0]}`)\n  );\n\n\n  return date;\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  storeAwardListAction,\n  storeCertListAction,\n  toggleNewAwardFormAction,\n  toggleNewCertFormAction,\n} from \"../../../redux/actions\";\nimport { teachers_Collection } from \"../../../utils/firebase\";\n\nimport InputDateFormatter from \"../../InputDateFormatter\";\nimport RandomString from \"../../RandomString\";\nimport FirebaseDate from \"../../FirebaseDate\";\n\nexport default function ProfileAwardsEdit() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const awards = useSelector((state) => state.storeAwardListReducer);\n  const certs = useSelector((state) => state.storeCertListReducer);\n\n  const toggleAwardForm = useSelector(\n    (state) => state.toggleNewAwardFormReducer\n  );\n  const toggleCertForm = useSelector((state) => state.toggleNewCertFormReducer);\n\n  const applyNewAward = () => {\n    const awardName = document.querySelector(\"#tbAwardNameText\").value;\n    const awardLocation = document.querySelector(\"#tbAwardLocationText\").value;\n    const awardDate = document.querySelector(\"#daAwardDateNew\").value;\n    const awardDesc = document.querySelector(\"#taAwardDescText\").value;\n\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const awardID = `Award${rand1}${rand2}`;\n\n    // Save to DB\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"Awards\")\n      .collection(\"AwardList\")\n      .doc(awardID)\n      .set({\n        Name: awardName,\n        Location: awardLocation,\n        Date: FirebaseDate(awardDate),\n        Desc: awardDesc,\n      })\n      .catch((err) => console.log(err));\n\n    // Dispatch\n    const allAwards = [...awards];\n    allAwards.push({\n      id: awardID,\n      Name: awardName,\n      Location: awardLocation,\n      Date: FirebaseDate(awardDate),\n      Desc: awardDesc,\n    });\n\n    dispatch(storeAwardListAction(allAwards));\n    dispatch(toggleNewAwardFormAction());\n  };\n\n  const applyNewCert = () => {\n    const certName = document.querySelector(\"#tbCertNameText\").value;\n    const certLocation = document.querySelector(\"#tbCertLocationText\").value;\n    const certDate = document.querySelector(\"#daCertDateNew\").value;\n    const certDesc = document.querySelector(\"#taCertDescText\").value;\n\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const certID = `Cert${rand1}${rand2}`;\n\n    // Save to DB\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"Awards\")\n      .collection(\"CertificationList\")\n      .doc(certID)\n      .set({\n        Name: certName,\n        Location: certLocation,\n        Date: FirebaseDate(certDate),\n        Desc: certDesc,\n      })\n      .catch((err) => console.log(err));\n\n    // Dispatch\n    const allCerts = [...certs];\n    allCerts.push({\n      id: certID,\n      Name: certName,\n      Location: certLocation,\n      Date: FirebaseDate(certDate),\n      Desc: certDesc,\n    });\n\n    dispatch(storeCertListAction(allCerts));\n    dispatch(toggleNewCertFormAction());\n  };\n\n  const removeAward = (event) => {\n    const awardID = event.target.getAttribute(\"id\");\n\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"Awards\")\n      .collection(\"AwardList\")\n      .doc(awardID)\n      .delete()\n      .catch((err) => console.log(err));\n\n    const allAwards = [...awards];\n    const filteredAwards = allAwards.filter((a) => a.id !== awardID);\n\n    dispatch(storeAwardListAction(filteredAwards));\n  };\n\n  const removeCert = (event) => {\n    const certID = event.target.getAttribute(\"id\");\n\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"Awards\")\n      .collection(\"CertificationList\")\n      .doc(certID)\n      .delete()\n      .catch((err) => console.log(err));\n\n    const allCerts = [...certs];\n    const filteredCerts = allCerts.filter((c) => c.id !== certID);\n\n    dispatch(storeCertListAction(filteredCerts));\n  };\n\n  const saveAllChanges = () => {\n    const allAwards = [];\n    const allCerts = [];\n\n    const awardCount = awards.length;\n    const certCount = certs.length;\n\n    // Save to DB\n    for (let i = 0; i < awardCount; i = i + 1) {\n      const tempObj = {\n        Name: document.querySelector(`#tbAwardName${i}`).value,\n        Location: document.querySelector(`#tbAwardLocation${i}`).value,\n        Date: FirebaseDate(document.querySelector(`#daAwardDate${i}`).value),\n        Desc: document.querySelector(`#taAwardDesc${i}`).value,\n      };\n\n      allAwards.push(tempObj);\n    }\n\n    console.log(allAwards);\n\n    for (let i = 0; i < certCount; i = i + 1) {\n      const tempObj = {\n        Name: document.querySelector(`#tbCertName${i}`).value,\n        Location: document.querySelector(`#tbCertLocation${i}`).value,\n        Date: FirebaseDate(document.querySelector(`#daCertDate${i}`).value),\n        Desc: document.querySelector(`#taCertDesc${i}`).value,\n      };\n\n      allCerts.push(tempObj);\n    }\n\n    allAwards.forEach((a, i) => {\n      teachers_Collection\n        .doc(teacherAuthID)\n        .collection(\"Profile\")\n        .doc(\"Awards\")\n        .collection(\"AwardList\")\n        .doc(awards[i].id)\n        .update({\n          Name: a.Name,\n          Location: a.Location,\n          Date: a.Date,\n          Desc: a.Desc,\n        })\n        .catch((err) => console.log(err));\n    });\n\n    allCerts.forEach((c, i) => {\n      teachers_Collection\n        .doc(teacherAuthID)\n        .collection(\"Profile\")\n        .doc(\"Awards\")\n        .collection(\"CertificationList\")\n        .doc(certs[i].id)\n        .update({\n          Name: c.Name,\n          Location: c.Location,\n          Date: c.Date,\n          Desc: c.Desc,\n        })\n        .catch((err) => console.log(err));\n    });\n\n    // Dispatch\n    dispatch(storeAwardListAction(allAwards));\n    dispatch(storeCertListAction(allCerts));\n\n    history.push(\"/teacher-profile/awards\");\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n  }, []);\n  return (\n    <div>\n      <div>\n        <button\n          onClick={() => {\n            history.push(\"/teacher-profile/awards\");\n          }}\n        >\n          Back to Awards\n        </button>\n      </div>\n      <div>\n        <h2>Awards</h2>\n        {awards.map((award, i) => {\n          return (\n            <div key={i}>\n              <div>\n                <p>Award Name:</p>\n                <input\n                  id={`tbAwardName${i}`}\n                  type=\"text\"\n                  defaultValue={award.Name}\n                />\n              </div>\n              <div>\n                <p>Location: </p>\n                <input\n                  id={`tbAwardLocation${i}`}\n                  type=\"text\"\n                  defaultValue={award.Location}\n                />\n              </div>\n              <div>\n                <p>Date Received:</p>\n                <input\n                  id={`daAwardDate${i}`}\n                  type=\"date\"\n                  defaultValue={InputDateFormatter(award.Date)}\n                />\n              </div>\n              <div>\n                <p>Description:</p>\n                <textarea\n                  id={`taAwardDesc${i}`}\n                  defaultValue={award.Desc}\n                ></textarea>\n              </div>\n              <button id={award.id} onClick={removeAward}>\n                Remove\n              </button>\n              <hr />\n            </div>\n          );\n        })}\n\n        {/* New Award Form */}\n        {toggleAwardForm ? (\n          <div>\n            {/* Award Name */}\n            <div>\n              <p>Award Name:</p>\n              <input\n                id={`tbAwardNameText`}\n                type=\"text\"\n                placeholder=\"Award Name\"\n              />\n            </div>\n            {/* Award Location */}\n            <div>\n              <p>Location:</p>\n              <input\n                id={`tbAwardLocationText`}\n                type=\"text\"\n                placeholder=\"Location\"\n              />\n            </div>\n            {/* Award Date */}\n            <div>\n              <p>Date Received:</p>\n              <input id={`daAwardDateNew`} type=\"date\" />\n            </div>\n            {/* Award Desc */}\n            <div>\n              <p>Description:</p>\n              <textarea id={`taAwardDescText`} placeholder=\"Description\" />\n            </div>\n            <button onClick={applyNewAward}>Apply</button>\n            <button\n              onClick={() => {\n                dispatch(toggleNewAwardFormAction());\n              }}\n            >\n              Cancel\n            </button>\n          </div>\n        ) : (\n          <button\n            onClick={() => {\n              dispatch(toggleNewAwardFormAction());\n            }}\n          >\n            +\n          </button>\n        )}\n      </div>\n      <div>\n        <h2>Certifications</h2>\n        {certs.map((cert, i) => {\n          return (\n            <div key={i}>\n              <div>\n                <p>Certification Name:</p>\n                <input\n                  id={`tbCertName${i}`}\n                  type=\"text\"\n                  defaultValue={cert.Name}\n                />\n              </div>\n              <div>\n                <p>Location:</p>\n                <input\n                  id={`tbCertLocation${i}`}\n                  type=\"text\"\n                  defaultValue={cert.Location}\n                />\n              </div>\n              <div>\n                <p>Date Received:</p>\n                <input\n                  id={`daCertDate${i}`}\n                  type=\"date\"\n                  defaultValue={InputDateFormatter(cert.Date)}\n                />\n              </div>\n              <div>\n                <p>Description:</p>\n                <textarea\n                  id={`taCertDesc${i}`}\n                  defaultValue={cert.Desc}\n                ></textarea>\n              </div>\n              <button id={cert.id} onClick={removeCert}>\n                Remove\n              </button>\n              <hr />\n            </div>\n          );\n        })}\n\n        {/* New Cert Form */}\n        {toggleCertForm ? (\n          <div>\n            {/* Cert Name */}\n            <div>\n              <p>Certification Name:</p>\n              <input\n                id={`tbCertNameText`}\n                type=\"text\"\n                placeholder=\"Certification Name\"\n              />\n            </div>\n            {/* Cert Location */}\n            <div>\n              <p>Location:</p>\n              <input\n                id={`tbCertLocationText`}\n                type=\"text\"\n                placeholder=\"Location\"\n              />\n            </div>\n            {/* Cert Date */}\n            <div>\n              <p>Date Received:</p>\n              <input id={`daCertDateNew`} type=\"date\" />\n            </div>\n            {/* Date Desc */}\n            <div>\n              <p>Description:</p>\n              <textarea id={`taCertDescText`} placeholder=\"Description\" />\n            </div>\n            <button onClick={applyNewCert}>Apply</button>\n            <button\n              onClick={() => {\n                dispatch(toggleNewCertFormAction());\n              }}\n            >\n              Cancel\n            </button>\n          </div>\n        ) : (\n          <button\n            onClick={() => {\n              dispatch(toggleNewCertFormAction());\n            }}\n          >\n            +\n          </button>\n        )}\n      </div>\n      <hr />\n      <button onClick={saveAllChanges}>Save All Changes</button>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function ProfileGallery() {\n    return (\n        <div>\n            <h1>Profile Gallery</h1>\n        </div>\n    )\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { teachers_Collection, users_Collection } from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\nimport { storeReviewListAction } from \"../../../redux/actions\";\n\nexport default function ProfileReviewsView() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const reviews = useSelector((state) => state.storeReviewListReducer);\n\n  const getAllReviews = () => {\n    let newReviewArray = [];\n    const reviews_Collection = teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Profile\")\n      .doc(\"Reviews\")\n      .collection(\"ReviewBlocks\");\n    reviews_Collection\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n\n        data.forEach((d) => {\n          let fullName = \"\";\n\n          users_Collection\n            .where(\"AuthID\", \"==\", d.Reviewer)\n            .get()\n            .then((snapshot) => {\n              const userData = firebaseLooper(snapshot);\n              fullName = `${userData[0].FirstName} ${userData[0].LastName}`;\n              d = {\n                ...d,\n                FullName: fullName,\n              };\n              newReviewArray.push(d);\n            })\n            .catch((err) => console.log(err));\n        });\n        dispatch(storeReviewListAction(newReviewArray));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n    getAllReviews();\n  }, []);\n  return (\n    <div>\n      {/* Overall Rating */}\n      <div></div>\n\n      {/* Review List */}\n      <div>\n        {reviews.map((rev, i) => {\n          return (\n            <div key={i}>\n              <h3>{rev.Rating}</h3>\n              <p>{rev.FullName}</p>\n              <p>{rev.Review}</p>\n              <p>{rev.Date.toDate().toString().substr(4, 11)}</p>\n              <hr/>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Switch, Route, Link, useRouteMatch } from \"react-router-dom\";\n\nimport TopBar from \"../Dash/TopBar\";\n\nimport ProfileFeedView from \"./ProfileFeedView\";\nimport ProfileFeedEdit from \"./ProfileFeedEdit\";\nimport ProfileFeedCreate from \"./ProfileFeedCreate\";\n\nimport ProfileAboutView from \"./ProfileAboutView\";\nimport ProfileAboutEdit from \"./ProfileAboutEdit\";\n\nimport ProfileAwardsView from \"./ProfileAwardsView\";\nimport ProfileAwardsEdit from \"./ProfileAwardsEdit\";\nimport ProfileGallery from \"./ProfileGallery\";\nimport ProfileReviewsView from \"./ProfileReviewsView\";\n\nimport DashFooter from \"../Dash/DashFooter\";\n\nexport default function ProfileMain() {\n  let { url } = useRouteMatch();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const userDataState = useSelector((state) => state.userDataReducer);\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n  }, []);\n\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      <div>\n        {/* Photos */}\n        <div>\n          <img src=\"\" alt=\"\" />\n          <div>\n            <h2>{`${userDataState.FirstName} ${userDataState.LastName}`}</h2>\n            <p>{userDataState.AccountType}</p>\n          </div>\n        </div>\n        {/* Bottom Nav */}\n        <div>\n          <ul>\n            <Link to={`${url}/feed`}>Feed</Link>\n            <br />\n            <Link to={`${url}/about`}>About</Link>\n            <br />\n            <Link to={`${url}/awards`}>Awards</Link>\n            <br />\n            <Link to={`${url}/gallery`}>Gallery</Link>\n            <br />\n            <Link to={`${url}/reviews`}>Reviews</Link>\n            <br />\n          </ul>\n        </div>\n        {/* Content */}\n        <div>\n          {/* ********************** */}\n\n          {/* Switch */}\n          <Switch>\n            {/* Feed */}\n            <Route path={`${url}/feed`}>\n              <ProfileFeedView />\n            </Route>\n            <Route path={`${url}/edit-feed`}>\n              <ProfileFeedEdit />\n            </Route>\n            <Route path={`${url}/new-feed`}>\n              <ProfileFeedCreate />\n            </Route>\n            {/* About */}\n            <Route path={`${url}/about`}>\n              <ProfileAboutView />\n            </Route>\n            <Route path={`${url}/edit-about`}>\n              <ProfileAboutEdit />\n            </Route>\n            {/* Awards */}\n            <Route path={`${url}/awards`}>\n              <ProfileAwardsView />\n            </Route>\n            <Route path={`${url}/edit-awards`}>\n              <ProfileAwardsEdit />\n            </Route>\n            {/* Gallery */}\n            <Route path={`${url}/gallery`}>\n              <ProfileGallery />\n            </Route>\n            {/* Reviews */}\n            <Route path={`${url}/reviews`}>\n              <ProfileReviewsView />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  teachers_Collection,\n  students_Collection,\n  studentReqQueue_Collection,\n} from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\nimport {\n  storeTeacherStudentGeneralInfoAction,\n  toggleStudentOverviewAction,\n  toggleSearchUsernameAction,\n  toggleSendRequestButtonAction,\n  storeNewStudentAction,\n  storeSingleStudentInfoAction,\n  storeTeacherStudentLessonsAction,\n  storeTeacherStudentExercisesAction,\n  storeTeacherStudentQuizzesAction,\n  storeTeacherStudentExamsAction,\n} from \"../../../redux/actions\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport DashFooter from \"../Dash/DashFooter\";\n\nimport RandomString from \"../../RandomString\";\n\nexport default function StudentsMain() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // Toggles\n  const toggleStudentOverview = useSelector(\n    (state) => state.toggleStudentOverviewReducer\n  );\n  const toggleSearchUsername = useSelector(\n    (state) => state.toggleSearchUsernameReducer\n  );\n  const toggleSendRequestState = useSelector(\n    (state) => state.toggleSendRequestButtonReducer\n  );\n  // Data\n\n  const students = useSelector(\n    (state) => state.storeTeacherStudentGeneralInfoReducer\n  );\n  const student = useSelector((state) => state.storeSingleStudentInfoReducer);\n  const searchResult = useSelector((state) => state.storeNewStudentReducer);\n\n  const lessons = useSelector(\n    (state) => state.storeTeacherStudentLessonsReducer\n  );\n  const exercises = useSelector(\n    (state) => state.storeTeacherStudentExercisesReducer\n  );\n  const quizzes = useSelector(\n    (state) => state.storeTeacherStudentQuizzesReducer\n  );\n  const exams = useSelector((state) => state.storeTeacherStudentExamsReducer);\n\n  const getAllStudentGeneralInfo = () => {\n    const student_Collection = teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Students\");\n    student_Collection\n      .get()\n      .then((snapshot) => {\n        const studentData = firebaseLooper(snapshot);\n        const studCount = snapshot.size;\n        // You now have student IDs, now get their data from the student table\n        let studentArray = [];\n        let count = 0;\n\n        studentData.forEach((stud) => {\n          students_Collection\n            .where(\"StudentID\", \"==\", stud.id)\n            .get()\n            .then((snapshot2) => {\n              const studData = firebaseLooper(snapshot2);\n              studentArray.push(studData[0]);\n\n              if (studCount - 1 === count) {\n                dispatch(storeTeacherStudentGeneralInfoAction(studentArray));\n              }\n              count = count + 1;\n            })\n            .catch((err) => console.log(err));\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const getSingleStudentInfo = (event) => {\n    const studentID = event.target.getAttribute(\"id\");\n\n    students.forEach((student) => {\n      if (studentID === student.id) {\n        dispatch(storeSingleStudentInfoAction(student));\n        dispatch(toggleStudentOverviewAction());\n        getStudentLessons(student.id);\n        getStudentExercises(student.id);\n        getStudentQuizzes(student.id);\n        getStudentExams(student.id);\n      }\n    });\n  };\n\n  const getStudentLessons = (studentID) => {\n    const lessons_Collection = students_Collection\n      .doc(studentID)\n      .collection(\"Lessons\");\n    lessons_Collection\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        dispatch(storeTeacherStudentLessonsAction(data));\n      })\n      .catch((err) => console.log(err));\n  };\n  const getStudentExercises = (studentID) => {\n    const exercises_Collection = students_Collection\n      .doc(studentID)\n      .collection(\"Exercises\");\n    exercises_Collection\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        dispatch(storeTeacherStudentExercisesAction(data));\n      })\n      .catch((err) => console.log(err));\n  };\n  const getStudentQuizzes = (studentID) => {\n    const quizzes_Collection = students_Collection\n      .doc(studentID)\n      .collection(\"Quizzes\");\n\n    quizzes_Collection\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        dispatch(storeTeacherStudentQuizzesAction(data));\n      })\n      .catch((err) => console.log(err));\n  };\n  const getStudentExams = (studentID) => {\n    const exams_Collection = students_Collection\n      .doc(studentID)\n      .collection(\"Exams\");\n\n    exams_Collection\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        dispatch(storeTeacherStudentExamsAction(data));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleNewStudent = () => {\n    // Hide Send Request button if necessary\n    if (toggleSendRequestState) {\n      dispatch(toggleSendRequestButtonAction());\n    }\n\n    const username = document.querySelector(\"#tbSearchUsername\").value;\n\n    // Get all Students\n    teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Students\")\n      .get()\n      .then((snapshot) => {\n        const studentData = firebaseLooper(snapshot);\n\n        studentData.forEach((student) => {\n          if (student.id === username) {\n            dispatch(storeNewStudentAction(\"Student is already enrolled.\"));\n          }\n        });\n      })\n      .catch((err) => console.log(err));\n\n    // Get all Queues\n    studentReqQueue_Collection\n      .get()\n      .then((snapshot) => {\n        const queueData = firebaseLooper(snapshot);\n        let found = false;\n        queueData.forEach((que) => {\n          if (que.StudentID === username) {\n            found = true;\n            dispatch(storeNewStudentAction(\"Request has been sent.\"));\n          }\n        });\n        if (!found) {\n          let doubleFound = false;\n          teachers_Collection\n            .doc(teacherAuthID)\n            .collection(\"Students\")\n            .get()\n            .then((snapshot) => {\n              const studentList = firebaseLooper(snapshot);\n              studentList.forEach((s) => {\n                if (s.id === username) {\n                  doubleFound = true;\n                }\n              });\n\n              if (!doubleFound) {\n                students_Collection\n                  .get()\n                  .then((snapshot) => {\n                    const studs = firebaseLooper(snapshot);\n                    let valid = false;\n                    studs.forEach((stud) => {\n                      if (stud.id === username) {\n                        valid = true;\n                        const fullname = `${stud.FirstName} ${stud.LastName}`;\n                        dispatch(storeNewStudentAction(fullname));\n                        dispatch(toggleSendRequestButtonAction());\n                      }\n                    });\n                    if (!valid) {\n                      dispatch(storeNewStudentAction(\"Not found.\"));\n                    }\n                  })\n                  .catch((err) => console.log(err));\n              }\n            })\n            .catch((err) => console.log(err));\n        }\n      })\n      .catch((err) => console.log(err));\n\n    //\n  };\n  const sendRequest = () => {\n    const username = document.querySelector(\"#tbSearchUsername\").value;\n\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const reqID = `StudReq${rand1}${rand2}`;\n\n    studentReqQueue_Collection\n      .doc(reqID)\n      .set({\n        StudentID: username,\n        TeacherID: teacherAuthID,\n        isAccepted: false,\n      })\n      .catch((err) => console.log(err));\n\n    dispatch(storeNewStudentAction(\"Request has been sent.\"));\n    if (toggleSendRequestState) {\n      dispatch(toggleSendRequestButtonAction());\n    }\n  };\n  const closeForm = () => {\n    if (toggleSearchUsername) {\n      dispatch(toggleSearchUsernameAction());\n    }\n    if (toggleSendRequestState) {\n      dispatch(toggleSendRequestButtonAction());\n    }\n    dispatch(storeNewStudentAction(\"\"));\n  };\n\n  const OnStudentSearch = () => {\n    const searchInput = document.querySelector(\"#tbStudentSearch\").value;\n\n    let filtered = [];\n\n    if (searchInput !== \"\") {\n      students.forEach((stud) => {\n        let studID = stud.id;\n        let fullName = `${stud.FirstName.toLowerCase()} ${stud.LastName.toLowerCase()}`;\n        let email = stud.Email;\n\n        if (studID.includes(searchInput)) {\n          filtered.push(stud);\n        } else if (fullName.includes(searchInput)) {\n          filtered.push(stud);\n        } else if (email.includes(searchInput)) {\n          filtered.push(stud);\n        }\n      });\n\n      dispatch(storeTeacherStudentGeneralInfoAction(filtered));\n    } else {\n      getAllStudentGeneralInfo();\n    }\n  };\n  const handleStudentList = () => {\n    return students.map((student, i) => {\n      return (\n        <div key={i}>\n          <p>\n            {student.FirstName} {student.LastName}\n          </p>\n          <p>{student.Email}</p>\n          <p>{student.OverallGrade}</p>\n          <button id={student.id} onClick={getSingleStudentInfo}>\n            Overview\n          </button>\n          <button>Remove</button>\n        </div>\n      );\n    });\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n\n    getAllStudentGeneralInfo();\n  }, []);\n\n  return (\n    <div>\n      {/* TopBar */}\n      <div>\n        <TopBar />\n      </div>\n\n      {/* Main Content */}\n      <div>\n        <div>\n          <h1>Students</h1>\n        </div>\n\n        <hr />\n\n        <div>\n          {toggleStudentOverview ? (\n            <div>\n              <div>\n                <button onClick={() => dispatch(toggleStudentOverviewAction())}>\n                  Close\n                </button>\n              </div>\n              <h1>\n                {student.FirstName} {student.LastName}\n              </h1>\n              <p>Email: {student.Email}</p>\n              <p>Overall Grade: {student.OveralGrade}</p>\n              <p>Subscriptions: </p>\n              <ul>\n                {student.Subscriptions.map((sub, i) => {\n                  return <li key={i}>{sub}</li>;\n                })}\n              </ul>\n              {/* Educational Info */}\n              <div>\n                {/* Lessons */}\n                <div>\n                  <h3>Lessons</h3>\n                  {lessons.map((lesson, i) => {\n                    return (\n                      <div key={i}>\n                        <p>\n                          {lesson.id.replaceAll(\"_\", \" \")}:{\" \"}\n                          {lesson.Completed ? \"Complete\" : \"Not Complete\"}\n                        </p>\n                      </div>\n                    );\n                  })}\n                </div>\n                {/* Exercises */}\n                <div>\n                  <h3>Exercises</h3>\n                  {exercises.map((exer, i) => {\n                    return (\n                      <div key={i}>\n                        <p>\n                          {exer.id.replaceAll(\"_\", \" \")}:{\" \"}\n                          {exer.Completed ? \"Complete\" : \"Not Complete\"}\n                        </p>\n                      </div>\n                    );\n                  })}\n                </div>\n                {/* Quizzes */}\n                <div>\n                  <h3>Quizzes</h3>\n                  {quizzes.map((quiz, i) => {\n                    return (\n                      <div key={i}>\n                        <p>\n                          {quiz.id.replaceAll(\"_\", \" \")}:{\" \"}\n                          {quiz.Completed ? \"Complete\" : \"Not Complete\"}\n                        </p>\n                      </div>\n                    );\n                  })}\n                </div>\n                {/* Exams */}\n                <div>\n                  <h3>Exams</h3>\n                  {exams.map((exam, i) => {\n                    return (\n                      <div key={i}>\n                        <p>\n                          {exam.id.replaceAll(\"_\", \" \")}:{\" \"}\n                          {exam.Completed ? \"Complete\" : \"Not Complete\"}\n                        </p>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </div>\n          ) : null}\n        </div>\n\n        <hr />\n\n        {/* Student Search */}\n        <div>\n          <input\n            id=\"tbStudentSearch\"\n            type=\"text\"\n            onChange={OnStudentSearch}\n            placeholder=\"Search for one of your students.\"\n          />\n\n          <div>\n            <button\n              onClick={() => {\n                dispatch(toggleSearchUsernameAction());\n              }}\n            >\n              Add New Student\n            </button>\n          </div>\n          <br />\n          {/* Request Stuff */}\n          {toggleSearchUsername ? (\n            <div>\n              <button onClick={closeForm}>Close</button>\n              <input\n                id=\"tbSearchUsername\"\n                type=\"text\"\n                placeholder=\"Search by username\"\n              />\n              <button onClick={handleNewStudent}>Search</button>\n            </div>\n          ) : null}\n          <div>\n            <br />\n            {searchResult}\n            {toggleSendRequestState ? (\n              <button onClick={sendRequest}>Send Request</button>\n            ) : null}\n            <br />\n            <hr />\n          </div>\n        </div>\n\n        {/* Student List */}\n        <div>{handleStudentList()}</div>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { groups_Collection } from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport DashFooter from \"../Dash/DashFooter\";\nimport RandomString from \"../../RandomString\";\nimport GetToday from \"../../GetToday\";\nimport {\n  storeTeacherGroupGeneralInfoAction,\n  toggleNewGroupFormAction,\n  storeSingleGroupAction,\n} from \"../../../redux/actions\";\n\nexport default function GroupsMain() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // Toggles\n  const toggleNewGroupForm = useSelector(\n    (state) => state.toggleNewGroupFormReducer\n  );\n\n  // Data\n  const groups = useSelector(\n    (state) => state.storeTeacherGroupGeneralInfoReducer\n  );\n\n  const getAllGroups = () => {\n    groups_Collection\n      .get()\n      .then((snapshot) => {\n        const groupData = firebaseLooper(snapshot);\n        dispatch(storeTeacherGroupGeneralInfoAction(groupData));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const removeGroup = (event) => {\n    const groupID = event.target.getAttribute(\"id\");\n\n    // Remove from DB\n    groups_Collection\n      .doc(groupID)\n      .delete()\n      .catch((err) => console.log(err));\n\n      \n\n    // Dispatch\n    const allGroups = [...groups];\n    const filtered = allGroups.filter((group) => group.id !== groupID);\n\n    dispatch(storeTeacherGroupGeneralInfoAction(filtered));\n\n    groups_Collection\n      .doc(groupID)\n      .delete()\n      .catch((err) => console.log(err));\n  };\n\n  const OnGroupSearch = () => {\n    const searchInput = document.querySelector(\"#tbGroupSearch\").value;\n\n    if (searchInput !== \"\") {\n      let filtered = [];\n\n      groups_Collection\n        .get()\n        .then((snapshot) => {\n          const groupData = firebaseLooper(snapshot);\n          groupData.forEach((gr) => {\n            const groupName = gr.Name.toLowerCase();\n            if (groupName.includes(searchInput)) {\n              filtered.push(gr);\n            }\n          });\n          dispatch(storeTeacherGroupGeneralInfoAction(filtered));\n        })\n        .catch((err) => console.log(err));\n    } else {\n      groups_Collection\n        .get()\n        .then((snapshot) => {\n          const groupData = firebaseLooper(snapshot);\n\n          dispatch(storeTeacherGroupGeneralInfoAction(groupData));\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  const handleGroupList = () => {\n    return groups.map((group, i) => {\n      return (\n        <div key={i}>\n          <h3>{group.Name}</h3>\n          <p>Host: {group.Host}</p>\n          <p>Created: {group.Date.toDate().toString().substr(4, 11)}</p>\n          <button id={group.id} onClick={navigateGroupPage}>\n            View Page\n          </button>\n          <button id={group.id} onClick={removeGroup}>\n            Remove\n          </button>\n        </div>\n      );\n    });\n  };\n\n  const handleNewGroupForm = () => {\n    return (\n      <div>\n        <br />\n        <div>\n          <button\n            onClick={() => {\n              dispatch(toggleNewGroupFormAction());\n            }}\n          >\n            Close\n          </button>\n        </div>\n        <div>\n          <label>Group Name:</label>\n          <input id=\"tbGroupNameText\" type=\"text\" placeholder=\"Group Name\" />\n        </div>\n        <div>\n          <label>Description:</label>\n          <textarea id=\"taDescText\" placeholder=\"Description\"></textarea>\n        </div>\n        <div>\n          <p>Access:</p>\n          <input type=\"radio\" id=\"raPublic\" name=\"raAccess\" value=\"public\" />\n          <label for=\"raPublic\">Public</label>\n          <p>Choosing public access will allow anyone submit a request.</p>\n          <br />\n          <input type=\"radio\" id=\"raPrivate\" name=\"raAccess\" value=\"private\" />\n          <label for=\"raPrivate\">Private</label>\n          <p>\n            Choosing private access will require users to use a key to join the\n            group.\n          </p>\n        </div>\n        <div>\n          <button onClick={createGroup}>Create</button>\n        </div>\n      </div>\n    );\n  };\n\n  const navigateGroupPage = (event) => {\n    const groupID = event.target.getAttribute(\"id\");\n\n    groups.forEach((gr) => {\n      if (gr.id === groupID) {\n        dispatch(storeSingleGroupAction(gr));\n      }\n    });\n\n    history.push(\"/teacher-group-page\");\n  };\n\n  const createGroup = () => {\n    const groupName = document.querySelector(\"#tbGroupNameText\").value;\n    const groupDesc = document.querySelector(\"#taDescText\").value;\n    let groupAccess = \"\";\n    const raPublic = document.querySelector(\"#raPublic\");\n    const raPrivate = document.querySelector(\"#raPrivate\");\n    if (raPublic.checked) {\n      groupAccess = \"public\";\n    } else if (raPrivate) {\n      groupAccess = \"private\";\n    }\n\n    // Save to DB\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const groupID = `Group${rand1}${rand2}`;\n    const memberID = `Member${rand1}${rand2}`;\n    const postID = `Post${rand1}${rand2}`;\n\n    groups_Collection\n      .doc(groupID)\n      .set({\n        Name: groupName,\n        Date: GetToday(),\n        Host: teacherAuthID,\n        Desc: groupDesc,\n        Access: groupAccess,\n      })\n      .catch((err) => console.log(err));\n\n    groups_Collection\n      .doc(groupID)\n      .collection(\"Members\")\n      .doc(memberID)\n      .set({\n        Username: teacherAuthID,\n        Role: \"host\",\n      })\n      .catch((err) => console.log(err));\n\n    groups_Collection\n      .doc(groupID)\n      .collection(\"Posts\")\n      .doc(postID)\n      .set({})\n      .catch((err) => console.log(err));\n\n    // Dispatch\n    const newGroupList = [...groups];\n    newGroupList.push({\n      Name: groupName,\n      Date: GetToday(),\n      Host: teacherAuthID,\n      Desc: groupDesc,\n      Access: groupAccess,\n    });\n    dispatch(storeTeacherGroupGeneralInfoAction(newGroupList));\n    if (toggleNewGroupForm) {\n      dispatch(toggleNewGroupFormAction());\n    }\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n\n    getAllGroups();\n  }, []);\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      {/* Main Content */}\n      <div>\n        <div>\n          <h1>Groups</h1>\n        </div>\n        <div>\n          <input\n            onChange={OnGroupSearch}\n            id=\"tbGroupSearch\"\n            type=\"text\"\n            placeholder=\"Search\"\n          />\n          <button\n            onClick={() => {\n              dispatch(toggleNewGroupFormAction());\n            }}\n          >\n            Create New Group\n          </button>\n        </div>\n        <div>{toggleNewGroupForm ? handleNewGroupForm() : null}</div>\n        <hr />\n        <div>{handleGroupList()}</div>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  storeGroupFeedPostsAction,\n  storeSingleGroupFeedPostAction,\n} from \"../../../redux/actions\";\n\nimport { groups_Collection } from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nimport RandomString from \"../../RandomString\";\nimport GetToday from \"../../GetToday\";\n\nexport default function GroupFeedView() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const group = useSelector((state) => state.storeSingleGroupReducer);\n  const posts = useSelector((state) => state.storeGroupFeedPostsReducer);\n\n  const getAllPosts = () => {\n    groups_Collection\n      .doc(group.id)\n      .collection(\"Posts\")\n      .get()\n      .then((snapshot) => {\n        const posts = firebaseLooper(snapshot);\n        const allPosts = [];\n        posts.forEach((post) => {\n          if (post.Poster) {\n            allPosts.push(post);\n          }\n        });\n        dispatch(storeGroupFeedPostsAction(allPosts));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleFeedPosts = () => {\n    return posts.map((post, i) => {\n      return (\n        <div key={i}>\n          <h3>{post.Poster}</h3>\n          <p>{post.Text}</p>\n          <p>{post.Date.toDate().toString().substr(4, 11)}</p>\n          {post.Poster === teacherAuthID ? (\n            <div>\n              <button id={post.id} onClick={navigateEdit}>\n                Edit\n              </button>\n              <button id={post.id} onClick={removePost}>\n                Remove\n              </button>\n            </div>\n          ) : null}\n        </div>\n      );\n    });\n  };\n\n  const createPost = () => {\n    const postText = document.querySelector(\"#taPostText\").value;\n\n    // Send to DB\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const postID = `Post${rand1}${rand2}`;\n    const commentID = `Comment${rand1}${rand2}`;\n\n    groups_Collection\n      .doc(group.id)\n      .collection(\"Posts\")\n      .doc(postID)\n      .set({\n        Poster: teacherAuthID,\n        Text: postText,\n        Date: GetToday(),\n      })\n      .catch((err) => console.log(err));\n\n    groups_Collection\n      .doc(group.id)\n      .collection(\"Posts\")\n      .doc(postID)\n      .collection(\"Comments\")\n      .doc(commentID)\n      .set({})\n      .catch((err) => console.log(err));\n\n    // Dispatch\n    const allPosts = [...posts];\n    allPosts.push({\n      id: postID,\n      Poster: teacherAuthID,\n      Text: postText,\n      Date: GetToday(),\n    });\n    dispatch(storeGroupFeedPostsAction(allPosts));\n\n    document.querySelector(\"#taPostText\").value = \"\";\n  };\n\n  const removePost = (event) => {\n    const postID = event.target.getAttribute(\"id\");\n\n    // Remove from DB\n    groups_Collection\n      .doc(group.id)\n      .collection(\"Posts\")\n      .doc(postID)\n      .delete()\n      .catch((err) => console.log(err));\n\n    // Dispatch\n    const groupPosts = [...posts];\n    const filtered = groupPosts.filter((post) => post.id !== postID);\n\n    dispatch(storeGroupFeedPostsAction(filtered));\n  };\n\n  const navigateEdit = (event) => {\n    const postID = event.target.getAttribute(\"id\");\n\n    posts.forEach((post) => {\n      if (post.id === postID) {\n        dispatch(storeSingleGroupFeedPostAction(post));\n      }\n    });\n\n    history.push(\"/teacher-group-page/feed-edit\");\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n\n    getAllPosts();\n  }, []);\n  return (\n    <div>\n      {/* New Post */}\n      <div>\n        <h4>Create a post.</h4>\n        <textarea id=\"taPostText\" placeholder=\"Type post here...\"></textarea>\n        <br />\n        <button onClick={createPost}>Post</button>\n      </div>\n      <hr />\n      {/* Post List */}\n      <div>{handleFeedPosts()}</div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { storeGroupFeedPostsAction } from \"../../../redux/actions\";\nimport { groups_Collection } from \"../../../utils/firebase\";\nimport GetToday from \"../../GetToday\";\n\nexport default function GroupFeedEdit() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const group = useSelector((state) => state.storeSingleGroupReducer);\n  const post = useSelector((state) => state.storeSingleGroupFeedPostReducer);\n  const posts = useSelector((state) => state.storeGroupFeedPostsReducer);\n\n  const savePost = () => {\n    const editText = document.querySelector(\"#taEditPostText\").value;\n\n    //   Save to DB\n    groups_Collection\n      .doc(group.id)\n      .collection(\"Posts\")\n      .doc(post.id)\n      .update({\n        Date: group.Date,\n        Poster: teacherAuthID,\n        Text: editText,\n      })\n      .catch((err) => console.log(err));\n\n    // Dispatch\n    const newPosts = [...posts];\n\n    newPosts.forEach((p) => {\n      if (p.id === post.id) {\n        p = {\n          ...p,\n          Text: editText,\n        };\n      }\n    });\n\n\n    dispatch(storeGroupFeedPostsAction(newPosts));\n    history.push(\"/teacher-group-page/feed\");\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n  }, []);\n  return (\n    <div>\n      <div>\n        <button onClick={() => history.push(\"/teacher-group-page/feed\")}>\n          Back\n        </button>\n      </div>\n      <br />\n      <div>\n        <textarea id=\"taEditPostText\" defaultValue={post.Text}></textarea>\n        <br />\n        <button onClick={savePost}>Save</button>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function GroupAboutView() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const group = useSelector((state) => state.storeSingleGroupReducer);\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n  }, []);\n  return (\n    <div>\n      <div>\n        <h3>Host: {group.Host}</h3>\n      </div>\n\n      <div>\n        <p>{group.Desc}</p>\n        <button onClick={() => history.push(\"/teacher-group-page/about-edit\")}>\n          Edit\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { storeSingleGroupAction } from \"../../../redux/actions\";\nimport { groups_Collection } from \"../../../utils/firebase\";\n\nexport default function GroupAboutEdit() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const group = useSelector((state) => state.storeSingleGroupReducer);\n\n  const saveEdit = () => {\n    const editText = document.querySelector(\"#taAboutEditText\").value;\n\n    //   Save to DB\n    groups_Collection.doc(group.id).update({\n      Access: group.Access,\n      Date: group.Date,\n      Desc: editText,\n      Host: group.Host,\n      Name: group.Name,\n    });\n\n    // Dispatch\n    const groupObj = {\n      ...group,\n      id: group.id,\n      Desc: editText,\n    };\n\n    dispatch(storeSingleGroupAction(groupObj));\n\n    history.push(\"/teacher-group-page/about\");\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n  }, []);\n  return (\n    <div>\n      <div>\n        <button onClick={() => history.push(\"/teacher-group-page/about\")}>\n          Back\n        </button>\n      </div>\n      <br />\n      <div>\n        <textarea id=\"taAboutEditText\" defaultValue={group.Desc}></textarea>\n        <br />\n        <button onClick={saveEdit}>Save</button>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { storeGroupMembersListAction } from \"../../../redux/actions\";\nimport { groups_Collection } from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nexport default function GroupMembersView() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const members = useSelector((state) => state.storeGroupMembersListReducer);\n  const group = useSelector((state) => state.storeSingleGroupReducer);\n\n  const getAllMembers = () => {\n    groups_Collection\n      .doc(group.id)\n      .collection(\"Members\")\n      .get()\n      .then((snapshot) => {\n        const memberData = firebaseLooper(snapshot);\n        dispatch(storeGroupMembersListAction(memberData));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleMemberList = () => {\n    return members.map((mem, i) => {\n      if (mem.Username) {\n        return (\n          <div key={i}>\n            {/* Profile Pic */}\n            <img src=\"\" alt=\"\" />\n\n            <p>{mem.Username}</p>\n            <p>{mem.Role}</p>\n          </div>\n        );\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n\n    getAllMembers();\n  }, []);\n  return (\n    <div>\n      <div>{handleMemberList()}</div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport DashFooter from \"../Dash/DashFooter\";\n\nimport GroupFeedView from \"../Groups/GroupFeedView\";\nimport GroupFeedEdit from \"../Groups/GroupFeedEdit\";\nimport GroupAboutView from \"../Groups/GroupAboutView\";\nimport GroupAboutEdit from \"../Groups/GroupAboutEdit\";\nimport GroupMembersView from \"../Groups/GroupMembersView\";\nimport RandomString from \"../../RandomString\";\n\n// Router stuff\nimport { Switch, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport {\n  groups_Collection,\n  groupReqQueue_Collection,\n} from \"../../../utils/firebase\";\nimport {\n  checkJoinedGroupStatusAction,\n  checkRequestedGroupStatusAction,\n} from \"../../../redux/actions\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nexport default function GroupsPage() {\n  let { url } = useRouteMatch();\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const group = useSelector((state) => state.storeSingleGroupReducer);\n  const joined = useSelector((state) => state.checkJoinedGroupStatusReducer);\n  const requested = useSelector(\n    (state) => state.checkRequestedGroupStatusReducer\n  );\n\n  const joinGroup = () => {\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const reqID = `GroupReq${rand1}${rand2}`;\n\n    // Send Request to DB\n    groupReqQueue_Collection\n      .doc(reqID)\n      .set({\n        MemberID: teacherAuthID,\n        HostID: group.Host,\n        isAccepted: false,\n      })\n      .catch((err) => console.log(err));\n\n    // Dispatch\n    dispatch(checkRequestedGroupStatusAction(true));\n  };\n  const disconnectGroup = () => {\n    if (teacherAuthID === group.Host) {\n      // Show modal\n      alert(\n        \"Our apologies. You are not able to disconnect from this group since you are the host.\"\n      );\n    } else {\n      // Remove from DB\n      groups_Collection\n        .doc(group.id)\n        .collection(\"Members\")\n        .get()\n        .then((snapshot) => {\n          const memberData = firebaseLooper(snapshot);\n          memberData.forEach((mem) => {\n            if (mem.Username === teacherAuthID) {\n              groups_Collection\n                .doc(group.id)\n                .collection(\"Members\")\n                .doc(mem.id)\n                .delete()\n                .catch((err) => console.log(err));\n            }\n          });\n        })\n        .catch((err) => console.log(err));\n    }\n\n    // Dispatch\n    dispatch(checkJoinedGroupStatusAction(false));\n  };\n\n  const checkJoined = () => {\n    groups_Collection\n      .doc(group.id)\n      .collection(\"Members\")\n      .get()\n      .then((snapshot) => {\n        const memberData = firebaseLooper(snapshot);\n        memberData.forEach((mem) => {\n          if (mem.Username === teacherAuthID) {\n            dispatch(checkJoinedGroupStatusAction(true));\n          }\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n  const checkRequested = () => {\n    groupReqQueue_Collection\n      .get()\n      .then((snapshot) => {\n        const queueData = firebaseLooper(snapshot);\n        queueData.forEach((q) => {\n          if (q.MemberID === teacherAuthID) {\n            dispatch(checkRequestedGroupStatusAction(true));\n          }\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n    checkJoined();\n    checkRequested();\n  }, []);\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      {/* Main Content */}\n      <div>\n        <div>\n          <h1>{group.Name}</h1>\n        </div>\n        <div>\n          {joined ? (\n            <button onClick={disconnectGroup}>Disconnect</button>\n          ) : requested ? (\n            <button enabled=\"false\">Request Sent</button>\n          ) : (\n            <button onClick={joinGroup}>Join</button>\n          )}\n        </div>\n      </div>\n\n      <div>\n        <ul>\n          <li>\n            <Link to={`${url}/feed`}>Feed</Link>\n          </li>\n          <li>\n            <Link to={`${url}/about`}>About</Link>\n          </li>\n          <li>\n            <Link to={`${url}/members`}>Members</Link>\n          </li>\n        </ul>\n      </div>\n\n      <div>\n        <Switch>\n          {/* Feed */}\n          <Route path={`${url}/feed`}>\n            <GroupFeedView />\n          </Route>\n          <Route path={`${url}/feed-edit`}>\n            <GroupFeedEdit />\n          </Route>\n          {/* About */}\n          <Route path={`${url}/about`}>\n            <GroupAboutView />\n          </Route>\n          <Route path={`${url}/about-edit`}>\n            <GroupAboutEdit />\n          </Route>\n          {/* Members */}\n          <Route path={`${url}/members`}>\n            <GroupMembersView />\n          </Route>\n        </Switch>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport DashFooter from \"../Dash/DashFooter\";\nimport { courses_Collection } from \"../../../utils/firebase\";\nimport {\n  storeSingleCourseAction,\n  storeTeacherCourseGeneralInfoAction,\n  storeSingleCourseLessonsAction,\n  storeSingleCourseExersAction,\n  storeSingleCourseQuizzesAction,\n} from \"../../../redux/actions\";\nimport { firebaseLooper } from \"../../../utils/tools\";\nimport CoursesCard from \"../../Courses/CoursesCard\";\n\nexport default function CoursesMain() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const courses = useSelector(\n    (state) => state.storeTeacherCourseGeneralInfoReducer\n  );\n\n  const getAllCourses = () => {\n    courses_Collection\n      .where(\"Creator\", \"==\", teacherAuthID)\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        dispatch(storeTeacherCourseGeneralInfoAction(data));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const removeCourse = (event) => {\n    const courseID = event.target.getAttribute(\"id\");\n\n    // Remove from DB\n\n    courses_Collection\n      .doc(courseID)\n      .collection(\"Lessons\")\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        data.forEach((lesson) => {\n          courses_Collection\n            .doc(courseID)\n            .collection(\"Lessons\")\n            .doc(lesson.id)\n            .delete()\n            .catch((err) => console.log(err));\n        });\n      })\n      .catch((err) => console.log(err));\n\n    courses_Collection\n      .doc(courseID)\n      .collection(\"Exercises\")\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        data.forEach((exer) => {\n          courses_Collection\n            .doc(courseID)\n            .collection(\"Exercises\")\n            .doc(exer.id)\n            .delete()\n            .catch((err) => console.log(err));\n        });\n      })\n      .catch((err) => console.log(err));\n\n    courses_Collection\n      .doc(courseID)\n      .collection(\"Quizzes\")\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        data.forEach((quiz) => {\n          courses_Collection\n            .doc(courseID)\n            .collection(\"Quizzes\")\n            .doc(quiz.id)\n            .collection(\"Components\")\n            .get()\n            .then((snapshot) => {\n              const compData = firebaseLooper(snapshot);\n              compData.forEach((comp) => {\n                courses_Collection\n                  .doc(courseID)\n                  .collection(\"Quizzes\")\n                  .doc(quiz.id)\n                  .collection(\"Components\")\n                  .doc(comp.id)\n                  .delete()\n                  .catch((err) => console.log(err));\n              });\n            })\n            .catch((err) => console.log(err));\n\n          courses_Collection\n            .doc(courseID)\n            .collection(\"Quizzes\")\n            .doc(quiz.id)\n            .delete()\n            .catch((err) => console.log(err));\n        });\n      })\n      .catch((err) => console.log(err));\n\n    courses_Collection\n      .doc(courseID)\n      .collection(\"Exams\")\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        data.forEach((exam) => {\n          courses_Collection\n            .doc(courseID)\n            .collection(\"Exams\")\n            .doc(exam.id)\n            .delete()\n            .catch((err) => console.log(err));\n        });\n      })\n      .catch((err) => console.log(err));\n\n    courses_Collection\n      .doc(courseID)\n      .delete()\n      .catch((err) => console.log(err));\n\n    // Dispatch\n    const allCourses = [...courses];\n    const filtered = allCourses.filter((course) => course.id !== courseID);\n\n    dispatch(storeTeacherCourseGeneralInfoAction(filtered));\n  };\n  const editCourse = (event) => {\n    const courseID = event.target.getAttribute(\"id\");\n\n    courses.forEach((course) => {\n      if (course.id === courseID) {\n        dispatch(storeSingleCourseAction(course));\n\n        // Dispatch Lessons\n        courses_Collection\n          .doc(course.id)\n          .collection(\"Lessons\")\n          .orderBy(\"Order\", \"asc\")\n          .get()\n          .then((snapshot) => {\n            const lessonData = firebaseLooper(snapshot);\n            dispatch(storeSingleCourseLessonsAction(lessonData));\n          })\n          .catch((err) => console.log(err));\n\n        // Dispatch Exercises\n        courses_Collection\n          .doc(course.id)\n          .collection(\"Exercises\")\n          .orderBy(\"Order\", \"asc\")\n          .get()\n          .then((snapshot) => {\n            const exerData = firebaseLooper(snapshot);\n            dispatch(storeSingleCourseExersAction(exerData));\n          })\n          .catch((err) => console.log(err));\n\n        // Dispatch Quizzes\n        courses_Collection\n          .doc(course.id)\n          .collection(\"Quizzes\")\n          .orderBy(\"Order\", \"asc\")\n          .get()\n          .then((snapshot) => {\n            const quizData = firebaseLooper(snapshot);\n            dispatch(storeSingleCourseQuizzesAction(quizData));\n          })\n          .catch((err) => console.log(err));\n      }\n    });\n\n    history.push(\"/teacher-courses-wizard-edit\");\n  };\n\n  const handleCourseList = () => {\n    return courses.map((course, i) => {\n      return (\n        <div key={i}>\n          <h3>{course.Name}</h3>\n          <p>{course.Access}</p>\n          <button id={course.id} onClick={editCourse}>\n            Edit\n          </button>\n          <button id={course.id} onClick={removeCourse}>\n            Remove\n          </button>\n        </div>\n      );\n    });\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n\n    getAllCourses();\n    window.scrollTo(0, 0);\n  }, []);\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      <div>\n        <h1>Courses</h1>\n        <br />\n        <input id=\"tbCourseSearch\" type=\"text\" placeholder=\"Search\" />\n        <button onClick={() => history.push(\"/teacher-courses-wizard-full\")}>\n          Create New Course\n        </button>\n      </div>\n      <div>{handleCourseList()}</div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport DashFooter from \"../Dash/DashFooter\";\nimport RandomString from \"../../RandomString\";\nimport GetToday from \"../../GetToday\";\n\nimport {\n  storeShortOptionsAction,\n  toggleCourseFullWizardComponentAction,\n  toggleExerciseTypeOptionAction,\n  storeCourseIDFullWizardAction,\n  storeLessonNameFullWizardAction,\n  storeQuizComponentsAction,\n} from \"../../../redux/actions\";\nimport { courses_Collection } from \"../../../utils/firebase\";\n\nexport default function CourseFullWizard() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const wizardState = useSelector(\n    (state) => state.toggleCourseFullWizardComponentReducer\n  );\n  const courses = useSelector(\n    (state) => state.storeTeacherCourseGeneralInfoReducer\n  );\n  const options = useSelector((state) => state.storeShortOptionsReducer);\n  const exerciseTypeState = useSelector(\n    (state) => state.toggleExerciseTypeOptionReducer\n  );\n  const courseIDState = useSelector(\n    (state) => state.storeCourseIDFullWizardReducer\n  );\n  const lessonNameState = useSelector(\n    (state) => state.storeLessonNameFullWizardReducer\n  );\n  const quizComponents = useSelector(\n    (state) => state.storeQuizComponentsReducer\n  );\n\n  const handleOptions = () => {\n    return options.map((opt, i) => {\n      return (\n        <div key={i}>\n          <input\n            id={`tbShortOption${i}`}\n            type=\"text\"\n            placeholder={`Option ${i + 1}`}\n          />\n          <button id={opt} onClick={removeOption}>\n            -\n          </button>\n        </div>\n      );\n    });\n  };\n  const removeOption = (event) => {\n    const optionText = event.target.getAttribute(\"id\");\n\n    const allOptions = [...options];\n    const filtered = allOptions.filter((opt) => opt !== optionText);\n\n    dispatch(storeShortOptionsAction(filtered));\n  };\n  const addOption = () => {\n    const allOptions = [...options];\n    const optionCount = allOptions.length;\n\n    allOptions.push(`Option ${optionCount + 1}`);\n\n    dispatch(storeShortOptionsAction(allOptions));\n  };\n  const chooseExercise = () => {\n    const textualOpt = document.querySelector(\"#raTextual\").checked;\n\n    if (textualOpt) {\n      dispatch(toggleExerciseTypeOptionAction(\"textual\"));\n    }\n  };\n  const handleFormWizard = () => {\n    if (wizardState === \"lesson\") {\n      return (\n        <div>\n          <h2>Create a Lesson</h2>\n          <br />\n\n          {/* Lesson Name */}\n          <div>\n            <h3>Lesson Name</h3>\n            <input id=\"tbLessonName\" type=\"text\" placeholder=\"Lesson Name\" />\n          </div>\n\n          <br />\n          {/* Upload Video */}\n          <div>\n            <h3>1. Upload a Video Lesson</h3>\n            <p>Video Upload Here</p>\n          </div>\n\n          {/* Insert Text */}\n          <div>\n            <h3>2. Type your Textual Lesson</h3>\n            <p>\n              The text provided will be displayed beneath the video lesson. It\n              is recommended to provide textual lesson reflecting the video for\n              students who may experience auditory issues.\n            </p>\n            <div>\n              <textarea\n                id=\"taTextualLesson\"\n                placeholder=\"Type Textual Lesson here..\"\n              ></textarea>\n            </div>\n          </div>\n\n          {/* Insert Question */}\n          <div>\n            <h3>3. Provide a Lesson Question</h3>\n            <p>\n              To make sure each student understands the lesson, we are providing\n              this section where the teacher can insert a question. Not\n              providing a question will allow the student to continue to the\n              next component as soon as the video is over. However, answering\n              the question will also be required to move on, if one was\n              provided.\n            </p>\n            <br />\n            <div>\n              <label>Question</label>\n              <input id=\"tbShortQuestion\" type=\"text\" placeholder=\"Question\" />\n            </div>\n            <div>\n              <label>Options</label>\n              {handleOptions()}\n              <button onClick={addOption}>+</button>\n            </div>\n            <div>\n              <label>Answer</label>\n              <input id=\"tbShortAnswer\" type=\"text\" placeholder=\"Answer\" />\n            </div>\n          </div>\n\n          <br />\n          {/* Lesson Options */}\n          <div>\n            <button onClick={saveAndExit}>Save &amp; Exit</button>\n            <button onClick={saveAndContinue}>\n              Save &amp; Create Exercise\n            </button>\n          </div>\n        </div>\n      );\n    } else if (wizardState === \"exercise\") {\n      return (\n        <div>\n          <h2>Create Exercise</h2>\n          <p>\n            Exercises can be used to further enhance the lesson that was\n            provided. The exercise will be named after the lesson that was\n            created beforehand.\n          </p>\n          <br />\n\n          {/* Exercise Types */}\n\n          <div>\n            <h3>Choose your exercise type:</h3>\n            <p>\n              Below, you will find different exercise type options. Hover over\n              the image to get a glimpse of what the student would be doing.\n            </p>\n            <br />\n            <input\n              onChange={chooseExercise}\n              type=\"radio\"\n              id=\"raTextual\"\n              name=\"raExercises\"\n              value=\"textual\"\n              checked=\"checked\"\n            />\n            <label for=\"textual\">Textual</label>\n          </div>\n\n          {/* Here is the mini wizard for exercises depending on what the user chooses. */}\n          <div>{handleExerciseWizard()}</div>\n\n          <div>\n            <button onClick={saveAndExit}>Save &amp; Exit</button>\n            <button onClick={saveAndContinue}>Save &amp; Create Quiz</button>\n          </div>\n        </div>\n      );\n    } else if (wizardState === \"quiz\") {\n      return (\n        <div>\n          <h2>Create Quiz</h2>\n          <p>\n            Quizzes are meant to be a way for students to test their knowledge\n            on what they learned in the lesson and exercise.\n          </p>\n          <br />\n\n          {/* Quiz Component Picker */}\n          <div\n            style={{\n              position: \"fixed\",\n              right: \"0\",\n              backgroundColor: \"gray\",\n              padding: \"2%\",\n              margin: \"2%\",\n              border: \"2px solid black\",\n            }}\n          >\n            <h3>Quiz Component Types</h3>\n            <div>\n              <button\n                onClick={() => {\n                  const tempID = `comp${RandomString()}`;\n                  const obj = {\n                    TempID: tempID,\n                    Type: \"multiple\",\n                    Question: \"Question\",\n                    Options: [\"Option 1\", \"Option 2\", \"Option 3\", \"Option 4\"],\n                    Answer: \"Answer\",\n                  };\n                  const allObjs = [...quizComponents];\n                  allObjs.push(obj);\n                  dispatch(storeQuizComponentsAction(allObjs));\n                }}\n              >\n                Multiple Choice\n              </button>\n              <br />\n              <button\n                onClick={() => {\n                  const tempID = `comp${RandomString()}`;\n                  const obj = {\n                    TempID: tempID,\n                    Type: \"short\",\n                    Text: \"Prompt\",\n                    Answer: \"\",\n                  };\n                  const allObjs = [...quizComponents];\n                  allObjs.push(obj);\n                  dispatch(storeQuizComponentsAction(allObjs));\n                }}\n              >\n                Short Answer\n              </button>\n              <br />\n              <button\n                onClick={() => {\n                  const tempID = `comp${RandomString()}`;\n                  const obj = {\n                    TempID: tempID,\n                    Type: \"long\",\n                    Text: \"Prompt\",\n                    Answer: \"\",\n                  };\n                  const allObjs = [...quizComponents];\n                  allObjs.push(obj);\n                  dispatch(storeQuizComponentsAction(allObjs));\n                }}\n              >\n                Long Answer\n              </button>\n              <br />\n              <button\n                onClick={() => {\n                  const tempID = `comp${RandomString()}`;\n                  const obj = {\n                    TempID: tempID,\n                    Type: \"boolean\",\n                    Statement: \"\",\n                    Answer: \"\",\n                  };\n                  const allObjs = [...quizComponents];\n                  allObjs.push(obj);\n                  dispatch(storeQuizComponentsAction(allObjs));\n                }}\n              >\n                True / False\n              </button>\n            </div>\n          </div>\n\n          {/* Form */}\n          <div>\n            <h3>Quiz Editor</h3>\n            {/* Components */}\n            <div>{handleQuizComponents()}</div>\n            <br />\n\n            {/* Quiz Options */}\n            <button onClick={saveAndExit}>Save &amp; Exit</button>\n            <button onClick={saveAndContinue}>Save &amp; Create Lesson</button>\n            <button onClick={saveAndExam}>Save &amp; Create Exam</button>\n          </div>\n        </div>\n      );\n    } else if (wizardState === \"exam\") {\n      return (\n        <div>\n          <h2>Create Exam</h2>\n          <p>\n            Congratulations. You have reached the final part of the course\n            wizard. At this point, the program is wrapping up all quizzes and\n            combining them to one collection. In your course settings, you may\n            choose to assign the method your students will be viewing the exam.\n            Ex.\n            <ul>\n              <li>Randomized Questions</li>\n              <li>\n                Select specific number of questions from each quiz type/section\n              </li>\n              <li>Assign time limit</li>\n              <li>Pick specific questions from each quiz</li>\n            </ul>\n          </p>\n          <br />\n          <div>\n            <button onClick={saveAndExit}>Finish</button>\n          </div>\n        </div>\n      );\n    }\n  };\n  const handleQuizComponents = () => {\n    return quizComponents.map((q, i) => {\n      if (q.Type === \"multiple\") {\n        return (\n          <div\n            style={{\n              border: \"3px solid blue\",\n              padding: \"2%\",\n              margin: \"2%\",\n              backgroundColor: \"rgba(0,0,255,0.2)\",\n            }}\n          >\n            <h3>Multiple Choice</h3>\n            <div>\n              <h4>Question</h4>\n              <input id={`tbQui${i}`} type=\"text\" placeholder=\"Question\" />\n            </div>\n            <div>\n              <h4>Options</h4>\n              {q.Options.map((opt, a) => {\n                return (\n                  <div>\n                    <input\n                      id={`tbOpt${i}-${a}`}\n                      type=\"text\"\n                      placeholder={opt}\n                    />\n                  </div>\n                );\n              })}\n            </div>\n            <div>\n              <h4>Answer</h4>\n              <input id={`tbAns${i}`} type=\"text\" placeholder=\"Answer\" />\n            </div>\n\n            <div>\n              <button id={q.TempID} onClick={removeQuizComponent}>\n                Remove\n              </button>\n            </div>\n          </div>\n        );\n      } else if (q.Type === \"short\") {\n        return (\n          <div\n            style={{\n              border: \"3px solid green\",\n              padding: \"2%\",\n              margin: \"2%\",\n              backgroundColor: \"rgba(0,255,0,0.2)\",\n            }}\n          >\n            <h3>Short Answer</h3>\n            <div>\n              <h4>Prompt</h4>\n              <textarea\n                id={`taShortPrompt${i}`}\n                placeholder=\"Prompt\"\n              ></textarea>\n            </div>\n            <div>\n              <h4>Answer</h4>\n              <input id={`tbShortAns${i}`} type=\"text\" placeholder=\"Answer\" />\n            </div>\n\n            <div>\n              <button id={q.TempID} onClick={removeQuizComponent}>\n                Remove\n              </button>\n            </div>\n          </div>\n        );\n      } else if (q.Type === \"long\") {\n        return (\n          <div\n            style={{\n              border: \"3px solid red\",\n              padding: \"2%\",\n              margin: \"2%\",\n              backgroundColor: \"rgba(255,0,0,0.2)\",\n            }}\n          >\n            <h3>Long Answer</h3>\n            <div>\n              <h4>Prompt</h4>\n              <textarea id={`taLongPrompt${i}`} placeholder=\"Prompt\"></textarea>\n            </div>\n            <div>\n              <h4>Answer</h4>\n              <textarea id={`taLongAns${i}`} placeholder=\"Answer\"></textarea>\n            </div>\n\n            <div>\n              <button id={q.TempID} onClick={removeQuizComponent}>\n                Remove\n              </button>\n            </div>\n          </div>\n        );\n      } else if (q.Type === \"boolean\") {\n        return (\n          <div\n            style={{\n              border: \"3px solid purple\",\n              padding: \"2%\",\n              margin: \"2%\",\n              backgroundColor: \"rgba(50.2,0,50.2,0.2)\",\n            }}\n          >\n            <h3>True or False</h3>\n            <div>\n              <h4>Statement</h4>\n              <input id={`tbBoolStatement${i}`} placeholder=\"Statement\" />\n            </div>\n            <div>\n              <h4>Answer</h4>\n              <input type=\"radio\" id=\"raTrue\" name=\"raBool\" value=\"true\" />\n              <label for=\"raTrue\">True</label>\n              <br />\n              <input type=\"radio\" id=\"raFalse\" name=\"raBool\" value=\"false\" />\n              <label for=\"raFalse\">False</label>\n            </div>\n\n            <div>\n              <button id={q.TempID} onClick={removeQuizComponent}>\n                Remove\n              </button>\n            </div>\n          </div>\n        );\n      }\n    });\n  };\n  const removeQuizComponent = (event) => {\n    const compID = event.target.getAttribute(\"id\");\n    const allQuizComps = [...quizComponents];\n\n    const filtered = allQuizComps.filter((comp) => comp.TempID !== compID);\n    console.log(filtered);\n    dispatch(storeQuizComponentsAction(filtered));\n  };\n  const handleExerciseWizard = () => {\n    if (exerciseTypeState === \"textual\") {\n      return (\n        <div>\n          <h2>Textual Exercise</h2>\n          <p>\n            Creating a textual exercise requires a prompt. This can be in the\n            form of a question, sentence, or a paragraph. We recommend to\n            provide a detailed prompt for the student to provide and adequate\n            response.\n          </p>\n          <br />\n          <textarea\n            id=\"taTextualExer\"\n            placeholder=\"Type prompt here..\"\n          ></textarea>\n        </div>\n      );\n    }\n  };\n\n  const saveLesson = () => {\n    const lessonName = document.querySelector(\"#tbLessonName\").value;\n\n    //   Get Video Lesson Path here\n\n    // Get Textual Lesson\n    const lessonText = document.querySelector(\"#taTextualLesson\").value;\n\n    // Get Question components\n    const shortQui = document.querySelector(\"#tbShortQuestion\").value;\n    const shortAns = document.querySelector(\"#tbShortAnswer\").value;\n    const opts = [];\n    for (let i = 0; i < options.length; i = i + 1) {\n      const opt = document.querySelector(`#tbShortOption${i}`).value;\n      opts.push(opt);\n    }\n\n    // Save to DB\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const lessonID = `Lesson${rand1}${rand2}`;\n\n    let courseID = \"\";\n\n    if (courseIDState.length === 0) {\n      const courseName = document.querySelector(\"#tbCourseName\").value;\n      const courseDesc = document.querySelector(\"#taCourseDesc\").value;\n      courseID = `Course${rand1}${rand2}`;\n      // Create course document\n      courses_Collection\n        .doc(courseID)\n        .set({\n          Created: GetToday(),\n          Name: courseName,\n          Access: \"Private\",\n          Creator: teacherAuthID,\n          Desc: courseDesc,\n          Type: \"Teacher\",\n        })\n        .catch((err) => console.log(err));\n\n      //   Dispatch\n      const allCourses = [...courses];\n      allCourses.push({\n        id: courseID,\n        Created: GetToday(),\n        Name: lessonName,\n        Access: \"private\",\n        Creator: teacherAuthID,\n        Desc: courseDesc,\n        Type: \"Teacher\",\n      });\n    } else {\n      courseID = courseIDState;\n    }\n\n    if (courseIDState.length > 0) {\n      courses_Collection\n        .doc(courseIDState)\n        .collection(\"Lessons\")\n        .get()\n        .then((snapshot) => {\n          const lessonCount = snapshot.size;\n          courses_Collection\n            .doc(courseID)\n            .collection(\"Lessons\")\n            .doc(lessonID)\n            .set({\n              Name: lessonName,\n              Video: \"path\",\n              Text: lessonText,\n              Question: shortQui,\n              Answer: shortAns,\n              Options: [...opts],\n              Order: lessonCount + 1,\n            })\n            .catch((err) => console.log(err));\n        })\n        .catch((err) => console.log(err));\n    } else {\n      courses_Collection\n        .doc(courseID)\n        .collection(\"Lessons\")\n        .doc(lessonID)\n        .set({\n          Name: lessonName,\n          Video: \"path\",\n          Text: lessonText,\n          Question: shortQui,\n          Answer: shortAns,\n          Options: [...opts],\n          Order: 1,\n        })\n        .catch((err) => console.log(err));\n    }\n\n    // Save Course ID\n    dispatch(storeCourseIDFullWizardAction(courseID));\n    dispatch(storeLessonNameFullWizardAction(lessonName));\n  };\n  const saveExercise = () => {\n    if (exerciseTypeState === \"textual\") {\n      const text = document.querySelector(\"#taTextualExer\").value;\n      const exerciseName = `${lessonNameState} Exercise`;\n\n      const rand1 = RandomString();\n      const rand2 = RandomString();\n      const exerID = `Exer${rand1}${rand2}`;\n\n      if (courseIDState.length > 0) {\n        courses_Collection\n          .doc(courseIDState)\n          .collection(\"Exercises\")\n          .get()\n          .then((snapshot) => {\n            const exerCount = snapshot.size;\n            courses_Collection\n              .doc(courseIDState)\n              .collection(\"Exercises\")\n              .doc(exerID)\n              .set({\n                Type: \"textual\",\n                Text: text,\n                Name: exerciseName,\n                Order: exerCount + 1,\n              })\n              .catch((err) => console.log(err));\n          })\n          .catch((err) => console.log(err));\n      } else {\n        courses_Collection\n          .doc(courseIDState)\n          .collection(\"Exercises\")\n          .doc(exerID)\n          .set({\n            Type: \"textual\",\n            Text: text,\n            Name: exerciseName,\n            Order: 1,\n          })\n          .catch((err) => console.log(err));\n      }\n    }\n\n    window.scrollTo(0, 0);\n  };\n  const saveQuiz = () => {\n    let newComponents = [];\n    const quizName = `${lessonNameState} Quiz`;\n    quizComponents.forEach((q, i) => {\n      if (q.Type === \"multiple\") {\n        const qui = document.querySelector(`#tbQui${i}`).value;\n        const opts = [];\n        q.Options.forEach((opt, a) => {\n          const newOpt = document.querySelector(`#tbOpt${i}-${a}`).value;\n          opts.push(newOpt);\n        });\n        const ans = document.querySelector(`#tbAns${i}`).value;\n\n        q = {\n          ...q,\n          Question: qui,\n          Options: [...opts],\n          Answer: ans,\n        };\n\n        newComponents.push(q);\n      } else if (q.Type === \"short\") {\n        const shortText = document.querySelector(`#taShortPrompt${i}`).value;\n        const shortAns = document.querySelector(`#tbShortAns${i}`).value;\n\n        q = {\n          ...q,\n          Text: shortText,\n          Answer: shortAns,\n        };\n\n        newComponents.push(q);\n      } else if (q.Type === \"long\") {\n        const longText = document.querySelector(`#taLongPrompt${i}`).value;\n        const longAns = document.querySelector(`#taLongAns${i}`).value;\n\n        q = {\n          ...q,\n          Text: longText,\n          Answer: longAns,\n        };\n\n        newComponents.push(q);\n      } else if (q.Type === \"boolean\") {\n        const statement = document.querySelector(`#tbBoolStatement${i}`).value;\n        let answer = \"\";\n        const raTrue = document.querySelector(\"#raTrue\").checked;\n        const raFalse = document.querySelector(\"#raFalse\").checked;\n\n        if (raTrue) {\n          answer = \"true\";\n        } else if (raFalse) {\n          answer = \"false\";\n        }\n\n        q = {\n          ...q,\n          Statement: statement,\n          Answer: answer,\n        };\n\n        newComponents.push(q);\n      }\n    });\n\n    dispatch(storeQuizComponentsAction(newComponents));\n\n    // Save to DB\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const quizID = `Quiz${rand1}${rand2}`;\n\n    if (courseIDState.length > 0) {\n      courses_Collection\n        .doc(courseIDState)\n        .collection(\"Quizzes\")\n        .get()\n        .then((snapshot) => {\n          const quizCount = snapshot.size;\n          courses_Collection\n            .doc(courseIDState)\n            .collection(\"Quizzes\")\n            .doc(quizID)\n            .set({\n              Name: quizName,\n              Order: quizCount + 1,\n            })\n            .catch((err) => console.log(err));\n        })\n        .catch((err) => console.log(err));\n    } else {\n      courses_Collection\n        .doc(courseIDState)\n        .collection(\"Quizzes\")\n        .doc(quizID)\n        .set({\n          Name: quizName,\n          Order: 1,\n        })\n        .catch((err) => console.log(err));\n    }\n\n    quizComponents.forEach((q, i) => {\n      const rand3 = RandomString();\n      const rand4 = RandomString();\n      const compID = `Comp${rand3}${rand4}`;\n\n      if (q.Type === \"multiple\") {\n        const qui = document.querySelector(`#tbQui${i}`).value;\n        const opts = [];\n        q.Options.forEach((opt, a) => {\n          const newOpt = document.querySelector(`#tbOpt${i}-${a}`).value;\n          opts.push(newOpt);\n        });\n        const ans = document.querySelector(`#tbAns${i}`).value;\n\n        courses_Collection\n          .doc(courseIDState)\n          .collection(\"Quizzes\")\n          .doc(quizID)\n          .collection(\"Components\")\n          .doc(compID)\n          .set({\n            Type: q.Type,\n            Question: qui,\n            Options: [...opts],\n            Answer: ans,\n          })\n          .catch((err) => console.log(err));\n      } else if (q.Type === \"short\") {\n        const shortText = document.querySelector(`#taShortPrompt${i}`).value;\n        const shortAns = document.querySelector(`#tbShortAns${i}`).value;\n\n        courses_Collection\n          .doc(courseIDState)\n          .collection(\"Quizzes\")\n          .doc(quizID)\n          .collection(\"Components\")\n          .doc(compID)\n          .set({\n            Type: q.Type,\n            Text: shortText,\n            Answer: shortAns,\n          })\n          .catch((err) => console.log(err));\n      } else if (q.Type === \"long\") {\n        const longText = document.querySelector(`#taLongPrompt${i}`).value;\n        const longAns = document.querySelector(`#taLongAns${i}`).value;\n\n        courses_Collection\n          .doc(courseIDState)\n          .collection(\"Quizzes\")\n          .doc(quizID)\n          .collection(\"Components\")\n          .doc(compID)\n          .set({\n            Type: q.Type,\n            Text: longText,\n            Answer: longAns,\n          })\n          .catch((err) => console.log(err));\n      } else if (q.Type === \"boolean\") {\n        const statement = document.querySelector(`#tbBoolStatement${i}`).value;\n        let answer = \"\";\n        const raTrue = document.querySelector(\"#raTrue\").checked;\n        const raFalse = document.querySelector(\"#raFalse\").checked;\n\n        if (raTrue) {\n          answer = \"true\";\n        } else if (raFalse) {\n          answer = \"false\";\n        }\n        courses_Collection\n          .doc(courseIDState)\n          .collection(\"Quizzes\")\n          .doc(quizID)\n          .collection(\"Components\")\n          .doc(compID)\n          .set({\n            Type: q.Type,\n            Statement: statement,\n            Answer: answer,\n          })\n          .catch((err) => console.log(err));\n      }\n    });\n\n    dispatch(storeQuizComponentsAction([]));\n    window.scrollTo(0, 0);\n  };\n\n  const saveAndExit = () => {\n    if (wizardState === \"lesson\") {\n      saveLesson();\n    } else if (wizardState === \"exercise\") {\n      saveExercise();\n    } else if (wizardState === \"quiz\") {\n      saveQuiz();\n    } else if (wizardState === \"exam\") {\n    }\n    history.push(\"/teacher-courses\");\n  };\n  const saveAndContinue = () => {\n    if (wizardState === \"lesson\") {\n      saveLesson();\n      dispatch(toggleCourseFullWizardComponentAction(\"exercise\"));\n    } else if (wizardState === \"exercise\") {\n      saveExercise();\n      dispatch(toggleCourseFullWizardComponentAction(\"quiz\"));\n    } else if (wizardState === \"quiz\") {\n      saveQuiz();\n      dispatch(toggleCourseFullWizardComponentAction(\"lesson\"));\n    } else if (wizardState === \"exam\") {\n    }\n  };\n  const saveAndExam = () => {\n    saveQuiz();\n    dispatch(toggleCourseFullWizardComponentAction(\"exam\"));\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n  }, []);\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      <div>\n        <h1>Course Wizard</h1>\n        <p>\n          Create a course using this course wizard. At any point, you may save\n          and exit.\n        </p>\n      </div>\n\n      {courseIDState.length === 0 ? (\n        <div>\n          <div>\n            <h3>Course Name</h3>\n            <input id=\"tbCourseName\" type=\"text\" placeholder=\"Name\" />\n          </div>\n          <div>\n            <h3>Access</h3>\n            <p>\n              Course is automatically made private. If you would like to make\n              public, go to your Settings under \"Courses\"\n            </p>\n          </div>\n          <div>\n            <h3>Description</h3>\n            <p>\n              Provide a description on what your course is about and what it\n              covers.\n            </p>\n            <textarea\n              id=\"taCourseDesc\"\n              placeholder=\"Type Description Here..\"\n            ></textarea>\n          </div>\n        </div>\n      ) : null}\n\n      <hr />\n\n      {/* Form Wizard */}\n      <div>{handleFormWizard()}</div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport DashFooter from \"../Dash/DashFooter\";\nimport RandomString from \"../../RandomString\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { Sortable } from \"react-sortablejs\";\n\nimport {\n  toggleCourseTypeEditAction,\n  storeShortOptionsAction,\n  toggleExerciseTypeOptionAction,\n  storeQuizComponentsAction,\n  storeTeacherCourseGeneralInfoAction,\n  toggleNewLessonFormAction,\n  storeLessonCountAction,\n  storeSingleCourseLessonsAction,\n  toggleEditLessonFormAction,\n  storeSingleCourseLessonAction,\n  storeSingleCourseExersAction,\n  storeSingleCourseExerAction,\n  storeSingleCourseQuizzesAction,\n} from \"../../../redux/actions\";\nimport { courses_Collection } from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nimport CourseEditWizardStyles from \"./CourseEditWizardStyles.css\";\n\nexport default function CourseEditWizard() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const toggleCourseTypeState = useSelector(\n    (state) => state.toggleCourseTypeEditReducer\n  );\n  const toggleNewCompFormState = useSelector(\n    (state) => state.toggleNewLessonFormReducer\n  );\n  const toggleEditCompFormState = useSelector(\n    (state) => state.toggleEditLessonFormReducer\n  );\n  const exerciseTypeState = useSelector(\n    (state) => state.toggleExerciseTypeOptionReducer\n  );\n\n  const courses = useSelector(\n    (state) => state.storeTeacherCourseGeneralInfoReducer\n  );\n\n  const course = useSelector((state) => state.storeSingleCourseReducer);\n  const lessons = useSelector((state) => state.storeSingleCourseLessonsReducer);\n  const exercises = useSelector((state) => state.storeSingleCourseExersReducer);\n  const quizzes = useSelector((state) => state.storeSingleCourseQuizzesReducer);\n  // Extras\n  const options = useSelector((state) => state.storeShortOptionsReducer);\n  const compCount = useSelector((state) => state.storeLessonCountReducer);\n  const editLesson = useSelector(\n    (state) => state.storeSingleCourseLessonReducer\n  );\n  const editExer = useSelector((state) => state.storeSingleCourseExerReducer);\n\n  const quizComponents = useSelector(\n    (state) => state.storeQuizComponentsReducer\n  );\n\n  const handleCourseType = () => {\n    if (toggleCourseTypeState === \"lessons\") {\n      return (\n        <div>\n          <div>\n            <h3>Lessons</h3>\n            <p>\n              Choose or change the order of any lesson displayed below. Keep in\n              mind that changing the order of the Lessons does not change the\n              order of the Exercises or Quizzes.\n            </p>\n            <br />\n            <button onClick={() => dispatch(toggleNewLessonFormAction())}>\n              {toggleNewCompFormState ? \"Close\" : \"Add New Lesson\"}\n            </button>\n            {toggleNewCompFormState ? <div>{handleNewComp()}</div> : null}\n            {toggleEditCompFormState ? <div>{handleEditComp()}</div> : null}\n            <hr />\n            {/* Lesson List */}\n            <ul id=\"lessons\">\n              {lessons.map((lesson, i) => {\n                return (\n                  <li\n                    id={lesson.id}\n                    onDragEnd={dragEnd}\n                    className=\"draggable\"\n                    key={i}\n                  >\n                    <FontAwesomeIcon className=\"dragIcon\" icon={faBars} />\n                    {lesson.Name}\n                    <button id={lesson.id} className=\"btn btnRemove\">\n                      Remove\n                    </button>\n                    <button\n                      id={lesson.id}\n                      onClick={onCompEditClick}\n                      className=\"btn btnEdit\"\n                    >\n                      Edit\n                    </button>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n      );\n    } else if (toggleCourseTypeState === \"exercises\") {\n      return (\n        <div>\n          <div>\n            <h3>Exercises</h3>\n            <p>\n              Choose or change the order of any exercise displayed below. Keep\n              in mind that changing the order of the Exercises does not change\n              the order of the Lessons or Quizzes.\n            </p>\n            <br />\n            <button onClick={() => dispatch(toggleNewLessonFormAction())}>\n              {toggleNewCompFormState ? \"Close\" : \"Add New Exercise\"}\n            </button>\n            {toggleNewCompFormState ? <div>{handleNewComp()}</div> : null}\n            {toggleEditCompFormState ? <div>{handleEditComp()}</div> : null}\n            <hr />\n            {/* Lesson List */}\n            <ul id=\"exercises\">\n              {exercises.map((exer, i) => {\n                return (\n                  <li\n                    id={exer.id}\n                    onDragEnd={dragEnd}\n                    className=\"draggable\"\n                    key={i}\n                  >\n                    <FontAwesomeIcon className=\"dragIcon\" icon={faBars} />\n                    {exer.Name}\n                    <button id={exer.id} className=\"btn btnRemove\">\n                      Remove\n                    </button>\n                    <button\n                      id={exer.id}\n                      onClick={onCompEditClick}\n                      className=\"btn btnEdit\"\n                    >\n                      Edit\n                    </button>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n      );\n    } else if (toggleCourseTypeState === \"quizzes\") {\n      return (\n        <div>\n          <div>\n            <h3>Quizzes</h3>\n            <p>\n              Choose or change the order of any quiz displayed below. Keep in\n              mind that changing the order of the Quizzes does not change the\n              order of the Lessons or Exercises.\n            </p>\n            <br />\n            <button onClick={() => dispatch(toggleNewLessonFormAction())}>\n              {toggleNewCompFormState ? \"Close\" : \"Add New Quiz\"}\n            </button>\n            {toggleNewCompFormState ? <div>{handleNewComp()}</div> : null}\n            <hr />\n            {/* Lesson List */}\n            <ul id=\"quizzes\">\n              {quizzes.map((quiz, i) => {\n                return (\n                  <li\n                    id={quiz.id}\n                    onDragEnd={dragEnd}\n                    className=\"draggable\"\n                    key={i}\n                  >\n                    <FontAwesomeIcon className=\"dragIcon\" icon={faBars} />\n                    {quiz.Name}\n                    <button id={quiz.id} className=\"btn btnRemove\">\n                      Remove\n                    </button>\n                    <button\n                      id={quiz.id}\n                      onClick={onCompEditClick}\n                      className=\"btn btnEdit\"\n                    >\n                      Edit\n                    </button>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n      );\n    }\n  };\n  // Lesson Stuffs\n  const handleOptions = () => {\n    return options.map((opt, i) => {\n      return (\n        <div key={i}>\n          <input\n            id={`tbShortOption${i}`}\n            type=\"text\"\n            placeholder={`Option ${i + 1}`}\n          />\n          <button id={opt} onClick={removeOption}>\n            -\n          </button>\n        </div>\n      );\n    });\n  };\n  const handleEditOptions = () => {\n    return options.map((opt, i) => {\n      return (\n        <div key={i}>\n          <input id={`tbShortOption${i}`} type=\"text\" defaultValue={opt} />\n          <button id={opt} onClick={removeOption}>\n            -\n          </button>\n        </div>\n      );\n    });\n  };\n  const removeOption = (event) => {\n    const optionText = event.target.getAttribute(\"id\");\n\n    const allOptions = [...options];\n    const filtered = allOptions.filter((opt) => opt !== optionText);\n\n    dispatch(storeShortOptionsAction(filtered));\n  };\n  const addOption = () => {\n    const allOptions = [...options];\n    const optionCount = allOptions.length;\n\n    allOptions.push(`Option ${optionCount + 1}`);\n\n    dispatch(storeShortOptionsAction(allOptions));\n  };\n  const getCompCount = () => {\n    if (toggleCourseTypeState === \"lessons\") {\n      courses_Collection\n        .doc(course.id)\n        .collection(\"Lessons\")\n        .get()\n        .then((snapshot) => {\n          const count = snapshot.size;\n          dispatch(storeLessonCountAction(count));\n        })\n        .catch((err) => console.log(err));\n    } else if (toggleCourseTypeState === \"exercises\") {\n      courses_Collection\n        .doc(course.id)\n        .collection(\"Exercises\")\n        .get()\n        .then((snapshot) => {\n          const count = snapshot.size;\n          dispatch(storeLessonCountAction(count));\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  // Exercise Stuffs\n  const handleExerciseWizard = () => {\n    if (exerciseTypeState === \"textual\") {\n      return (\n        <div>\n          <h2>Textual Exercise</h2>\n          <p>\n            Creating a textual exercise requires a prompt. This can be in the\n            form of a question, sentence, or a paragraph. We recommend to\n            provide a detailed prompt for the student to provide and adequate\n            response.\n          </p>\n          <br />\n          <textarea\n            id=\"taTextualExer\"\n            placeholder=\"Type prompt here..\"\n          ></textarea>\n        </div>\n      );\n    }\n  };\n  const handleEditExerciseWizard = () => {\n    if (exerciseTypeState === \"textual\") {\n      return (\n        <div>\n          <h2>Textual Exercise</h2>\n          <p>\n            Creating a textual exercise requires a prompt. This can be in the\n            form of a question, sentence, or a paragraph. We recommend to\n            provide a detailed prompt for the student to provide and adequate\n            response.\n          </p>\n          <br />\n          <textarea id=\"taTextualExer\" defaultValue={editExer.Text}></textarea>\n        </div>\n      );\n    }\n  };\n  const chooseExercise = () => {\n    const textualOpt = document.querySelector(\"#raTextual\").checked;\n\n    if (textualOpt) {\n      dispatch(toggleExerciseTypeOptionAction(\"textual\"));\n    }\n  };\n\n  // Quiz Stuffs\n  const handleQuizComponents = () => {\n    return quizComponents.map((q, i) => {\n      if (q.Type === \"multiple\") {\n        return (\n          <div\n            style={{\n              border: \"3px solid blue\",\n              padding: \"2%\",\n              margin: \"2%\",\n              backgroundColor: \"rgba(0,0,255,0.2)\",\n            }}\n          >\n            <h3>Multiple Choice</h3>\n            <div>\n              <h4>Question</h4>\n              <input id={`tbQui${i}`} type=\"text\" placeholder=\"Question\" />\n            </div>\n            <div>\n              <h4>Options</h4>\n              {q.Options.map((opt, a) => {\n                return (\n                  <div>\n                    <input\n                      id={`tbOpt${i}-${a}`}\n                      type=\"text\"\n                      placeholder={opt}\n                    />\n                  </div>\n                );\n              })}\n            </div>\n            <div>\n              <h4>Answer</h4>\n              <input id={`tbAns${i}`} type=\"text\" placeholder=\"Answer\" />\n            </div>\n\n            <div>\n              <button id={q.TempID} onClick={removeQuizComponent}>\n                Remove\n              </button>\n            </div>\n          </div>\n        );\n      } else if (q.Type === \"short\") {\n        return (\n          <div\n            style={{\n              border: \"3px solid green\",\n              padding: \"2%\",\n              margin: \"2%\",\n              backgroundColor: \"rgba(0,255,0,0.2)\",\n            }}\n          >\n            <h3>Short Answer</h3>\n            <div>\n              <h4>Prompt</h4>\n              <textarea\n                id={`taShortPrompt${i}`}\n                placeholder=\"Prompt\"\n              ></textarea>\n            </div>\n            <div>\n              <h4>Answer</h4>\n              <input id={`tbShortAns${i}`} type=\"text\" placeholder=\"Answer\" />\n            </div>\n\n            <div>\n              <button id={q.TempID} onClick={removeQuizComponent}>\n                Remove\n              </button>\n            </div>\n          </div>\n        );\n      } else if (q.Type === \"long\") {\n        return (\n          <div\n            style={{\n              border: \"3px solid red\",\n              padding: \"2%\",\n              margin: \"2%\",\n              backgroundColor: \"rgba(255,0,0,0.2)\",\n            }}\n          >\n            <h3>Long Answer</h3>\n            <div>\n              <h4>Prompt</h4>\n              <textarea id={`taLongPrompt${i}`} placeholder=\"Prompt\"></textarea>\n            </div>\n            <div>\n              <h4>Answer</h4>\n              <textarea id={`taLongAns${i}`} placeholder=\"Answer\"></textarea>\n            </div>\n\n            <div>\n              <button id={q.TempID} onClick={removeQuizComponent}>\n                Remove\n              </button>\n            </div>\n          </div>\n        );\n      } else if (q.Type === \"boolean\") {\n        return (\n          <div\n            style={{\n              border: \"3px solid purple\",\n              padding: \"2%\",\n              margin: \"2%\",\n              backgroundColor: \"rgba(50.2,0,50.2,0.2)\",\n            }}\n          >\n            <h3>True or False</h3>\n            <div>\n              <h4>Statement</h4>\n              <input id={`tbBoolStatement${i}`} placeholder=\"Statement\" />\n            </div>\n            <div>\n              <h4>Answer</h4>\n              <input type=\"radio\" id=\"raTrue\" name=\"raBool\" value=\"true\" />\n              <label for=\"raTrue\">True</label>\n              <br />\n              <input type=\"radio\" id=\"raFalse\" name=\"raBool\" value=\"false\" />\n              <label for=\"raFalse\">False</label>\n            </div>\n\n            <div>\n              <button id={q.TempID} onClick={removeQuizComponent}>\n                Remove\n              </button>\n            </div>\n          </div>\n        );\n      }\n    });\n  };\n  const removeQuizComponent = (event) => {\n    const compID = event.target.getAttribute(\"id\");\n    const allQuizComps = [...quizComponents];\n\n    const filtered = allQuizComps.filter((comp) => comp.TempID !== compID);\n    console.log(filtered);\n    dispatch(storeQuizComponentsAction(filtered));\n  };\n\n  // Extra Stuffs\n  const handleNewComp = () => {\n    if (toggleCourseTypeState === \"lessons\") {\n      return (\n        <div>\n          <h2>Create a Lesson</h2>\n          <br />\n\n          {/* Lesson Name */}\n          <div>\n            <h3>Lesson Name</h3>\n            <input id=\"tbLessonName\" type=\"text\" placeholder=\"Lesson Name\" />\n          </div>\n\n          <br />\n          {/* Upload Video */}\n          <div>\n            <h3>1. Upload a Video Lesson</h3>\n            <p>Video Upload Here</p>\n          </div>\n\n          {/* Insert Text */}\n          <div>\n            <h3>2. Type your Textual Lesson</h3>\n            <p>\n              The text provided will be displayed beneath the video lesson. It\n              is recommended to provide textual lesson reflecting the video for\n              students who may experience auditory issues.\n            </p>\n            <div>\n              <textarea\n                id=\"taTextualLesson\"\n                placeholder=\"Type Textual Lesson here..\"\n              ></textarea>\n            </div>\n          </div>\n\n          {/* Insert Question */}\n          <div>\n            <h3>3. Provide a Lesson Question</h3>\n            <p>\n              To make sure each student understands the lesson, we are providing\n              this section where the teacher can insert a question. Not\n              providing a question will allow the student to continue to the\n              next component as soon as the video is over. However, answering\n              the question will also be required to move on, if one was\n              provided.\n            </p>\n            <br />\n            <div>\n              <label>Question</label>\n              <input id=\"tbShortQuestion\" type=\"text\" placeholder=\"Question\" />\n            </div>\n            <div>\n              <label>Options</label>\n              {handleOptions()}\n              <button onClick={addOption}>+</button>\n            </div>\n            <div>\n              <label>Answer</label>\n              <input id=\"tbShortAnswer\" type=\"text\" placeholder=\"Answer\" />\n            </div>\n          </div>\n\n          <br />\n          {/* Lesson Options */}\n          <div>\n            <button onClick={saveComp}>Save</button>\n          </div>\n        </div>\n      );\n    } else if (toggleCourseTypeState === \"exercises\") {\n      return (\n        <div>\n          <h2>Create Exercise</h2>\n          <p>\n            Exercises can be used to further enhance the lesson that was\n            provided. The exercise will be named after the lesson that was\n            created beforehand.\n          </p>\n          <br />\n          {/* Choose lesson to attach to */}\n          <div>\n            <h3>Exercise Name</h3>\n            <p>\n              Each exercise should be partnered with a lesson. Before you\n              continue, please consider creating a lesson first to provide a\n              secure flow to the course.\n            </p>\n            <br />\n            {/* Show lessons without an exercise */}\n            <input id=\"tbNewExerName\" type=\"text\" placeholder=\"Exercise Name\" />\n          </div>\n\n          {/* Exercise Types */}\n\n          <div>\n            <h3>Choose your exercise type:</h3>\n            <p>\n              Below, you will find different exercise type options. Hover over\n              the image to get a glimpse of what the student would be doing.\n            </p>\n            <br />\n            <input\n              onChange={chooseExercise}\n              type=\"radio\"\n              id=\"raTextual\"\n              name=\"raExercises\"\n              value=\"textual\"\n              checked=\"checked\"\n            />\n            <label for=\"textual\">Textual</label>\n          </div>\n\n          {/* Here is the mini wizard for exercises depending on what the user chooses. */}\n          <div>{handleExerciseWizard()}</div>\n\n          <div>\n            <button onClick={saveComp}>Save</button>\n          </div>\n        </div>\n      );\n    } else if (toggleCourseTypeState === \"quizzes\") {\n      return (\n        <div>\n          <h2>Create Quiz</h2>\n          <p>\n            Quizzes are meant to be a way for students to test their knowledge\n            on what they learned in the lesson and exercise.\n          </p>\n          <br />\n          <div>\n            <h3>Quiz Name</h3>\n            <p>\n              Each quiz should be partnered with a lesson and exercise. Before\n              you continue, please consider creating a lesson and exercise first\n              to provide a secure flow to the course.\n            </p>\n\n            <input id=\"tbQuizName\" type=\"text\" placeholder=\"Quiz Name\" />\n          </div>\n\n          {/* Quiz Component Picker */}\n          <div\n            style={{\n              border: \"3px solid black\",\n              width: \"15%\",\n              padding: \"1%\",\n              backgroundColor: \"rgba(0,0,0,0.15)\",\n              float: \"right\",\n              marginRight: \"2%\",\n            }}\n          >\n            <h3>Quiz Component Types</h3>\n            <div>\n              <button\n                onClick={() => {\n                  const tempID = `comp${RandomString()}`;\n                  const obj = {\n                    TempID: tempID,\n                    Type: \"multiple\",\n                    Question: \"Question\",\n                    Options: [\"Option 1\", \"Option 2\", \"Option 3\", \"Option 4\"],\n                    Answer: \"Answer\",\n                  };\n                  const allObjs = [...quizComponents];\n                  allObjs.push(obj);\n                  dispatch(storeQuizComponentsAction(allObjs));\n                }}\n              >\n                Multiple Choice\n              </button>\n              <br />\n              <button\n                onClick={() => {\n                  const tempID = `comp${RandomString()}`;\n                  const obj = {\n                    TempID: tempID,\n                    Type: \"short\",\n                    Text: \"Prompt\",\n                    Answer: \"\",\n                  };\n                  const allObjs = [...quizComponents];\n                  allObjs.push(obj);\n                  dispatch(storeQuizComponentsAction(allObjs));\n                }}\n              >\n                Short Answer\n              </button>\n              <br />\n              <button\n                onClick={() => {\n                  const tempID = `comp${RandomString()}`;\n                  const obj = {\n                    TempID: tempID,\n                    Type: \"long\",\n                    Text: \"Prompt\",\n                    Answer: \"\",\n                  };\n                  const allObjs = [...quizComponents];\n                  allObjs.push(obj);\n                  dispatch(storeQuizComponentsAction(allObjs));\n                }}\n              >\n                Long Answer\n              </button>\n              <br />\n              <button\n                onClick={() => {\n                  const tempID = `comp${RandomString()}`;\n                  const obj = {\n                    TempID: tempID,\n                    Type: \"boolean\",\n                    Statement: \"\",\n                    Answer: \"\",\n                  };\n                  const allObjs = [...quizComponents];\n                  allObjs.push(obj);\n                  dispatch(storeQuizComponentsAction(allObjs));\n                }}\n              >\n                True / False\n              </button>\n            </div>\n          </div>\n\n          {/* Form */}\n          <div>\n            <h3>Quiz Editor</h3>\n            {/* Components */}\n            <div>{handleQuizComponents()}</div>\n            <br />\n\n            {/* Quiz Options */}\n            <button>Save</button>\n          </div>\n        </div>\n      );\n    }\n  };\n  const handleEditComp = () => {\n    if (toggleCourseTypeState === \"lessons\") {\n      return (\n        <div>\n          <h2>Edit Lesson</h2>\n          <br />\n\n          {/* Lesson Name */}\n          <div>\n            <h3>Lesson Name</h3>\n            <input\n              id=\"tbLessonName\"\n              type=\"text\"\n              defaultValue={editLesson.Name}\n            />\n          </div>\n\n          <br />\n          {/* Upload Video */}\n          <div>\n            <h3>1. Upload a Video Lesson</h3>\n            <p>Video Upload Here</p>\n          </div>\n\n          {/* Insert Text */}\n          <div>\n            <h3>2. Type your Textual Lesson</h3>\n            <p>\n              The text provided will be displayed beneath the video lesson. It\n              is recommended to provide textual lesson reflecting the video for\n              students who may experience auditory issues.\n            </p>\n            <div>\n              <textarea\n                id=\"taTextualLesson\"\n                defaultValue={editLesson.Text}\n              ></textarea>\n            </div>\n          </div>\n\n          {/* Insert Question */}\n          <div>\n            <h3>3. Provide a Lesson Question</h3>\n            <p>\n              To make sure each student understands the lesson, we are providing\n              this section where the teacher can insert a question. Not\n              providing a question will allow the student to continue to the\n              next component as soon as the video is over. However, answering\n              the question will also be required to move on, if one was\n              provided.\n            </p>\n            <br />\n            <div>\n              <label>Question</label>\n              <input\n                id=\"tbShortQuestion\"\n                type=\"text\"\n                defaultValue={editLesson.Question}\n              />\n            </div>\n            <div>\n              <label>Options</label>\n              {handleEditOptions()}\n              <button onClick={addOption}>+</button>\n            </div>\n            <div>\n              <label>Answer</label>\n              <input\n                id=\"tbShortAnswer\"\n                type=\"text\"\n                defaultValue={editLesson.Answer}\n              />\n            </div>\n          </div>\n\n          <br />\n          {/* Lesson Options */}\n          <div>\n            <button onClick={saveEditComp}>Save</button>\n          </div>\n        </div>\n      );\n    } else if (toggleCourseTypeState === \"exercises\") {\n      return (\n        <div>\n          <h2>Create Exercise</h2>\n          <p>\n            Exercises can be used to further enhance the lesson that was\n            provided. The exercise will be named after the lesson that was\n            created beforehand.\n          </p>\n          <br />\n          {/* Choose lesson to attach to */}\n          <div>\n            <h3>Choose the lesson to match with:</h3>\n            <p>\n              Each exercise should be partnered with a lesson. Before you\n              continue, please consider creating a lesson first to provide a\n              secure flow to the course.\n            </p>\n            <br />\n            {/* Show lessons without an exercise */}\n            <input\n              id=\"tbNewExerName\"\n              type=\"text\"\n              defaultValue={editExer.Name}\n            />\n          </div>\n\n          {/* Exercise Types */}\n\n          <div>\n            <h3>Choose your exercise type:</h3>\n            <p>\n              Below, you will find different exercise type options. Hover over\n              the image to get a glimpse of what the student would be doing.\n            </p>\n            <br />\n            <input\n              onChange={chooseExercise}\n              type=\"radio\"\n              id=\"raTextual\"\n              name=\"raExercises\"\n              value=\"textual\"\n              checked=\"checked\"\n            />\n            <label for=\"textual\">Textual</label>\n          </div>\n\n          {/* Here is the mini wizard for exercises depending on what the user chooses. */}\n          <div>{handleEditExerciseWizard()}</div>\n\n          <div>\n            <button onClick={saveEditComp}>Save</button>\n          </div>\n        </div>\n      );\n    }\n  };\n  const onCompEditClick = (event) => {\n    if (toggleCourseTypeState === \"lessons\") {\n      dispatch(toggleEditLessonFormAction());\n      const lessonID = event.target.getAttribute(\"id\");\n      let tempLesson = {};\n      lessons.forEach((less) => {\n        if (less.id === lessonID) {\n          tempLesson = less;\n        }\n      });\n\n      dispatch(storeShortOptionsAction(tempLesson.Options));\n\n      dispatch(storeSingleCourseLessonAction(tempLesson));\n    } else if (toggleCourseTypeState === \"exercises\") {\n      dispatch(toggleEditLessonFormAction());\n      const exerID = event.target.getAttribute(\"id\");\n      let tempExer = {};\n      exercises.forEach((exer) => {\n        if (exer.id === exerID) {\n          tempExer = exer;\n        }\n      });\n\n      dispatch(storeSingleCourseExerAction(tempExer));\n    }\n  };\n  const saveComp = () => {\n    if (toggleCourseTypeState === \"lessons\") {\n      const lessonName = document.querySelector(\"#tbLessonName\").value;\n\n      //   Get Video Lesson Path here\n\n      // Get Textual Lesson\n      const lessonText = document.querySelector(\"#taTextualLesson\").value;\n\n      // Get Question components\n      const shortQui = document.querySelector(\"#tbShortQuestion\").value;\n      const shortAns = document.querySelector(\"#tbShortAnswer\").value;\n      const opts = [];\n      for (let i = 0; i < options.length; i = i + 1) {\n        const opt = document.querySelector(`#tbShortOption${i}`).value;\n        opts.push(opt);\n      }\n\n      // Save to DB\n      const rand1 = RandomString();\n      const rand2 = RandomString();\n      const lessonID = `Lesson${rand1}${rand2}`;\n\n      const courseID = course.id;\n\n      courses_Collection\n        .doc(courseID)\n        .collection(\"Lessons\")\n        .get()\n        .then((snapshot) => {\n          const lessonCount = snapshot.size;\n          courses_Collection\n            .doc(courseID)\n            .collection(\"Lessons\")\n            .doc(lessonID)\n            .set({\n              Name: lessonName,\n              Video: \"path\",\n              Text: lessonText,\n              Question: shortQui,\n              Answer: shortAns,\n              Options: [...opts],\n              Order: lessonCount + 1,\n            })\n            .catch((err) => console.log(err));\n        })\n        .catch((err) => console.log(err));\n\n      // Dispatch\n      dispatch(toggleNewLessonFormAction());\n\n      courses_Collection\n        .doc(courseID)\n        .collection(\"Lessons\")\n        .get()\n        .then((snapshot) => {\n          const lessonCount = snapshot.size;\n          const allLessons = [...lessons];\n          allLessons.push({\n            id: lessonID,\n            Name: lessonName,\n            Video: \"path\",\n            Text: lessonText,\n            Question: shortQui,\n            Answer: shortAns,\n            Options: [...opts],\n            Order: lessonCount,\n          });\n          dispatch(storeSingleCourseLessonsAction(allLessons));\n        })\n        .catch((err) => console.log(err));\n    } else if (toggleCourseTypeState === \"exercises\") {\n      getCompCount();\n      if (exerciseTypeState === \"textual\") {\n        const text = document.querySelector(\"#taTextualExer\").value;\n        // Place lessons name\n        const exerciseName = document.querySelector(\"#tbNewExerName\").value;\n\n        const rand1 = RandomString();\n        const rand2 = RandomString();\n        const exerID = `Exer${rand1}${rand2}`;\n\n        courses_Collection\n          .doc(course.id)\n          .collection(\"Exercises\")\n          .get()\n          .then((snapshot) => {\n            const exerCount = snapshot.size;\n            courses_Collection\n              .doc(course.id)\n              .collection(\"Exercises\")\n              .doc(exerID)\n              .set({\n                Type: \"textual\",\n                Text: text,\n                Name: exerciseName,\n                Order: exerCount,\n              })\n              .catch((err) => console.log(err));\n          })\n          .catch((err) => console.log(err));\n\n        // Dispatch\n\n        courses_Collection\n          .doc(course.id)\n          .collection(\"Exercises\")\n          .get()\n          .then((snapshot) => {\n            const exerCount = snapshot.size;\n            const allExers = [...exercises];\n            allExers.push({\n              id: exerID,\n              Type: \"textual\",\n              Text: text,\n              Name: exerciseName,\n              Order: exerCount + 1,\n            });\n            dispatch(toggleNewLessonFormAction());\n            dispatch(storeSingleCourseExersAction(allExers));\n          })\n          .catch((err) => console.log(err));\n      }\n    } else if (toggleCourseTypeState === \"quizzes\") {\n      let newComponents = [];\n      getCompCount();\n\n      const quizName = document.querySelector(\"#tbQuizName\").value;\n      quizComponents.forEach((q, i) => {\n        if (q.Type === \"multiple\") {\n          const qui = document.querySelector(`#tbQui${i}`).value;\n          const opts = [];\n          q.Options.forEach((opt, a) => {\n            const newOpt = document.querySelector(`#tbOpt${i}-${a}`).value;\n            opts.push(newOpt);\n          });\n          const ans = document.querySelector(`#tbAns${i}`).value;\n\n          q = {\n            ...q,\n            Question: qui,\n            Options: [...opts],\n            Answer: ans,\n          };\n\n          newComponents.push(q);\n        } else if (q.Type === \"short\") {\n          const shortText = document.querySelector(`#taShortPrompt${i}`).value;\n          const shortAns = document.querySelector(`#tbShortAns${i}`).value;\n\n          q = {\n            ...q,\n            Text: shortText,\n            Answer: shortAns,\n          };\n\n          newComponents.push(q);\n        } else if (q.Type === \"long\") {\n          const longText = document.querySelector(`#taLongPrompt${i}`).value;\n          const longAns = document.querySelector(`#taLongAns${i}`).value;\n\n          q = {\n            ...q,\n            Text: longText,\n            Answer: longAns,\n          };\n\n          newComponents.push(q);\n        } else if (q.Type === \"boolean\") {\n          const statement = document.querySelector(`#tbBoolStatement${i}`)\n            .value;\n          let answer = \"\";\n          const raTrue = document.querySelector(\"#raTrue\").checked;\n          const raFalse = document.querySelector(\"#raFalse\").checked;\n\n          if (raTrue) {\n            answer = \"true\";\n          } else if (raFalse) {\n            answer = \"false\";\n          }\n\n          q = {\n            ...q,\n            Statement: statement,\n            Answer: answer,\n          };\n\n          newComponents.push(q);\n        }\n      });\n\n      // Save to DB\n      const rand1 = RandomString();\n      const rand2 = RandomString();\n      const quizID = `Quiz${rand1}${rand2}`;\n\n      courses_Collection\n        .doc(course.id)\n        .collection(\"Quizzes\")\n        .get()\n        .then((snapshot) => {\n          const quizCount = snapshot.size;\n          courses_Collection\n            .doc(course.id)\n            .collection(\"Quizzes\")\n            .doc(quizID)\n            .set({\n              Name: quizName,\n              Order: quizCount + 1,\n            })\n            .catch((err) => console.log(err));\n        })\n        .catch((err) => console.log(err));\n\n      quizComponents.forEach((q, i) => {\n        const rand3 = RandomString();\n        const rand4 = RandomString();\n        const compID = `Comp${rand3}${rand4}`;\n\n        if (q.Type === \"multiple\") {\n          const qui = document.querySelector(`#tbQui${i}`).value;\n          const opts = [];\n          q.Options.forEach((opt, a) => {\n            const newOpt = document.querySelector(`#tbOpt${i}-${a}`).value;\n            opts.push(newOpt);\n          });\n          const ans = document.querySelector(`#tbAns${i}`).value;\n\n          courses_Collection\n            .doc(course.id)\n            .collection(\"Quizzes\")\n            .doc(quizID)\n            .collection(\"Components\")\n            .doc(compID)\n            .set({\n              Type: q.Type,\n              Question: qui,\n              Options: [...opts],\n              Answer: ans,\n            })\n            .catch((err) => console.log(err));\n        } else if (q.Type === \"short\") {\n          const shortText = document.querySelector(`#taShortPrompt${i}`).value;\n          const shortAns = document.querySelector(`#tbShortAns${i}`).value;\n\n          courses_Collection\n            .doc(course.id)\n            .collection(\"Quizzes\")\n            .doc(quizID)\n            .collection(\"Components\")\n            .doc(compID)\n            .set({\n              Type: q.Type,\n              Text: shortText,\n              Answer: shortAns,\n            })\n            .catch((err) => console.log(err));\n        } else if (q.Type === \"long\") {\n          const longText = document.querySelector(`#taLongPrompt${i}`).value;\n          const longAns = document.querySelector(`#taLongAns${i}`).value;\n\n          courses_Collection\n            .doc(course.id)\n            .collection(\"Quizzes\")\n            .doc(quizID)\n            .collection(\"Components\")\n            .doc(compID)\n            .set({\n              Type: q.Type,\n              Text: longText,\n              Answer: longAns,\n            })\n            .catch((err) => console.log(err));\n        } else if (q.Type === \"boolean\") {\n          const statement = document.querySelector(`#tbBoolStatement${i}`)\n            .value;\n          let answer = \"\";\n          const raTrue = document.querySelector(\"#raTrue\").checked;\n          const raFalse = document.querySelector(\"#raFalse\").checked;\n\n          if (raTrue) {\n            answer = \"true\";\n          } else if (raFalse) {\n            answer = \"false\";\n          }\n          courses_Collection\n            .doc(course.id)\n            .collection(\"Quizzes\")\n            .doc(quizID)\n            .collection(\"Components\")\n            .doc(compID)\n            .set({\n              Type: q.Type,\n              Statement: statement,\n              Answer: answer,\n            })\n            .catch((err) => console.log(err));\n        }\n      });\n\n      courses_Collection\n        .doc(course.id)\n        .collection(\"Quizzes\")\n        .get()\n        .then((snapshot) => {\n          const quizCount = snapshot.size;\n          const allQuizzes = [...quizzes];\n          allQuizzes.push({\n            id: quizID,\n            Name: quizName,\n            Order: quizCount + 1,\n          });\n        })\n        .catch((err) => console.log(err));\n\n      dispatch(storeQuizComponentsAction([]));\n      dispatch(toggleNewLessonFormAction());\n      dispatch(storeSingleCourseQuizzesAction());\n    }\n  };\n  const saveEditComp = () => {\n    if (toggleCourseTypeState === \"lessons\") {\n      const lessonName = document.querySelector(\"#tbLessonName\").value;\n      const lessonText = document.querySelector(\"#taTextualLesson\").value;\n\n      const lessonQui = document.querySelector(\"#tbShortQuestion\").value;\n      const lessonOpts = [];\n      for (let i = 0; i < options.length; i = i + 1) {\n        const opt = document.querySelector(`#tbShortOption${i}`).value;\n        lessonOpts.push(opt);\n      }\n\n      const lessonAns = document.querySelector(\"#tbShortAnswer\").value;\n\n      // Save to DB\n      courses_Collection\n        .doc(course.id)\n        .collection(\"Lessons\")\n        .doc(editLesson.id)\n        .update({\n          Name: lessonName,\n          Text: lessonText,\n          Question: lessonQui,\n          Options: lessonOpts,\n          Answer: lessonAns,\n          Video: \"path\",\n        })\n        .catch((err) => console.log(err));\n\n      // Dispatch\n      let allLessons = [...lessons];\n      const newLesson = {\n        ...editLesson,\n        id: editLesson.id,\n        Name: lessonName,\n        Text: lessonText,\n        Question: lessonQui,\n        Options: lessonOpts,\n        Answer: lessonAns,\n        Video: \"path\",\n      };\n\n      let filtered = allLessons.filter((l) => l.id !== editLesson.id);\n      filtered.push(newLesson);\n\n      filtered.sort((a, b) => (a.Order > b.Order ? 1 : -1));\n\n      dispatch(storeSingleCourseLessonsAction(filtered));\n\n      dispatch(toggleEditLessonFormAction());\n    } else if (toggleCourseTypeState === \"exercises\") {\n      if (exerciseTypeState === \"textual\") {\n        const text = document.querySelector(\"#taTextualExer\").value;\n        // Place lessons name\n        const exerciseName = document.querySelector(\"#tbNewExerName\").value;\n\n        const exerID = editExer.id;\n\n        const exerCount = editExer.Order;\n\n        courses_Collection\n          .doc(course.id)\n          .collection(\"Exercises\")\n          .doc(exerID)\n          .update({\n            Type: \"textual\",\n            Text: text,\n            Name: exerciseName,\n          })\n          .catch((err) => console.log(err));\n\n        // Dispatch\n\n        const allExers = [...exercises];\n        const newExer = {\n          ...editExer,\n          id: exerID,\n          Type: \"textual\",\n          Text: text,\n          Name: exerciseName,\n          Order: exerCount,\n        };\n\n        let filtered = allExers.filter((l) => l.id !== editExer.id);\n        filtered.push(newExer);\n\n        filtered.sort((a, b) => (a.Order > b.Order ? 1 : -1));\n\n        dispatch(storeSingleCourseExersAction(filtered));\n\n        dispatch(toggleEditLessonFormAction());\n      }\n    }\n\n    // Quiz Stuffs\n  };\n  const dragComponents = () => {\n    if (toggleCourseTypeState === \"lessons\") {\n      new Sortable(document.querySelector(\"#lessons\"));\n    } else if (toggleCourseTypeState === \"exercises\") {\n      new Sortable(document.querySelector(\"#exercises\"));\n    } else if (toggleCourseTypeState === \"quizzes\") {\n      new Sortable(document.querySelector(\"#quizzes\"));\n    }\n  };\n  const dragEnd = () => {\n    if (toggleCourseTypeState === \"lessons\") {\n      let filteredLessons = [];\n      const allLessons = document.querySelectorAll(\".draggable\");\n\n      let count = 1;\n      allLessons.forEach((less) => {\n        const lessID = less.id;\n        const lessonState = [...lessons];\n\n        lessonState.forEach((lesson) => {\n          if (lesson.id === lessID) {\n            lesson = {\n              ...lesson,\n              Order: count,\n            };\n            filteredLessons.push(lesson);\n\n            // Save to DB\n            courses_Collection\n              .doc(course.id)\n              .collection(\"Lessons\")\n              .doc(lessID)\n              .update({ Order: count })\n              .catch((err) => console.log(err));\n          }\n        });\n\n        count = count + 1;\n      });\n    } else if (toggleCourseTypeState === \"exercises\") {\n      let filteredExers = [];\n      const allExers = document.querySelectorAll(\".draggable\");\n\n      let count = 1;\n      allExers.forEach((exer) => {\n        const exerID = exer.id;\n        const exerState = [...exercises];\n\n        exerState.forEach((ex) => {\n          if (ex.id === exerID) {\n            ex = {\n              ...ex,\n              Order: count,\n            };\n            filteredExers.push(ex);\n\n            // Save to DB\n            courses_Collection\n              .doc(course.id)\n              .collection(\"Exercises\")\n              .doc(exerID)\n              .update({ Order: count })\n              .catch((err) => console.log(err));\n          }\n        });\n\n        count = count + 1;\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n\n    dragComponents();\n  }, []);\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      {/* Content */}\n      <div>\n        {/* Header */}\n        <div>\n          <h1>Course Edit Wizard</h1>\n          <p>Choose the course component type to view and edit.</p>\n          <br />\n          <h2>Course Details</h2>\n          <h3>Course Name</h3>\n          <input\n            id=\"tbCourseName\"\n            type=\"text\"\n            defaultValue={course.Name}\n          ></input>\n          <br />\n          <h3>Course Description</h3>\n          <textarea id=\"taCourseDesc\" defaultValue={course.Desc}></textarea>\n\n          <hr />\n        </div>\n\n        {/* Wizard */}\n        <div>\n          <button\n            onClick={() => {\n              dispatch(toggleCourseTypeEditAction(\"lessons\"));\n            }}\n          >\n            Lessons\n          </button>\n          <button\n            onClick={() => {\n              dispatch(toggleCourseTypeEditAction(\"exercises\"));\n            }}\n          >\n            Exercises\n          </button>\n          <button\n            onClick={() => {\n              dispatch(toggleCourseTypeEditAction(\"quizzes\"));\n            }}\n          >\n            Quizzes\n          </button>\n          <button>Exam</button>\n          <hr />\n        </div>\n\n        <div>{handleCourseType()}</div>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nexport default class AssignmentBlock extends Component {\n  state = {\n    showAssigned: false,\n  };\n  render() {\n    const { name, due, assignedTo } = this.props;\n    return (\n      <div>\n        <h3>{name}</h3>\n        <p>Due: {due}</p>\n        <button\n          onClick={() => {\n            this.setState({ showAssigned: !this.state.showAssigned });\n          }}\n        >\n          Show Assigned\n        </button>\n        {this.state.showAssigned ? (\n          <ul>\n            {assignedTo.map((to, i) => {\n              return <li>{to}</li>;\n            })}\n          </ul>\n        ) : null}\n        <button>Edit</button>\n      </div>\n    );\n  }\n}\n","import React, { useEffect } from \"react\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport AssignmentBlock from \"./AssignmentBlock\";\nimport DashFooter from \"../Dash/DashFooter\";\n\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\n\nexport default function AssignmentsMain() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n\n  const assignmentState = useSelector(\n    (state) => state.storeTeacherAssignmentsGeneralInfoReducer\n  );\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n  }, []);\n\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      {/* Content */}\n      <div>\n        <div>\n          <input id=\"tbAssSearch\" type=\"text\" placeholder=\"Search\" />\n          <button>Create New Assignment</button>\n        </div>\n        <div>\n          {assignmentState.map((ass, i) => {\n            return <AssignmentBlock key={i} name={ass.Name} due={ass.Due} assignedTo={ass.AssignedTo} /> ;\n          })}\n        </div>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nexport default class MilestoneBlock extends Component {\n  state = {\n    showAssigned: false,\n  };\n  render() {\n    const { name, assignedTo } = this.props;\n    return (\n      <div>\n        <h3>{name}</h3>\n        <button\n          onClick={() =>\n            this.setState({ showAssigned: !this.state.showAssigned })\n          }\n        >\n          Show Assigned\n        </button>\n        {this.state.showAssigned ? (\n          <ul>\n            {assignedTo.map((ass, i) => {\n              return <li>{ass}</li>;\n            })}\n          </ul>\n        ) : null}\n        <button>Edit</button>\n      </div>\n    );\n  }\n}\n","import React, { useEffect } from \"react\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport MilestoneBlock from \"./MilestoneBlock\";\nimport DashFooter from \"../Dash/DashFooter\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\n\nexport default function MilestonesMain() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const milestoneState = useSelector(\n    (state) => state.storeTeacherMilestonesGeneralInfoReducer\n  );\n\n\n\n  const getAllAssigned = () => {\n    const assignedArray = [];\n    milestoneState.forEach((m) => {\n      m.AssignedTo.forEach((a) => {\n        assignedArray.push(a);\n      });\n    });\n\n    const unique = (value, index, self) => {\n      return self.indexOf(value) === index;\n    };\n    const uniqueAssigned = assignedArray.filter(unique);\n\n    return uniqueAssigned;\n  };\n\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n  }, []);\n\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      <div>\n        <div>\n          <input id=\"tbMilestoneSearch\" type=\"text\" placeholder=\"Search\" />\n          <button>Create New Segment</button>\n        </div>\n        {/* Show student links */}\n        <div>\n          {getAllAssigned().map((assigned, i) => {\n            return (\n              <button id={assigned}>\n                {assigned}\n              </button>\n            );\n          })}\n          <div>\n            \n          </div>\n        </div>\n\n        <hr />\n        <div>\n          {milestoneState.map((m, i) => {\n            return (\n              <MilestoneBlock key={i} name={m.Name} assignedTo={m.AssignedTo} />\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nexport default class ForumBlocks extends Component {\n  render() {\n    const { topic, group } = this.props;\n    return (\n      <div>\n        <h3>{topic}</h3>\n        <p>{group}</p>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class ForumSinglePostBlock extends Component {\n  state = {\n    showComments: false,\n  };\n  render() {\n    const { poster, date, text, comments } = this.props;\n    return (\n      <div>\n        <h5>{poster}</h5>\n        <p>{date.toDate().toString().substr(4, 11)}</p>\n        <p>{text}</p>\n        <button\n          onClick={() =>\n            this.setState({ showComments: !this.state.showComments })\n          }\n        >\n          Comments\n        </button>\n        {this.state.showComments\n          ? comments.map((com, i) => {\n              return (\n                <div key={i}>\n                  <p>{com.Commenter}</p>\n                  <p>{com.Text}</p>\n                  <p>{com.Date.toDate().toString().substr(4, 11)}</p>\n                </div>\n              );\n            })\n          : null}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ForumSinglePostBlock from \"./ForumSinglePostBlock\";\n\nexport default class ForumSingleBlock extends Component {\n  render() {\n    const { topic, desc, date, posts } = this.props;\n    return (\n      <div>\n        <h2>{topic}</h2>\n        <h4>{desc}</h4>\n        <h4>{date.toDate().toString().substr(4, 11)}</h4>\n        <br />\n        <br />\n\n        {/* Posts */}\n        <div>\n          {posts.map((p, i) => {\n            return <ForumSinglePostBlock key={i} poster={p.Poster} text={p.Text} date={p.Date} comments={p.commentData} />;\n          })}\n        </div>\n\n        <br />\n        <hr />\n      </div>\n    );\n  }\n}\n","import React, { useEffect } from \"react\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport ForumBlocks from \"./ForumBlocks\";\nimport DashFooter from \"../Dash/DashFooter\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { groups_Collection, forums_Collection } from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\nimport { storeSingleForumAction } from \"../../../redux/actions\";\nimport ForumSingleBlock from \"./ForumSingleBlock\";\n\nexport default function ForumsMain() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const forumState = useSelector(\n    (state) => state.storeTeacherForumsGeneralInfoReducer\n  );\n  const singleForumState = useSelector(\n    (state) => state.storeSingleForumReducer\n  );\n\n  const groupState = useSelector(\n    (state) => state.storeTeacherGroupGeneralInfoReducer\n  );\n\n  const getSingleForum = (event) => {\n    const id = event.target.getAttribute(\"id\");\n    let singleForum = {};\n    forumState.forEach((f) => {\n      if (f.id === id) {\n        const posts_Collection = forums_Collection.doc(id).collection(\"Posts\");\n        posts_Collection\n          .get()\n          .then((snapshot) => {\n            const postData = firebaseLooper(snapshot);\n            const newPosts = [];\n            postData.forEach((pd) => {\n              const comments_Collection = forums_Collection\n                .doc(id)\n                .collection(\"Posts\")\n                .doc(pd.id)\n                .collection(\"Comments\");\n              comments_Collection\n                .get()\n                .then((snapshot) => {\n                  const commentData = firebaseLooper(snapshot);\n                  newPosts.push({\n                    ...pd,\n                    commentData,\n                  });\n                  singleForum = {\n                    ...f,\n                    newPosts,\n                  };\n                  dispatch(storeSingleForumAction(singleForum));\n                })\n                .catch((err) => console.log(err));\n            });\n          })\n          .catch((err) => console.log(err));\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n  }, []);\n\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      <div>\n        <div>\n          <input id=\"tbForumSearch\" type=\"text\" placeholder=\"Search\" />\n          <button>Search</button>\n        </div>\n\n        {/* Forum Content */}\n        <div>\n          {singleForumState.Topic ? (\n            <ForumSingleBlock\n              topic={singleForumState.Topic}\n              desc={singleForumState.Desc}\n              date={singleForumState.DateCreated}\n              posts={singleForumState.newPosts}\n            />\n          ) : null}\n        </div>\n\n        <div>\n          {forumState.map((f, i) => {\n            return (\n              <div>\n                <ForumBlocks key={i} topic={f.Topic} />\n                <button id={f.id} onClick={getSingleForum}>\n                  View Discussion\n                </button>\n                <button>Remove</button>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nexport default class ArticleBlock extends Component {\n  render() {\n    const { mainTopic, desc } = this.props;\n    return (\n      <div>\n        <h3>{mainTopic}</h3>\n        <p>{desc}</p>\n        <button>Edit</button>\n        <button>Remove</button>\n      </div>\n    );\n  }\n}\n","import React, { useEffect } from \"react\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport DashFooter from \"../Dash/DashFooter\";\n\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport ArticleBlock from \"./ArticleBlock\";\n\nexport default function ArticlesMain() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n\n  const articleState = useSelector(\n    (state) => state.storeTeacherArticlesGeneralInfoReducer\n  );\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n  }, []);\n\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      {/* Content */}\n      <div>\n        <div>\n          <input id=\"tbArticleSearch\" type=\"text\" placeholder=\"Search\" />\n          <button>Create New Article</button>\n        </div>\n        <div>\n          {articleState.map((art, i) => {\n            return (\n              <ArticleBlock key={i} mainTopic={art.MainTopic} desc={art.Desc} />\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nexport default class MessageThumbBlock extends Component {\n  render() {\n    const { firstMessage, recipient, firstDate } = this.props;\n    return (\n      <div>\n        <h3>{recipient}</h3>\n        <p>{firstMessage}</p>\n        <p>{firstDate.toDate().toString().substr(4, 11)}</p>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class MessagesThread extends Component {\n  render() {\n    const { user, recipient, messages } = this.props;\n    const messInOrder = messages.reverse();\n    return (\n      <div>\n        <h2>{recipient}</h2>\n        <hr />\n        {messInOrder.map((mess, i) => {\n          return (\n            <div\n              style={\n                mess.Sender === user ? { color: \"blue\" } : { color: \"gray\" }\n              }\n              key={i}\n            >\n              <h4>{mess.Sender}</h4>\n              <p>{mess.Text}</p>\n              <p>{mess.Date.toDate().toString().substr(4, 11)}</p>\n            </div>\n          );\n        })}\n        <br />\n        <div>\n          <input id=\"tbMessage\" type=\"text\" placeholder=\"Type Message...\" />\n          <button>Send</button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useEffect } from \"react\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport MessageThumbBlock from \"./MessageThumbBlock\";\nimport MessagesThread from \"./MessagesThread\";\nimport DashFooter from \"../Dash/DashFooter\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { teachers_Collection } from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\nimport {\n  storeTeacherMessagesAction,\n  storeSingleThreadAction,\n} from \"../../../redux/actions\";\n\nexport default function MessagesMain() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const messageState = useSelector(\n    (state) => state.storeTeacherMessagesGeneralInfoReducer\n  );\n  const messagesData = useSelector(\n    (state) => state.storeTeacherMessagesReducer\n  );\n  const threadData = useSelector((state) => state.storeSingleThreadReducer);\n\n  const getThumbnailMessageData = () => {\n    const messageData = [];\n    messageState.forEach((mess, i) => {\n      const messages_Collection = teachers_Collection\n        .doc(teacherAuthID)\n        .collection(\"Messages\")\n        .doc(mess.id)\n        .collection(\"MessageBlocks\");\n      messages_Collection\n        .orderBy(\"Date\", \"desc\")\n        .get()\n        .then((snapshot) => {\n          const data = firebaseLooper(snapshot);\n          mess = {\n            key: i,\n            ...mess,\n            messages: data,\n          };\n          messageData.push(mess);\n          dispatch(storeTeacherMessagesAction(messageData));\n        })\n        .catch((err) => console.log(err));\n    });\n  };\n  const OnThreadClick = (event) => {\n    const threadID = event.target.getAttribute(\"id\");\n    messagesData.forEach((thread) => {\n      if (thread.id === threadID) {\n        dispatch(storeSingleThreadAction(thread));\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n    getThumbnailMessageData();\n  }, []);\n\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      {/* Content */}\n      <div>\n        <div>\n          <input id=\"tbMessageSearch\" type=\"text\" placeholder=\"Search\" />\n          <button>Send New Message</button>\n        </div>\n        {/* Main */}\n        <div>\n          {/* Left */}\n          <div>\n            {messagesData.map((thread, i) => {\n              return (\n                <div>\n                  <MessageThumbBlock\n                    key={i}\n                    recipient={thread.RecipientID}\n                    firstMessage={thread.messages[0].Text}\n                    firstDate={thread.messages[0].Date}\n                  />\n                  <button id={thread.id} onClick={OnThreadClick}>\n                    View\n                  </button>\n                </div>\n              );\n            })}\n          </div>\n          {/* Right */}\n          <div>\n            {threadData.messages ? (\n              <MessagesThread\n                user={teacherAuthID}\n                recipient={threadData.RecipientID}\n                messages={threadData.messages}\n              />\n            ) : null}\n          </div>\n        </div>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport TopBar from \"../Dash/TopBar\";\nimport DashFooter from \"../Dash/DashFooter\";\n\nexport default function FileManagerMain() {\n    return (\n        <div>\n            {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      <h1>File Manager Main</h1>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n        </div>\n    )\n}\n","import React, { Component } from \"react\";\n\nexport default class EventBlock extends Component {\n  state = {\n    showFullEvent: false,\n  };\n\n  render() {\n    const { color, title, location, date, invited, desc, allday } = this.props;\n    const fullDate = `${date.toDate().getFullYear().toString()}-${\n      date.toDate().getMonth() < 10 ? \"0\" : \"\"\n    }${date.toDate().getMonth().toString()}-${\n      date.toDate().getDate() < 10 ? \"0\" : \"\"\n    }${date.toDate().getDate().toString()}`;\n    return (\n      <div style={{ borderLeft: `5px solid ${color}` }}>\n        <h5>{title}</h5>\n        <p>{location}</p>\n        <p>{fullDate}</p>\n        <button\n          onClick={() =>\n            this.setState({ showFullEvent: !this.state.showFullEvent })\n          }\n        >\n          Edit\n        </button>\n\n        {this.state.showFullEvent ? (\n          <div>\n            <h2>Edit Event</h2>\n\n            {/* Title */}\n            <div>\n              <label>Title</label>\n              <input id=\"tbTitle\" type=\"text\" value={title} />\n            </div>\n            {/* Location */}\n            <div>\n              <label>Location</label>\n              <input id=\"tbLocation\" type=\"text\" value={location} />\n            </div>\n            {/* Desc */}\n            <div>\n              <label>Desc</label>\n              <textarea id=\"taDesc\" value={desc}></textarea>\n            </div>\n            {/* Date */}\n            <div>\n              <label>Date</label>\n              <input id=\"dateDate\" type=\"date\" value={fullDate}></input>\n            </div>\n            {/* All Day */}\n            <div>\n              <label>All Day?</label>\n              <input\n                id=\"cbAllDay\"\n                type=\"checkbox\"\n                checked={allday ? \"checked\" : \"\"}\n              />\n            </div>\n            {/* Invited */}\n            <div>\n              <label>Invited</label>\n              {invited.map((inv, i) => {\n                return (\n                  <div>\n                    <p>{inv.split(\"~\")[1]}</p>\n                    <button\n                      style={{\n                        backgroundColor: \"red\",\n                        color: \"white\",\n                        borderRadius: \"20px\",\n                        border: 0,\n                        fontSize: \"15px\",\n                      }}\n                    >\n                      -\n                    </button>\n                  </div>\n                );\n              })}\n              <div>\n                <p>Search for student</p>\n                <input id=\"tbSearchStud\" type=\"text\" placeholder=\"Search\" />\n              </div>\n            </div>\n\n            <button>Cancel</button>\n            <button>Save</button>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n","import React, { useEffect } from \"react\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport DashFooter from \"../Dash/DashFooter\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { storeCurrentMonthAction } from \"../../../redux/actions\";\nimport EventBlock from \"./EventBlock\";\n\nexport default function EventsMain() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const eventState = useSelector(\n    (state) => state.storeTeacherEventsGeneralInfoReducer\n  );\n  const currentMonthState = useSelector(\n    (state) => state.storeCurrentMonthReducer\n  );\n  const studentState = useSelector(\n    (state) => state.storeTeacherStudentGeneralInfoReducer\n  );\n\n  const today = new Date();\n  const currentMonthShort = today.toString().substr(4, 3);\n  const currentYear = today.getFullYear().toString();\n\n  const allMonths = [\n    {\n      monthShort: \"Jan\",\n      month: \"January\",\n      num: 1,\n    },\n    {\n      monthShort: \"Feb\",\n      month: \"Feburary\",\n      num: 2,\n    },\n    {\n      monthShort: \"Mar\",\n      month: \"March\",\n      num: 3,\n    },\n    {\n      monthShort: \"Apr\",\n      month: \"April\",\n      num: 4,\n    },\n    {\n      monthShort: \"May\",\n      month: \"May\",\n      num: 5,\n    },\n    {\n      monthShort: \"Jun\",\n      month: \"June\",\n      num: 6,\n    },\n    {\n      monthShort: \"Jul\",\n      month: \"July\",\n      num: 7,\n    },\n    {\n      monthShort: \"Aug\",\n      month: \"August\",\n      num: 8,\n    },\n    {\n      monthShort: \"Sep\",\n      month: \"September\",\n      num: 9,\n    },\n    {\n      monthShort: \"Oct\",\n      month: \"October\",\n      num: 10,\n    },\n    {\n      monthShort: \"Nov\",\n      month: \"November\",\n      num: 11,\n    },\n    {\n      monthShort: \"Dec\",\n      month: \"December\",\n      num: 12,\n    },\n  ];\n\n  const getMonth = (month) => {\n    let monthType = typeof month;\n\n    allMonths.forEach((m) => {\n      if (monthType === \"string\") {\n        if (m.monthShort === month) {\n          dispatch(storeCurrentMonthAction(m.month));\n          return;\n        }\n      } else if (monthType === \"number\") {\n        if (m.num === month) {\n          dispatch(storeCurrentMonthAction(m.month));\n          return;\n        }\n      } else {\n        console.log(\"Invalid Input\");\n      }\n    });\n  };\n  const OnBackMonthClick = () => {\n    let num = 0;\n    allMonths.forEach((m) => {\n      if (currentMonthState === m.month) {\n        num = m.num;\n      }\n    });\n    if (num === 1) {\n      num = 12;\n    } else {\n      num = num - 1;\n    }\n\n    getMonth(num);\n  };\n  const OnForwardMonthClick = () => {\n    let num = 0;\n    allMonths.forEach((m) => {\n      if (currentMonthState === m.month) {\n        num = m.num;\n      }\n    });\n    if (num === 12) {\n      num = 1;\n    } else {\n      num = num + 1;\n    }\n    getMonth(num);\n  };\n  const showEvents = (ev) => {\n    const monthShort = ev.Date.toDate().toString().substr(4, 3);\n    const year = ev.Date.toDate().getFullYear().toString();\n    const stateMonthShort = currentMonthState.substr(0, 3);\n    if (monthShort === stateMonthShort && year === currentYear) {\n      return (\n        <div>\n          <EventBlock\n            color={ev.Color}\n            title={ev.Title}\n            location={ev.Location}\n            date={ev.Date}\n            invited={ev.Invited}\n            desc={ev.Desc}\n            allday={ev.isAllDay}\n            students={studentState}\n          />\n        </div>\n      );\n    }\n    window.scrollTo(0, 0);\n  };\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n    getMonth(currentMonthShort);\n  }, []);\n\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      <div>\n        <div>\n          <input id=\"tbEventSearch\" type=\"text\" placeholder=\"Search\" />\n          <button>Create New Event</button>\n        </div>\n\n        {/* Event List */}\n        <div>\n          {/* Top */}\n          <div>\n            {/* Go back month */}\n            <button onClick={OnBackMonthClick}>{`<`}</button>\n            {/* Go forward month */}\n            <button onClick={OnForwardMonthClick}>{`>`}</button>\n\n            <h3>{currentMonthState}</h3>\n          </div>\n\n          {/* Event Content */}\n          <div>\n            {eventState.map((ev, i) => {\n              return showEvents(ev);\n            })}\n          </div>\n        </div>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nexport default class InvoiceBlock extends Component {\n  render() {\n    const { no, status, name, balance, created, due } = this.props;\n    return (\n      <div>\n        <h4>#{no}</h4>\n        <p>{status}</p>\n        <p>{name}</p>\n        <p>{balance === 'PAID' ? '' : '$'}{balance}</p>\n        <p>{created.toDate().toString().substr(4, 11)}</p>\n        <p>{due.toDate().toString().substr(4, 11)}</p>\n      </div>\n    );\n  }\n}\n","import React, { useEffect } from \"react\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport InvoiceBlock from \"./InvoiceBlock\";\nimport DashFooter from \"../Dash/DashFooter\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport {storeSingleInvoiceAction} from '../../../redux/actions';\n\n\nexport default function InvoicesMain() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch()\n\n  const invoiceState = useSelector(\n    (state) => state.storeTeacherInvoicesGeneralInfoReducer\n  );\n\n  const viewSingleInvoice = (event) => {\n    const invoiceNo = event.target.getAttribute('id');\n    invoiceState.forEach(inv => {\n      if (inv.No === invoiceNo) {\n        dispatch(storeSingleInvoiceAction(inv));\n        history.push('/teacher-invoice-view');\n        return;\n      }\n    })\n  }\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    }\n  }, []);\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      {/* Content */}\n      <div>\n        <div>\n          <input id=\"tbInvoiceSearch\" type=\"text\" placeholder=\"Search\" />\n          <button>Create New Invoice</button>\n        </div>\n\n        <div>\n          {invoiceState.map((inv, i) => {\n            return (\n              <div>\n                <InvoiceBlock\n                  key={i}\n                  no={inv.No}\n                  status={inv.Status}\n                  balance={inv.Balance}\n                  name={inv.Name}\n                  created={inv.Created}\n                  due={inv.Due}\n                />\n                <button id={inv.No} onClick={viewSingleInvoice}>View</button>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nimport TopBar from \"../Dash/TopBar\";\nimport DashFooter from \"../Dash/DashFooter\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { teachers_Collection } from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\nimport { storeInvoiceServicesAction } from \"../../../redux/actions\";\n\nexport default function InvoiceView() {\n  const teacherAuthID = useSelector((state) => state.storeTeacherAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const invoice = useSelector((state) => state.storeSingleInvoiceReducer);\n\n  const getAllServices = () => {\n    const invoiceID = invoice.id;\n    const services_Collection = teachers_Collection\n      .doc(teacherAuthID)\n      .collection(\"Invoices\")\n      .doc(invoiceID)\n      .collection(\"Services\");\n\n    services_Collection\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        dispatch(storeInvoiceServicesAction(data));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const services = useSelector((state) => state.storeInvoiceServicesReducer);\n\n  useEffect(() => {\n    if (!teacherAuthID) {\n      history.push(\"/teacherdash\");\n      return;\n    } else if (!invoice) {\n        history.push('/teacher-invoices');\n        return;\n    }\n    getAllServices();\n  }, []);\n\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      <div>\n        <div>\n          <button\n            onClick={() => {\n              history.push(\"/teacher-invoices\");\n            }}\n          >\n            View All Invoices\n          </button>\n        </div>\n\n        {/* Invoice Template */}\n        <div>\n          {/* Top */}\n          <div>\n            <h3>Invoice #{invoice.No}</h3>\n            <p>\n              Date Issued: {invoice.Created.toDate().toString().substr(4, 11)}\n            </p>\n            <p>Date Due: {invoice.Due.toDate().toString().substr(4, 11)}</p>\n          </div>\n          <hr />\n          {/* Contact Details */}\n          <div>\n            <h4>Invoice To:</h4>\n            <p>{invoice.Name}</p>\n            <p>{invoice.Address}</p>\n            <p>\n              {invoice.City}, {invoice.State} {invoice.Zip}\n            </p>\n            <p>{invoice.Email}</p>\n          </div>\n          <hr/>\n          {/* Services Details */}\n          <div>\n            <table>\n              <tr>\n                <th>Services</th>\n                <th>Rate</th>\n                <th>Hours</th>\n                <th>Price</th>\n              </tr>\n              {services.map((serv, i) => {\n                return (\n                  <div key={i}>\n                    <tr>\n                      <td>{serv.Name}</td>\n                      <td>${serv.Rate}</td>\n                      <td>{serv.Hours} HRS</td>\n                      <td>${serv.FullPrice}</td>\n                    </tr>\n                  </div>\n                );\n              })}\n            </table>\n          </div>\n          <hr/>\n          {/* Message */}\n          <div>\n              <p>{invoice.Message}</p>\n          </div>\n        </div>\n\n        {/* Invoice Actions */}\n        <div>\n            <button>Send Invoice</button>\n            <button>Print</button>\n            <button>Edit</button>\n        </div>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport TopBar from \"../Dash/TopBar\";\nimport DashFooter from \"../Dash/DashFooter\";\n\nexport default function SettingsMain() {\n    return (\n        <div>\n            {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      <h1>Settings Main</h1>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n        </div>\n    )\n}\n","import React from 'react';\n\nimport TopBar from \"../Dash/TopBar\";\nimport DashFooter from \"../Dash/DashFooter\";\n\nexport default function TutorialsMain() {\n    return (\n        <div>\n            {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      <h1>Tutorials Main</h1>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n        </div>\n    )\n}\n","import React from 'react';\n\nimport TopBar from \"../Dash/TopBar\";\nimport DashFooter from \"../Dash/DashFooter\";\n\nexport default function SupportMain() {\n    return (\n        <div>\n            {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      <h1>Support Main</h1>\n\n      {/* Footer */}\n      <div>\n        <DashFooter />\n      </div>\n        </div>\n    )\n}\n","import React, { useEffect } from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { users_Collection } from \"../../utils/firebase\";\n\nexport default function TopBar() {\n  const user = useSelector((state) => state.storeStudentUserDataReducer);\n  const studentAuthID = useSelector((state) => state.storeStudentAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!studentAuthID) {\n      history.push(\"/studentdash\");\n      return;\n    }\n  }, []);\n\n  return (\n    <div>\n      <div>\n        <button>New Message</button>\n        <button>Schedule Lesson</button>\n      </div>\n      <div>\n        <button>Search</button>\n      </div>\n      <div>\n        <p>\n          {user.FirstName} {user.LastName}\n        </p>\n        <p>{user.AccountType}</p>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Footer() {\n  return (\n    <div>\n        <hr />\n        <div>\n          <p>COPYRIGHT &copy; 2021 MUSICADEMY</p>\n        </div>\n        <div>\n          <p>Made for music learners and teachers all over the nation.</p>\n        </div>\n      </div>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  storeAccountTypeAction,\n  storeStudentAuthIDAction,\n  isLoggedInAction,\n  storeStudentUserDataAction,\n} from \"../../redux/actions\";\n\nimport TopBar from \"./TopBar\";\nimport Footer from \"./Footer\";\nimport { users_Collection } from \"../../utils/firebase\";\nimport { firebaseLooper } from \"../../utils/tools\";\n\nexport default function StudentDash() {\n  const studentAuthID = useSelector((state) => state.storeStudentAuthIDReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // States\n\n  const onLogOut = () => {\n    dispatch(storeAccountTypeAction(\"\"));\n    dispatch(storeStudentAuthIDAction(\"\"));\n    dispatch(isLoggedInAction());\n    history.push(\"/login\");\n  };\n  const getStudentUserData = () => {\n    users_Collection\n      .get()\n      .then((snapshot) => {\n        const userData = firebaseLooper(snapshot);\n        userData.forEach((user) => {\n          if (user.AuthID === studentAuthID) {\n            dispatch(storeStudentUserDataAction(user));\n          }\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    if (!studentAuthID) {\n      history.push(\"/login\");\n      return;\n    }\n\n    getStudentUserData();\n  }, []);\n\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      <div style={{ float: \"right\" }}>\n        <button onClick={onLogOut}>Log Out</button>\n      </div>\n\n      <h1>Dashboard</h1>\n\n      {/* Footer */}\n      <div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { students_Collection } from \"../../../utils/firebase\";\nimport {\n  storeStudentProfileFeedPostsAction,\n  storeStudentProfileFeedPostAction,\n} from \"../../../redux/actions\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nimport GetToday from \"../../GetToday\";\nimport RandomString from \"../../RandomString\";\n\nexport default function ProfileFeedView() {\n  const studentAuthID = useSelector((state) => state.storeStudentAuthIDReducer);\n  const user = useSelector((state) => state.storeStudentUserDataReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // States\n  const posts = useSelector(\n    (state) => state.storeStudentProfileFeedPostsReducer\n  );\n\n  // GET\n  const getAllFeedPosts = () => {\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"Feed\")\n      .collection(\"Posts\")\n      .get()\n      .then((snapshot) => {\n        const postData = firebaseLooper(snapshot);\n        dispatch(storeStudentProfileFeedPostsAction(postData));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  // HANDLE\n  const handleAllFeedPosts = () => {\n    return posts.map((post, i) => {\n      return (\n        <div key={i}>\n          <h3>\n            {user.FirstName} {user.LastName}\n          </h3>\n          <p>{post.Text}</p>\n          <p>{post.Date.toDate().toString().substr(4, 11)}</p>\n          <button>Like</button>\n          <button id={post.id} onClick={onPostEdit}>\n            Edit\n          </button>\n          <button id={post.id} onClick={removePost}>\n            Remove\n          </button>\n        </div>\n      );\n    });\n  };\n  const handleNewPost = () => {\n    return (\n      <div>\n        <h3>Create New Post</h3>\n        <textarea id=\"taNewPost\" placeholder=\"Type Post Here...\"></textarea>\n        <button onClick={newPost}>Post</button>\n      </div>\n    );\n  };\n\n  // POST\n  const newPost = () => {\n    const postText = document.querySelector(\"#taNewPost\").value;\n    const today = GetToday();\n    // Save to DB\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const postID = `Post${rand1}${rand2}`;\n    const commentID = `Comment${rand1}${rand2}`;\n\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"Feed\")\n      .collection(\"Posts\")\n      .doc(postID)\n      .set({\n        Text: postText,\n        Date: today,\n        Likes: 0,\n      })\n      .catch((err) => console.log(err));\n\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"Feed\")\n      .collection(\"Posts\")\n      .doc(postID)\n      .collection(\"Comments\")\n      .doc(commentID)\n      .set({\n        Text: \"\",\n        Date: today,\n        Commentor: \"\",\n      })\n      .catch((err) => console.log(err));\n\n    // Dispatch\n    const allPosts = [...posts];\n    allPosts.push({\n      id: postID,\n      Text: postText,\n      Date: today,\n      Likes: 0,\n    });\n\n    dispatch(storeStudentProfileFeedPostsAction(allPosts));\n\n    // Empty ta\n    document.querySelector(\"#taNewPost\").value = \"\";\n  };\n\n  // REMOVE\n  const removePost = (event) => {\n    const postID = event.target.getAttribute(\"id\");\n\n    // Remove from DB\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"Feed\")\n      .collection(\"Posts\")\n      .doc(postID)\n      .delete()\n      .catch((err) => console.log(err));\n\n    // Dispatch\n    const allPosts = [...posts];\n    const filtered = allPosts.filter((post) => post.id !== postID);\n    dispatch(storeStudentProfileFeedPostsAction(filtered));\n  };\n\n  // ON CLICK\n  const onPostEdit = (event) => {\n    const postID = event.target.getAttribute(\"id\");\n\n    posts.forEach((post) => {\n      if (post.id === postID) {\n        dispatch(storeStudentProfileFeedPostAction(post));\n      }\n    });\n\n    history.push(\"/student-profile/feed-edit\");\n  };\n\n  useEffect(() => {\n    if (!studentAuthID) {\n      history.push(\"/studentdash\");\n      return;\n    }\n\n    getAllFeedPosts();\n  }, []);\n  return (\n    <div>\n      <hr />\n      {/* Create Post */}\n      <div>{handleNewPost()}</div>\n\n      <hr />\n      {/* Feed */}\n      <div>{handleAllFeedPosts()}</div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { storeStudentProfileFeedPostsAction } from \"../../../redux/actions\";\nimport { students_Collection } from \"../../../utils/firebase\";\n\nexport default function ProfileFeedEdit() {\n  const studentAuthID = useSelector((state) => state.storeStudentAuthIDReducer);\n  const user = useSelector((state) => state.storeStudentUserDataReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const post = useSelector((state) => state.storeStudentProfileFeedPostReducer);\n  const posts = useSelector(\n    (state) => state.storeStudentProfileFeedPostsReducer\n  );\n\n  const savePost = () => {\n    const postText = document.querySelector(\"#taEditPost\").value;\n\n    // Save to DB\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"Feed\")\n      .collection(\"Posts\")\n      .doc(post.id)\n      .update({\n        Text: postText,\n      })\n      .catch((err) => console.log(err));\n\n    //   Dispatch\n\n    const allPosts = [...posts];\n    allPosts.forEach((p) => {\n      p.Text = postText;\n    });\n\n    dispatch(storeStudentProfileFeedPostsAction(allPosts));\n    history.push(\"/student-profile/feed\");\n  };\n\n  useEffect(() => {\n    if (!studentAuthID) {\n      history.push(\"/studentdash\");\n      return;\n    }\n  }, []);\n  return (\n    <div>\n      <h1>Edit Post</h1>\n\n      <div>\n        <textarea\n          id=\"taEditPost\"\n          type=\"text\"\n          defaultValue={post.Text}\n        ></textarea>\n        <button onClick={savePost}>Save</button>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  storeStudentAboutAction,\n  storeStudentExpAction,\n} from \"../../../redux/actions\";\nimport { students_Collection } from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nexport default function ProfileAboutView() {\n  const studentAuthID = useSelector((state) => state.storeStudentAuthIDReducer);\n  const user = useSelector((state) => state.storeStudentUserDataReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const about = useSelector((state) => state.storeStudentAboutReducer);\n  const exps = useSelector((state) => state.storeStudentExpReducer);\n\n  // GET\n  const getAllStudentAbout = () => {\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        data.forEach((d) => {\n          if (d.id === \"About\") {\n            dispatch(storeStudentAboutAction(d));\n          }\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n  const getAllStudentExp = () => {\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"Experience\")\n      .collection(\"ExpBlocks\")\n      .get()\n      .then((snapshot) => {\n        const data = firebaseLooper(snapshot);\n        dispatch(storeStudentExpAction(data));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  //   HANDLE\n  const handleExpBlocks = () => {\n    return exps.map((exp, i) => {\n      return (\n        <div key={i}>\n          <h3>{exp.Institution}</h3>\n          <p>{exp.Desc}</p>\n          <p>Started: {exp.Start.toDate().toString().substr(4, 11)}</p>\n          <p>Ended: {exp.End.toDate().toString().substr(4, 11)}</p>\n        </div>\n      );\n    });\n  };\n  const handleInstruments = () => {\n    if (about.Instruments) {\n      return about.Instruments.map((ins, i) => {\n        return <li key={i}>{ins}</li>;\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (!studentAuthID) {\n      history.push(\"/studentdash\");\n      return;\n    }\n\n    getAllStudentAbout();\n    getAllStudentExp();\n  }, []);\n\n  return (\n    <div>\n      <button onClick={() => history.push(\"/student-profile/about-edit\")}>\n        Edit\n      </button>\n      <br />\n      {/* About */}\n      <div>\n        <h2>About</h2>\n        <p>{about.About}</p>\n      </div>\n\n      {/* Experience */}\n      <div>\n        <h2>Experience</h2>\n        <div>{handleExpBlocks()}</div>\n      </div>\n\n      {/* Personal */}\n      <div>\n        <h2>Personal</h2>\n        <p>{about.Location}</p>\n        <h2>Instruments</h2>\n        {handleInstruments()}\n        <p>\n          Joined:{\" \"}\n          {about.Joined ? about.Joined.toDate().toString().substr(4, 11) : null}\n        </p>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport InputDateFormatter from \"../../InputDateFormatter\";\nimport FirebaseDate from \"../../FirebaseDate\";\nimport GetToday from \"../../GetToday\";\nimport RandomString from \"../../RandomString\";\nimport {\n  storeStudentAboutAction,\n  storeStudentExpAction,\n  toggleNewExpFormAction,\n  toggleNewInstrumentFormAction,\n} from \"../../../redux/actions\";\nimport { students_Collection } from \"../../../utils/firebase\";\n\nexport default function ProfileAboutEdit() {\n  const studentAuthID = useSelector((state) => state.storeStudentAuthIDReducer);\n  const user = useSelector((state) => state.storeStudentUserDataReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const about = useSelector((state) => state.storeStudentAboutReducer);\n  const exps = useSelector((state) => state.storeStudentExpReducer);\n\n  const toggleNewExpForm = useSelector(\n    (state) => state.toggleNewExpFormReducer\n  );\n  const toggleNewInstrumentForm = useSelector(\n    (state) => state.toggleNewInstrumentFormReducer\n  );\n\n  // HANDLE\n  const handleEditExp = () => {\n    return exps.map((exp, i) => {\n      return (\n        <div>\n          <div>\n            <h3>Institution</h3>\n            <input\n              id={`tbInstEdit${i}`}\n              type=\"text\"\n              defaultValue={exp.Institution}\n            />\n          </div>\n          <div>\n            <h3>Description</h3>\n            <textarea id={`taDescEdit${i}`} defaultValue={exp.Desc} />\n          </div>\n          <div>\n            <h3>Started</h3>\n            <input\n              type=\"date\"\n              id={`daStart${i}`}\n              defaultValue={InputDateFormatter(exp.Start)}\n            ></input>\n          </div>\n\n          <div>\n            <h3>Ended</h3>\n            <input\n              type=\"date\"\n              id={`daEnd${i}`}\n              defaultValue={InputDateFormatter(exp.End)}\n            ></input>\n          </div>\n          <button id={exp.id} onClick={removeExp}>\n            Remove\n          </button>\n          <hr />\n        </div>\n      );\n    });\n  };\n  const handleInstruments = () => {\n    if (about.Instruments) {\n      return about.Instruments.map((ins, i) => {\n        return (\n          <div key={i}>\n            <input id={`tbInstrument${i}`} type=\"text\" defaultValue={ins} />\n            <button id={ins} onClick={removeInstrument}>\n              -\n            </button>\n          </div>\n        );\n      });\n    }\n  };\n  const handleNewExp = () => {\n    return (\n      <div>\n        <div>\n          <h3>Institution</h3>\n          <input id=\"tbNewInstitution\" type=\"text\" placeholder=\"Institution\" />\n        </div>\n        <div>\n          <h3>Description</h3>\n          <textarea id=\"tbNewDesc\" placeholder=\"Description\"></textarea>\n        </div>\n        <div>\n          <h3>Started</h3>\n          <input\n            type=\"date\"\n            id=\"daNewStarted\"\n            defaultValue={InputDateFormatter(GetToday())}\n          />\n        </div>\n        <div>\n          <h3>Ended</h3>\n          <input\n            type=\"date\"\n            id=\"daNewEnded\"\n            defaultValue={InputDateFormatter(GetToday())}\n          />\n        </div>\n\n        <button onClick={saveExp}>Apply</button>\n      </div>\n    );\n  };\n  const handleNewInstrument = () => {\n    return (\n      <div>\n        <input id=\"tbNewInstrument\" type=\"text\" placeholder=\"Instrument\" />\n        <button onClick={saveInstrument}>Apply</button>\n      </div>\n    );\n  };\n\n  //   POST\n  const saveExp = () => {\n    const institution = document.querySelector(\"#tbNewInstitution\").value;\n    const desc = document.querySelector(\"#tbNewDesc\").value;\n    const started = FirebaseDate(document.querySelector(\"#daNewStarted\").value);\n    const ended = FirebaseDate(document.querySelector(\"#daNewEnded\").value);\n\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const expID = `Exp${rand1}${rand2}`;\n\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"Experience\")\n      .collection(\"ExpBlocks\")\n      .doc(expID)\n      .set({\n        Institution: institution,\n        Desc: desc,\n        Start: started,\n        End: ended,\n      })\n      .catch((err) => console.log(err));\n\n    //   Dispatch\n    const allExp = [...exps];\n    allExp.push({\n      id: expID,\n      Institution: institution,\n      Desc: desc,\n      Start: started,\n      End: ended,\n    });\n\n    dispatch(storeStudentExpAction(allExp));\n    dispatch(toggleNewExpFormAction());\n  };\n  const saveInstrument = () => {\n    const instrument = document.querySelector(\"#tbNewInstrument\").value;\n    const allInstruments = [...about.Instruments];\n    allInstruments.push(instrument);\n    //   Save to DB\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"About\")\n      .update({\n        Instruments: [...allInstruments],\n      })\n      .catch((err) => console.log(err));\n\n    //   Dispatch\n    const aboutObj = { ...about };\n    aboutObj.Instruments = [...allInstruments];\n\n    dispatch(storeStudentAboutAction(aboutObj));\n    dispatch(toggleNewInstrumentFormAction());\n  };\n  const saveAllChanges = () => {\n    const aboutText = document.querySelector(\"#taAboutText\").value;\n\n    const expCount = exps.length;\n    const instCount = about.Instruments.length;\n\n    const allExp = [];\n    const allInst = [];\n\n    for (let i = 0; i < expCount; i = i + 1) {\n      const expIns = document.querySelector(`#tbInstEdit${i}`).value;\n      const expDesc = document.querySelector(`#taDescEdit${i}`).value;\n      const expStart = document.querySelector(`#daStart${i}`).value;\n      const expEnd = document.querySelector(`#daEnd${i}`).value;\n\n      const tempObj = {\n        id: exps[i].id,\n        Institution: expIns,\n        Desc: expDesc,\n        Start: FirebaseDate(expStart),\n        End: FirebaseDate(expEnd),\n      };\n\n      allExp.push(tempObj);\n    }\n\n    for (let i = 0; i < instCount; i = i + 1) {\n      const ins = document.querySelector(`#tbInstrument${i}`).value;\n      allInst.push(ins);\n    }\n\n    const location = document.querySelector(\"#tbLocation\").value;\n\n    // Save to DB\n\n    // About\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"About\")\n      .update({\n        About: aboutText,\n        Location: location,\n        Instruments: [...allInst],\n      })\n      .catch((err) => console.log(err));\n\n    //   Experience\n    allExp.forEach((ex) => {\n      students_Collection\n        .doc(studentAuthID)\n        .collection(\"Profile\")\n        .doc(\"Experience\")\n        .collection(\"ExpBlocks\")\n        .doc(ex.id)\n        .update({\n          Institution: ex.Institution,\n          Desc: ex.Desc,\n          Start: ex.Start,\n          End: ex.End,\n        })\n        .catch((err) => console.log(err));\n    });\n\n    // Dispatch\n\n    // About\n    about.About = aboutText;\n    about.Instruments = [...allInst];\n    about.Location = location;\n\n    history.push(\"/student-profile/about\");\n  };\n\n  //   REMOVE\n  const removeExp = (event) => {\n    const expID = event.target.getAttribute(\"id\");\n\n    // Remove from DB\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"Experience\")\n      .collection(\"ExpBlocks\")\n      .doc(expID)\n      .delete()\n      .catch((err) => console.log(err));\n\n    //   Dispatch\n    const allExp = [...exps];\n    const filtered = allExp.filter((ex) => ex.id !== expID);\n\n    dispatch(storeStudentExpAction(filtered));\n  };\n  const removeInstrument = (event) => {\n    const instrument = event.target.getAttribute(\"id\");\n\n    const allInstruments = [...about.Instruments];\n    const filtered = allInstruments.filter((inst) => inst !== instrument);\n\n    // Remove from DB\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"About\")\n      .update({\n        Instruments: [...filtered],\n      })\n      .catch((err) => console.log(err));\n\n    //   Dispatch\n\n    const aboutObj = { ...about };\n    aboutObj.Instruments = [...filtered];\n\n    dispatch(storeStudentAboutAction(aboutObj));\n  };\n\n  useEffect(() => {\n    if (!studentAuthID) {\n      history.push(\"/studentdash\");\n      return;\n    }\n  }, []);\n  return (\n    <div>\n      {/* About */}\n      <div>\n        <h2>About</h2>\n        <textarea id=\"taAboutText\" defaultValue={about.About}></textarea>\n      </div>\n\n      {/* Experience */}\n      <div>\n        <h2>Experience</h2>\n        <div>{handleEditExp()}</div>\n        <div>{toggleNewExpForm ? handleNewExp() : null}</div>\n        <br />\n        <button onClick={() => dispatch(toggleNewExpFormAction())}>\n          {toggleNewExpForm ? \"Close\" : \"Add Experience\"}\n        </button>\n      </div>\n\n      {/* Persona; */}\n      <div>\n        <h2>Personal</h2>\n        <h3>Location:</h3>\n        <input type=\"text\" id=\"tbLocation\" defaultValue={about.Location} />\n        <h3>Instruments:</h3>\n        {/* instruments */}\n        {handleInstruments()}\n        <br />\n        {toggleNewInstrumentForm ? handleNewInstrument() : null}\n        <button onClick={() => dispatch(toggleNewInstrumentFormAction())}>\n          {toggleNewInstrumentForm ? \"Close\" : \"+\"}\n        </button>\n      </div>\n      <br />\n      <button onClick={saveAllChanges}>Save All Changes</button>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { students_Collection } from \"../../../utils/firebase\";\nimport {\n  storeStudentAwardsAction,\n  storeStudentCertsAction,\n} from \"../../../redux/actions\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nexport default function ProfileAwardView() {\n  const studentAuthID = useSelector((state) => state.storeStudentAuthIDReducer);\n  const user = useSelector((state) => state.storeStudentUserDataReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // States\n  const awards = useSelector((state) => state.storeStudentAwardsReducer);\n  const certs = useSelector((state) => state.storeStudentCertsReducer);\n\n  // GET\n  const getAllAwards = () => {\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"Awards\")\n      .collection(\"AwardBlocks\")\n      .get()\n      .then((snapshot) => {\n        const awardData = firebaseLooper(snapshot);\n        dispatch(storeStudentAwardsAction(awardData));\n      })\n      .catch((err) => console.log(err));\n  };\n  const getAllCerts = () => {\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"Awards\")\n      .collection(\"CertBlocks\")\n      .get()\n      .then((snapshot) => {\n        const certData = firebaseLooper(snapshot);\n        dispatch(storeStudentCertsAction(certData));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  // HANDLE\n  const handleAwards = () => {\n    return awards.map((awd, i) => {\n      return (\n        <div key={i}>\n          <h3>{awd.Name}</h3>\n          <h4>{awd.Institution}</h4>\n          <p>{awd.Desc}</p>\n          <p>\n            Awarded:{\" \"}\n            {awd.Date ? awd.Date.toDate().toString().substr(4, 11) : null}\n          </p>\n          <hr />\n        </div>\n      );\n    });\n  };\n  const handleCerts = () => {\n    return certs.map((cert, i) => {\n      return (\n        <div key={i}>\n          <h3>{cert.Name}</h3>\n          <h4>{cert.Institution}</h4>\n          <p>{cert.Desc}</p>\n          <p>\n            {cert.Date ? cert.Date.toDate().toString().substr(4, 11) : null}\n          </p>\n          <hr />\n        </div>\n      );\n    });\n  };\n\n  useEffect(() => {\n    if (!studentAuthID) {\n      history.push(\"/studentdash\");\n      return;\n    }\n\n    getAllAwards();\n    getAllCerts();\n  }, []);\n  return (\n    <div>\n      <button onClick={() => history.push(\"/student-profile/awards-edit\")}>\n        Edit\n      </button>\n      {/* Awards */}\n      <div>\n        <h2>Awards</h2>\n        <div>{handleAwards()}</div>\n      </div>\n\n      {/* Certs */}\n      <div>\n        <h2>Certifications</h2>\n        <div>{handleCerts()}</div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport InputDateFormatter from \"../../InputDateFormatter\";\nimport FirebaseDate from \"../../FirebaseDate\";\nimport GetToday from \"../../GetToday\";\nimport RandomString from \"../../RandomString\";\nimport {\n  storeStudentAwardsAction,\n  storeStudentCertsAction,\n  toggleStudentNewAwardFormAction,\n  toggleStudentNewCertFormAction,\n} from \"../../../redux/actions\";\nimport { students_Collection } from \"../../../utils/firebase\";\n\nexport default function ProfileAwardsEdit() {\n  const studentAuthID = useSelector((state) => state.storeStudentAuthIDReducer);\n  const user = useSelector((state) => state.storeStudentUserDataReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // States\n  const awards = useSelector((state) => state.storeStudentAwardsReducer);\n  const certs = useSelector((state) => state.storeStudentCertsReducer);\n\n  //   Toggles\n  const toggleNewAwardForm = useSelector(\n    (state) => state.toggleStudentNewAwardFormReducer\n  );\n  const toggleNewCertForm = useSelector(\n    (state) => state.toggleStudentNewCertFormReducer\n  );\n\n  //   HANDLE\n  const handleAwardsEdit = () => {\n    return awards.map((awd, i) => {\n      return (\n        <div key={i}>\n          <div>\n            <h3>Award Name</h3>\n            <input id={`tbAwardName${i}`} type=\"text\" defaultValue={awd.Name} />\n          </div>\n          <div>\n            <h3>Institution</h3>\n            <input\n              id={`tbAwardInstitution${i}`}\n              type=\"text\"\n              defaultValue={awd.Institution}\n            />\n          </div>\n          <div>\n            <h3>Description</h3>\n            <textarea id={`taAwardDesc${i}`} defaultValue={awd.Desc}></textarea>\n          </div>\n          <div>\n            <h3>Issued</h3>\n            <input\n              id={`daAwardDate${i}`}\n              type=\"date\"\n              defaultValue={InputDateFormatter(awd.Date)}\n            />\n          </div>\n          <button id={awd.id} onClick={removeAward}>\n            Remove\n          </button>\n          <hr />\n        </div>\n      );\n    });\n  };\n  const handleCertsEdit = () => {\n    return certs.map((cert, i) => {\n      return (\n        <div key={i}>\n          <div>\n            <h3>Certification Name</h3>\n            <input id={`tbCertName${i}`} type=\"text\" defaultValue={cert.Name} />\n          </div>\n          <div>\n            <h3>Institution</h3>\n            <input\n              id={`tbCertInstitution${i}`}\n              type=\"text\"\n              defaultValue={cert.Institution}\n            />\n          </div>\n          <div>\n            <h3>Description</h3>\n            <textarea id={`taCertDesc${i}`} defaultValue={cert.Desc}></textarea>\n          </div>\n          <div>\n            <h3>Issued</h3>\n            <input\n              id={`daCertDate${i}`}\n              type=\"date\"\n              defaultValue={InputDateFormatter(cert.Date)}\n            />\n          </div>\n          <button id={cert.id} onClick={removeCert}>\n            Remove\n          </button>\n          <hr />\n        </div>\n      );\n    });\n  };\n  const handleNewAward = () => {\n    return (\n      <div>\n        <div>\n          <h3>Award Name</h3>\n          <input id=\"tbNewAwardName\" type=\"text\" placeholder=\"Award Name\" />\n        </div>\n        <div>\n          <h3>Institution</h3>\n          <input\n            id=\"tbNewAwardInstitution\"\n            type=\"text\"\n            placeholder=\"Institution\"\n          />\n        </div>\n        <div>\n          <h3>Description</h3>\n          <textarea id=\"taNewAwardDesc\" placeholder=\"Description\"></textarea>\n        </div>\n        <div>\n          <h3>Issued</h3>\n          <input\n            id=\"daNewAwardDate\"\n            type=\"date\"\n            defaultValue={InputDateFormatter(GetToday())}\n          />\n        </div>\n        <button onClick={saveNewAward}>Apply</button>\n        <hr />\n      </div>\n    );\n  };\n  const handleNewCert = () => {\n    return (\n      <div>\n        <div>\n          <h3>Certification Name</h3>\n          <input\n            id=\"tbNewCertName\"\n            type=\"text\"\n            placeholder=\"Certification Name\"\n          />\n        </div>\n        <div>\n          <h3>Institution</h3>\n          <input\n            id=\"tbNewCertInstitution\"\n            type=\"text\"\n            placeholder=\"Institution\"\n          />\n        </div>\n        <div>\n          <h3>Description</h3>\n          <textarea id=\"taNewCertDesc\" placeholder=\"Description\"></textarea>\n        </div>\n        <div>\n          <h3>Issued</h3>\n          <input\n            id=\"daNewCertDate\"\n            type=\"date\"\n            defaultValue={InputDateFormatter(GetToday())}\n          />\n        </div>\n        <button onClick={saveNewCert}>Apply</button>\n        <hr />\n      </div>\n    );\n  };\n\n  //   POST\n  const saveNewAward = () => {\n    const awardName = document.querySelector(\"#tbNewAwardName\").value;\n    const awardInstitution = document.querySelector(\"#tbNewAwardInstitution\")\n      .value;\n    const awardDesc = document.querySelector(\"#taNewAwardDesc\").value;\n    const awardDateValue = document\n      .querySelector(\"#daNewAwardDate\")\n      .value.toString();\n\n    const awardDate = FirebaseDate(awardDateValue);\n\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const awardID = `Award${rand1}${rand2}`;\n\n    // Save to DB\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"Awards\")\n      .collection(\"AwardBlocks\")\n      .doc(awardID)\n      .set({\n        Name: awardName,\n        Institution: awardInstitution,\n        Desc: awardDesc,\n        Date: awardDate,\n      })\n      .catch((err) => console.log(err));\n\n    // Dispatch\n    const allAwards = [...awards];\n    allAwards.push({\n      id: awardID,\n      Name: awardName,\n      Institution: awardInstitution,\n      Desc: awardDesc,\n      Date: awardDate,\n    });\n\n    console.log(allAwards);\n\n    dispatch(storeStudentAwardsAction(allAwards));\n    dispatch(toggleStudentNewAwardFormAction());\n  };\n  const saveNewCert = () => {\n    const certName = document.querySelector(\"#tbNewCertName\").value;\n    const certInstitution = document.querySelector(\"#tbNewCertInstitution\")\n      .value;\n    const certDesc = document.querySelector(\"#taNewCertDesc\").value;\n    const certDate = FirebaseDate(\n      document.querySelector(\"#daNewCertDate\").value\n    );\n\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const certID = `Cert${rand1}${rand2}`;\n\n    // Save to DB\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"Awards\")\n      .collection(\"CertBlocks\")\n      .doc(certID)\n      .set({\n        Name: certName,\n        Institution: certInstitution,\n        Desc: certDesc,\n        Date: certDate,\n      })\n      .catch((err) => console.log(err));\n\n    //   Dispatch\n    const allCerts = [...certs];\n    allCerts.push({\n      id: certID,\n      Name: certName,\n      Institution: certInstitution,\n      Desc: certDesc,\n      Date: certDate,\n    });\n\n    dispatch(storeStudentCertsAction(allCerts));\n    dispatch(toggleStudentNewCertFormAction());\n  };\n  const saveAllChanges = () => {\n    let awardArray = [];\n    let certArray = [];\n\n    // Awards\n    for (let i = 0; i < awards.length; i = i + 1) {\n      const awardName = document.querySelector(`#tbAwardName${i}`).value;\n      const awardInstutition = document.querySelector(`#tbAwardInstitution${i}`)\n        .value;\n      const awardDesc = document.querySelector(`#taAwardDesc${i}`).value;\n      const awardDate = FirebaseDate(\n        document.querySelector(`#daAwardDate${i}`).value\n      );\n\n      const awardObj = {\n        id: awards[i].id,\n        Name: awardName,\n        Institution: awardInstutition,\n        Desc: awardDesc,\n        Date: awardDate,\n      };\n\n      awardArray.push(awardObj);\n    }\n\n    // Certs\n    for (let i = 0; i < certs.length; i = i + 1) {\n      const certName = document.querySelector(`#tbCertName${i}`).value;\n      const certInstitution = document.querySelector(`#tbCertInstitution${i}`)\n        .value;\n      const certDesc = document.querySelector(`#taCertDesc${i}`).value;\n      const certDate = FirebaseDate(\n        document.querySelector(`#daCertDate${i}`).value\n      );\n\n      const certObj = {\n        id: certs[i].id,\n        Name: certName,\n        Institution: certInstitution,\n        Desc: certDesc,\n        Date: certDate,\n      };\n\n      certArray.push(certObj);\n    }\n\n    // Save to DB\n    awardArray.forEach((awd) => {\n      students_Collection\n        .doc(studentAuthID)\n        .collection(\"Profile\")\n        .doc(\"Awards\")\n        .collection(\"AwardBlocks\")\n        .doc(awd.id)\n        .update({\n          Name: awd.Name,\n          Institution: awd.Institution,\n          Desc: awd.Desc,\n          Date: awd.Date,\n        })\n        .catch((err) => console.log(err));\n    });\n    certArray.forEach((cert) => {\n      students_Collection\n        .doc(studentAuthID)\n        .collection(\"Profile\")\n        .doc(\"Awards\")\n        .collection(\"CertBlocks\")\n        .doc(cert.id)\n        .update({\n          Name: cert.Name,\n          Institution: cert.Institution,\n          Desc: cert.Desc,\n          Date: cert.Date,\n        })\n        .catch((err) => console.log(err));\n    });\n\n    // Dispatch\n    dispatch(storeStudentAwardsAction(awardArray));\n    dispatch(storeStudentCertsAction(certArray));\n\n    history.push(\"/student-profile/awards\");\n  };\n\n  // REMOVE\n  const removeAward = (event) => {\n    const awardID = event.target.getAttribute(\"id\");\n\n    // Remove from DB\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"Awards\")\n      .collection(\"AwardBlocks\")\n      .doc(awardID)\n      .delete()\n      .catch((err) => console.log(err));\n\n    // Dispatch\n    const allAwards = [...awards];\n    const filtered = allAwards.filter((awd) => awd.id !== awardID);\n\n    dispatch(storeStudentAwardsAction(filtered));\n  };\n  const removeCert = (event) => {\n    const certID = event.target.getAttribute(\"id\");\n\n    // Remove from DB\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Profile\")\n      .doc(\"Awards\")\n      .collection(\"CertBlocks\")\n      .doc(certID)\n      .delete()\n      .catch((err) => console.log(err));\n\n    // Dispatch\n    const allCerts = [...certs];\n    const filtered = allCerts.filter((cert) => cert.id !== certID);\n\n    dispatch(storeStudentCertsAction(filtered));\n  };\n\n  useEffect(() => {\n    if (!studentAuthID) {\n      history.push(\"/studentdash\");\n      return;\n    }\n  }, []);\n\n  return (\n    <div>\n      {/* Awards */}\n      <div>\n        <h2>Awards</h2>\n        <div>{handleAwardsEdit()}</div>\n        <div>{toggleNewAwardForm ? handleNewAward() : null}</div>\n        <button onClick={() => dispatch(toggleStudentNewAwardFormAction())}>\n          {toggleNewAwardForm ? \"Close\" : \"Add Award\"}\n        </button>\n      </div>\n\n      {/* Certs */}\n      <div>\n        <h2>Certifications</h2>\n        <div>{handleCertsEdit()}</div>\n        <div>{toggleNewCertForm ? handleNewCert() : null}</div>\n        <button onClick={() => dispatch(toggleStudentNewCertFormAction())}>\n          {toggleNewCertForm ? \"Close\" : \"Add Certification\"}\n        </button>\n      </div>\n      <br />\n      <button onClick={saveAllChanges}>Save All Changes</button>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Switch, Route, Link, useRouteMatch } from \"react-router-dom\";\n\nimport TopBar from \"../TopBar\";\nimport Footer from \"../Footer\";\nimport ProfileFeedView from \"../Profile/ProfileFeedView\";\nimport ProfileFeedEdit from \"../Profile/ProfileFeedEdit\";\nimport ProfileAboutView from \"../Profile/ProfileAboutView\";\nimport ProfileAboutEdit from \"../Profile/ProfileAboutEdit\";\nimport ProfileAwardsView from \"../Profile/ProfileAwardsView\";\nimport ProfileAwardsEdit from \"../Profile/ProfileAwardsEdit\";\n\nexport default function StudentProfileMain() {\n  const studentAuthID = useSelector((state) => state.storeStudentAuthIDReducer);\n  const user = useSelector((state) => state.storeStudentUserDataReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { url } = useRouteMatch();\n\n  useEffect(() => {\n    if (!studentAuthID) {\n      history.push(\"/studentdash\");\n      return;\n    }\n  }, []);\n\n  return (\n    <div>\n      {/* Top Bar */}\n      <div>\n        <TopBar />\n      </div>\n\n      {/* Cover Section */}\n      <div>\n        {/* Profile Photo */}\n        <img src=\"\" alt=\"\" />\n        {/* Full Name */}\n        <h3>\n          {user.FirstName} {user.LastName}\n        </h3>\n        <p>{user.AccountType}</p>\n      </div>\n\n      {/* Profile Options */}\n      <div>\n        <div>\n          <ul>\n            <Link to={`${url}/feed`}>Feed</Link>\n            <br />\n            <Link to={`${url}/about`}>About</Link>\n            <br />\n            <Link to={`${url}/awards`}>Awards</Link>\n            <br />\n            <Link to={`${url}/gallery`}>Gallery</Link>\n            <br />\n          </ul>\n        </div>\n\n        <div>\n          {/* ********************** */}\n\n          {/* Switch */}\n          <Switch>\n            {/* Feed */}\n            <Route path={`${url}/feed`}>\n              <ProfileFeedView />\n            </Route>\n            <Route path={`${url}/feed-edit`}>\n              <ProfileFeedEdit />\n            </Route>\n\n            {/* About */}\n            <Route path={`${url}/about`}>\n              <ProfileAboutView />\n            </Route>\n            <Route path={`${url}/about-edit`}>\n              <ProfileAboutEdit />\n            </Route>\n\n            {/* Awards */}\n            <Route path={`${url}/awards`}>\n              <ProfileAwardsView />\n            </Route>\n            <Route path={`${url}/awards-edit`}>\n              <ProfileAwardsEdit />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TopBar from \"../TopBar\";\nimport Footer from \"../Footer\";\nimport {\n  storeStudentSingleCourseAction,\n  flagStudentTeacherConnectionAction,\n  storeStudentTeacherListAction,\n  storeStudentCoursesAction,\n} from \"../../../redux/actions\";\nimport {\n  courses_Collection,\n  teachers_Collection,\n} from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nexport default function StudentCoursesMain() {\n  const studentAuthID = useSelector((state) => state.storeStudentAuthIDReducer);\n  const user = useSelector((state) => state.storeStudentUserDataReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // States\n  const studentTeacherConn = useSelector(\n    (state) => state.flagStudentTeacherConnectionReducer\n  );\n  const studentTeacherList = useSelector(\n    (state) => state.storeStudentTeacherListReducer\n  );\n\n  const courses = useSelector((state) => state.storeStudentCoursesReducer);\n\n  //   GET\n  const getStudentTeacherConnection = () => {\n    let teachers = [];\n    teachers_Collection\n      .get()\n      .then((snapshot) => {\n        const teacherList = firebaseLooper(snapshot);\n        teacherList.forEach((teach) => {\n          teachers_Collection\n            .doc(teach.id)\n            .collection(\"Students\")\n            .get()\n            .then((snapshot) => {\n              const studentList = firebaseLooper(snapshot);\n              studentList.forEach((stud) => {\n                if (stud.id === studentAuthID) {\n                  dispatch(flagStudentTeacherConnectionAction(true));\n                  teachers.push(teach);\n                  dispatch(storeStudentTeacherListAction(teachers));\n                }\n              });\n            })\n            .catch((err) => console.log(err));\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n  const getAllCourses = () => {\n    if (studentTeacherConn) {\n      studentTeacherList.forEach((teach) => {\n        courses_Collection\n          .where(\"Creator\", \"==\", teach.id)\n          .get()\n          .then((snapshot) => {\n            const courses = firebaseLooper(snapshot);\n            dispatch(storeStudentCoursesAction(courses));\n          })\n          .catch((err) => console.log(err));\n      });\n    }\n  };\n\n  //   HANDLE\n  const handleCourseList = () => {\n    return courses.map((course, i) => {\n      return (\n        <div key={i}>\n          <h3>{course.Name}</h3>\n          <h4>Instructor: {course.Creator}</h4>\n          <button id={course.id} onClick={navCoursePreview}>\n            Enter Course\n          </button>\n        </div>\n      );\n    });\n  };\n\n  //   NAVIGATE\n  const navCoursePreview = (event) => {\n    const courseID = event.target.getAttribute(\"id\");\n\n    courses.forEach((course) => {\n      if (course.id === courseID) {\n        dispatch(storeStudentSingleCourseAction(course));\n      }\n    });\n\n    history.push(\"/student-course-preview\");\n  };\n\n  useEffect(() => {\n    if (!studentAuthID) {\n      history.push(\"/studentdash\");\n      return;\n    }\n\n    getStudentTeacherConnection();\n    getAllCourses();\n  }, []);\n  return (\n    <div>\n      {/* TopBar */}\n      <div>\n        <TopBar />\n      </div>\n\n      {/* Content */}\n      <div>\n        <div>\n          <h1>Courses</h1>\n        </div>\n\n        {/* Search */}\n        <div>\n          <input\n            id=\"tbCourseSearch\"\n            type=\"text\"\n            placeholder=\"Type Course Name/Keywords\"\n          />\n        </div>\n        <hr />\n        <button\n          onClick={() => {\n            getStudentTeacherConnection();\n            getAllCourses();\n          }}\n        >\n          Rerender\n        </button>\n        {/* Course List */}\n        <div>{handleCourseList()}</div>\n      </div>\n\n      {/* Footer */}\n      <div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TopBar from \"../TopBar\";\nimport Footer from \"../Footer\";\nimport {\n  storeStudentCourseLessonListAction,\n  toggleStudentCourseExerListAction,\n  toggleStudentCourseLessonListAction,\n  storeStudentCourseExerListAction,\n  storeStudentCourseQuizListAction,\n  toggleStudentCourseQuizListAction,\n  storeCurrentCourseComponentAction,\n  storeStudentNextExerciseAction,\n  storeStudentNextQuizAction,\n} from \"../../../redux/actions\";\nimport {\n  courses_Collection,\n  students_Collection,\n} from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nexport default function StudentCoursePreview() {\n  const studentAuthID = useSelector((state) => state.storeStudentAuthIDReducer);\n  const user = useSelector((state) => state.storeStudentUserDataReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  //   Toggles\n  const toggleLessonList = useSelector(\n    (state) => state.toggleStudentCourseLessonListReducer\n  );\n  const toggleExerList = useSelector(\n    (state) => state.toggleStudentCourseExerListReducer\n  );\n  const toggleQuizList = useSelector(\n    (state) => state.toggleStudentCourseQuizListReducer\n  );\n\n  const course = useSelector((state) => state.storeStudentSingleCourseReducer);\n  const lessons = useSelector(\n    (state) => state.storeStudentCourseLessonListReducer\n  );\n  const currComp = useSelector(\n    (state) => state.storeCurrentCourseComponentReducer\n  );\n  const exers = useSelector((state) => state.storeStudentCourseExerListReducer);\n  const quizzes = useSelector(\n    (state) => state.storeStudentCourseQuizListReducer\n  );\n\n  // GET\n  const getAllCourseLessons = () => {\n    courses_Collection\n      .doc(course.id)\n      .collection(\"Lessons\")\n      .orderBy(\"Order\", \"asc\")\n      .get()\n      .then((snapshot) => {\n        const lessonsList = firebaseLooper(snapshot);\n        dispatch(storeStudentCourseLessonListAction(lessonsList));\n      })\n      .catch((err) => console.log(err));\n  };\n  const getAllCourseExercises = () => {\n    courses_Collection\n      .doc(course.id)\n      .collection(\"Exercises\")\n      .orderBy(\"Order\", \"asc\")\n      .get()\n      .then((snapshot) => {\n        const exerList = firebaseLooper(snapshot);\n\n        dispatch(storeStudentCourseExerListAction(exerList));\n      })\n      .catch((err) => console.log(err));\n  };\n  const getAllCourseQuizzes = () => {\n    courses_Collection\n      .doc(course.id)\n      .collection(\"Quizzes\")\n      .orderBy(\"Order\", \"asc\")\n      .get()\n      .then((snapshot) => {\n        const quizList = firebaseLooper(snapshot);\n\n        dispatch(storeStudentCourseQuizListAction(quizList));\n      })\n      .catch((err) => console.log(err));\n  };\n  const getStudentProgress = () => {\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"CourseProgress\")\n      .where(\"CourseName\", \"==\", course.Name)\n      .orderBy(\"Date\", \"desc\")\n      .get()\n      .then((snapshot) => {\n        const progressData = firebaseLooper(snapshot);\n        let progress = [];\n        progressData.forEach((prog) => {\n          if (prog.CourseName === course.Name) {\n            progress.push(prog);\n          }\n        });\n\n        // If there is data\n        if (progress.length > 0) {\n          const lastComp = progress[0];\n\n          if (lastComp.CompType === \"Lesson\") {\n            // get next exer\n            courses_Collection\n              .doc(course.id)\n              .collection(\"Exercises\")\n              .where(\"Order\", \"==\", lastComp.Order)\n              .get()\n              .then((snapshot) => {\n                const exerData = firebaseLooper(snapshot);\n                dispatch(storeCurrentCourseComponentAction(exerData[0]));\n                dispatch(storeStudentNextExerciseAction(exerData[0]));\n              })\n              .catch((err) => console.log(err));\n          } else if (lastComp.CompType === \"Exercise\") {\n            courses_Collection\n              .doc(course.id)\n              .collection(\"Quizzes\")\n              .where(\"Order\", \"==\", lastComp.Order)\n              .get()\n              .then((snapshot) => {\n                const quizData = firebaseLooper(snapshot);\n                courses_Collection\n                  .doc(course.id)\n                  .collection(\"Quizzes\")\n                  .doc(quizData[0].id)\n                  .collection(\"Components\")\n                  .get()\n                  .then((snapshot) => {\n                    const compData = firebaseLooper(snapshot);\n                    const tempObj = {\n                      ...quizData[0],\n                      Components: compData,\n                    };\n                    dispatch(storeCurrentCourseComponentAction(tempObj));\n                    dispatch(storeStudentNextQuizAction(tempObj));\n                  })\n                  .catch((err) => console.log(err));\n              })\n              .catch((err) => console.log(err));\n          } else if (lastComp.CompType === \"Quiz\") {\n            courses_Collection\n              .doc(course.id)\n              .collection(\"Lessons\")\n              .where(\"Order\", \"==\", lastComp.Order + 1)\n              .get()\n              .then((snapshot) => {\n                const lessonData = firebaseLooper(snapshot);\n                dispatch(storeCurrentCourseComponentAction(lessonData[0]));\n                dispatch(storeStudentNextExerciseAction(lessonData[0]));\n              })\n              .catch((err) => console.log(err));\n          }\n          // Here, the user should get the latest progress block and assess what comes next. That way the Start button can be added to the appropriate component.Consider the order.\n        } else {\n          courses_Collection\n            .doc(course.id)\n            .collection(\"Lessons\")\n            .where(\"Order\", \"==\", 1)\n            .get()\n            .then((snapshot) => {\n              const lessonData = firebaseLooper(snapshot);\n              dispatch(storeCurrentCourseComponentAction(lessonData[0]));\n            })\n            .catch((err) => console.log(err));\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  //   HANDLE\n  const handleLessonList = () => {\n    return lessons.map((lesson, i) => {\n      return (\n        <div key={i}>\n          <p>{lesson.Name}</p>\n          {currComp.Name === lesson.Name ? (\n            <button\n              style={{\n                backgroundColor: \"#54e346\",\n                color: \"white\",\n                border: \"1px solid rgba(0,0,0,0.2)\",\n                padding: \"1%\",\n                width: \"20%\",\n                borderRadius: '3px'\n              }}\n              onClick={navCourseLesson}\n            >\n              Start\n            </button>\n          ) : null}\n        </div>\n      );\n    });\n  };\n  const handleExerList = () => {\n    return exers.map((exer, i) => {\n      return (\n        <div key={i}>\n          <p>{exer.Name}</p>\n          {currComp.Name === exer.Name ? (\n            <button onClick={navCourseExercise}>Start</button>\n          ) : null}\n        </div>\n      );\n    });\n  };\n  const handleQuizList = () => {\n    return quizzes.map((quiz, i) => {\n      return (\n        <div key={i}>\n          <p>{quiz.Name}</p>\n          {currComp.Name === quiz.Name ? (\n            <button onClick={navCourseQuiz}>Start</button>\n          ) : null}\n        </div>\n      );\n    });\n  };\n\n  // NAV\n  const navCourseLesson = () => {\n    // We are assuming that the lesson is already in dispatch\n\n    history.push(\"/student-course-lesson\");\n  };\n  const navCourseExercise = () => {\n    history.push(\"/student-course-exercise\");\n  };\n  const navCourseQuiz = () => {\n    history.push(\"/student-course-quiz\");\n  };\n\n  useEffect(() => {\n    if (!studentAuthID) {\n      history.push(\"/studentdash\");\n      return;\n    }\n\n    getAllCourseLessons();\n    getAllCourseExercises();\n    getAllCourseQuizzes();\n    getStudentProgress();\n  }, []);\n\n  return (\n    <div>\n      {/* TopBar */}\n      <div>\n        <TopBar />\n      </div>\n\n      {/* Content */}\n      <div>\n        {/* Left */}\n        <div style={{ width: \"48%\", float: \"left\", padding: \"1%\" }}>\n          <h1>{course.Name}</h1>\n          <img\n            src=\"/Images/course-thumbnail.jpg\"\n            alt=\"\"\n            style={{ width: \"400px\", height: \"auto\" }}\n          />\n          <p>{course.Desc}</p>\n        </div>\n\n        {/* Right */}\n        <div style={{ width: \"48%\", float: \"right\", padding: \"1%\" }}>\n          <h2>Components</h2>\n\n          {/* Lessons */}\n          <div>\n            <button\n              style={{\n                width: \"100%\",\n                textAlign: \"left\",\n                padding: \"2%\",\n                backgroundColor: \"white\",\n                border: \"1px solid black\",\n                borderRadius: \"3px\",\n              }}\n              onClick={() => dispatch(toggleStudentCourseLessonListAction())}\n            >\n              Lessons\n            </button>\n            <div>{toggleLessonList ? handleLessonList() : null}</div>\n          </div>\n          <br />\n          {/* Exercises */}\n          <div>\n            <button\n              style={{\n                width: \"100%\",\n                textAlign: \"left\",\n                padding: \"2%\",\n                backgroundColor: \"white\",\n                border: \"1px solid black\",\n                borderRadius: \"3px\",\n              }}\n              onClick={() => dispatch(toggleStudentCourseExerListAction())}\n            >\n              Exercises\n            </button>\n            <div>{toggleExerList ? handleExerList() : null}</div>\n          </div>\n          <br />\n          {/* Quizzes */}\n          <div>\n            <button\n              style={{\n                width: \"100%\",\n                textAlign: \"left\",\n                padding: \"2%\",\n                backgroundColor: \"white\",\n                border: \"1px solid black\",\n                borderRadius: \"3px\",\n              }}\n              onClick={() => dispatch(toggleStudentCourseQuizListAction())}\n            >\n              Quizzes\n            </button>\n            <div>{toggleQuizList ? handleQuizList() : null}</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Footer */}\n      <div style={{ clear: \"left\" }}>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Footer from \"../Footer\";\nimport RandomString from \"../../RandomString\";\nimport GetToday from \"../../GetToday\";\n\nimport {\n  storeStudentLessonQuestionResultAction,\n  storeStudentNextExerciseAction,\n} from \"../../../redux/actions\";\nimport {\n  courses_Collection,\n  students_Collection,\n} from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nexport default function StudentCourseLesson() {\n  const studentAuthID = useSelector((state) => state.storeStudentAuthIDReducer);\n  const user = useSelector((state) => state.storeStudentUserDataReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const currLesson = useSelector(\n    (state) => state.storeCurrentCourseComponentReducer\n  );\n  const result = useSelector(\n    (state) => state.storeStudentLessonQuestionResultReducer\n  );\n  const course = useSelector((state) => state.storeStudentSingleCourseReducer);\n\n  // GET\n  const getNextExercise = () => {\n    courses_Collection\n      .doc(course.id)\n      .collection(\"Exercises\")\n      .get()\n      .then((snapshot) => {\n        const exerData = firebaseLooper(snapshot);\n        exerData.forEach((exer) => {\n          if (exer.Order === currLesson.Order) {\n            dispatch(storeStudentNextExerciseAction(exer));\n          }\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  //   HANDLE\n  const handleLessonUI = () => {\n    return (\n      <div>\n        <div>\n          <h2>Video is here...</h2>\n        </div>\n        <div>\n          <h2>Textual Lesson</h2>\n          <p>{currLesson.Text}</p>\n        </div>\n        <div>{handleLessonQuestion()}</div>\n        <div>{handleResult()}</div>\n      </div>\n    );\n  };\n  const handleLessonQuestion = () => {\n    if (currLesson.Text) {\n      return (\n        <div>\n          <h3>{currLesson.Question}</h3>\n          <div>\n            {currLesson.Options.map((opt, i) => {\n              return (\n                <div>\n                  <input\n                    type=\"radio\"\n                    id={`Opt${i}`}\n                    name=\"lessonOpts\"\n                    value={opt}\n                  />\n                  <label for={opt}>{opt}</label>\n                </div>\n              );\n            })}\n          </div>\n          <br />\n          <div>\n            <button onClick={calcQuestionResult}>Check</button>\n          </div>\n          <br />\n        </div>\n      );\n    }\n  };\n  const handleResult = () => {\n    if (result === \"correct\") {\n      return (\n        <div>\n          <p>That is correct!</p>\n          <button onClick={navExercise}>Finish</button>\n        </div>\n      );\n    } else if (result === \"incorrect\") {\n      return (\n        <div>\n          <p>Incorrect. Try Again.</p>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <p>Answer question correctly before completing lesson.</p>\n        </div>\n      );\n    }\n  };\n\n  // NAV\n  const navExercise = () => {\n    getNextExercise();\n    dispatch(storeStudentLessonQuestionResultAction(\"\"));\n\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const progID = `Prog${rand1}${rand2}`;\n\n    // Update Course Progress\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"CourseProgress\")\n      .doc(progID)\n      .set({\n        CourseName: course.Name,\n        CompName: currLesson.Name,\n        CompType: \"Lesson\",\n        Order: currLesson.Order,\n        Date: GetToday(),\n      })\n      .catch((err) => console.log(err));\n\n    history.push(\"/student-course-exercise\");\n  };\n\n  //   CALC\n  const calcQuestionResult = () => {\n    const answer = currLesson.Answer;\n\n    for (let i = 0; i < currLesson.Options.length; i = i + 1) {\n      const radioChoice = document.querySelector(`#Opt${i}`).checked;\n      if (radioChoice) {\n        if (currLesson.Options[i] === answer) {\n          dispatch(storeStudentLessonQuestionResultAction(\"correct\"));\n        } else {\n          dispatch(storeStudentLessonQuestionResultAction(\"incorrect\"));\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (!studentAuthID) {\n      history.push(\"/studentdash\");\n      return;\n    }\n  }, []);\n  return (\n    <div>\n      <br />\n      <div>\n        <h1>{currLesson.Name}</h1>\n      </div>\n\n      <div>{handleLessonUI()}</div>\n\n      {/* Footer */}\n      <div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  courses_Collection,\n  students_Collection,\n} from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nimport Footer from \"../Footer\";\nimport RandomString from \"../../RandomString\";\nimport GetToday from \"../../GetToday\";\nimport { storeStudentNextQuizAction } from \"../../../redux/actions\";\n\nexport default function StudentCourseExercise() {\n  const studentAuthID = useSelector((state) => state.storeStudentAuthIDReducer);\n  const user = useSelector((state) => state.storeStudentUserDataReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const currExer = useSelector(\n    (state) => state.storeStudentNextExerciseReducer\n  );\n  const course = useSelector((state) => state.storeStudentSingleCourseReducer);\n\n  //   HANDLE\n  const handleExercise = () => {\n    if (currExer.Type === \"textual\") {\n      return (\n        <div>\n          <div>\n            <p>{currExer.Text}</p>\n          </div>\n\n          <div>\n            <textarea id=\"taTextualResponse\" placeholder=\"Response\"></textarea>\n          </div>\n          <div>\n            <button onClick={navQuiz}>Finish</button>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  // NAV\n  const navQuiz = () => {\n    // First, store their response to DB. No need to dispatch\n    const textRes = document.querySelector(\"#taTextualResponse\").value;\n\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const exerResID = `ExerRes${rand1}${rand2}`;\n\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"Exercises\")\n      .doc(exerResID)\n      .set({\n        Course: course.Name,\n        Response: textRes,\n        Order: currExer.Order,\n        Name: currExer.Name,\n        Date: GetToday(),\n      })\n      .catch((err) => console.log(err));\n\n    // Store in CourseProgress\n    const rand3 = RandomString();\n    const rand4 = RandomString();\n    const progID = `Prog${rand3}${rand4}`;\n\n    // Update Course Progress\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"CourseProgress\")\n      .doc(progID)\n      .set({\n        CourseName: course.Name,\n        CompName: currExer.Name,\n        CompType: \"Exercise\",\n        Order: currExer.Order,\n        Date: GetToday(),\n      })\n      .catch((err) => console.log(err));\n\n    // Get Next Quiz\n    courses_Collection\n      .doc(course.id)\n      .collection(\"Quizzes\")\n      .get()\n      .then((snapshot) => {\n        const quizData = firebaseLooper(snapshot);\n        quizData.forEach((quiz) => {\n          if (quiz.Order === currExer.Order) {\n            courses_Collection\n              .doc(course.id)\n              .collection(\"Quizzes\")\n              .doc(quiz.id)\n              .collection(\"Components\")\n              .get()\n              .then((snapshot) => {\n                const compData = firebaseLooper(snapshot);\n\n                const quizObj = {\n                  ...quiz,\n                  Components: compData,\n                };\n\n                dispatch(storeStudentNextQuizAction(quizObj));\n              })\n              .catch((err) => console.log(err));\n          }\n        });\n      })\n      .catch((err) => console.log(err));\n\n    history.push(\"/student-course-quiz\");\n  };\n\n  useEffect(() => {\n    if (!studentAuthID) {\n      history.push(\"/studentdash\");\n      return;\n    }\n  }, []);\n  return (\n    <div>\n      <div>\n        <h1>{currExer.Name}</h1>\n      </div>\n\n      {/* Content */}\n      <div>{handleExercise()}</div>\n\n      {/* Footer */}\n      <div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  storeStudentQuizResultsAction,\n  toggleStudentQuizResultsAction,\n  storeCurrentCourseComponentAction,\n  storeStudentNextLessonAction,\n} from \"../../../redux/actions\";\nimport {\n  courses_Collection,\n  students_Collection,\n} from \"../../../utils/firebase\";\nimport { firebaseLooper } from \"../../../utils/tools\";\n\nimport Footer from \"../Footer\";\nimport RandomString from \"../../RandomString\";\nimport GetToday from \"../../GetToday\";\n\nexport default function StudentCourseQuiz() {\n  const studentAuthID = useSelector((state) => state.storeStudentAuthIDReducer);\n  const user = useSelector((state) => state.storeStudentUserDataReducer);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  //   State\n  const toggleQuizResults = useSelector(\n    (state) => state.toggleStudentQuizResultsReducer\n  );\n\n  const course = useSelector((state) => state.storeStudentSingleCourseReducer);\n\n  const quiz = useSelector((state) => state.storeStudentNextQuizReducer);\n  const results = useSelector((state) => state.storeStudentQuizResultsReducer);\n\n  //   HANDLE\n  const handleQuizComponents = () => {\n    if (quiz.Components) {\n      return (\n        <div>\n          {quiz.Components.map((q, i) => {\n            if (q.Type === \"multiple\") {\n              return (\n                <div key={i}>\n                  <h3>{q.Question}</h3>\n                  {q.Options.map((opt, a) => {\n                    return (\n                      <div>\n                        <input\n                          type=\"radio\"\n                          id={`comp${i}Opt${a}`}\n                          name={`comp${i}`}\n                          value={opt}\n                        />\n                        <label>{opt}</label>\n                        <br />\n                      </div>\n                    );\n                  })}\n                </div>\n              );\n            } else if (q.Type === \"short\") {\n              return (\n                <div key={i}>\n                  <h3>{q.Text}</h3>\n                  <p>Please type your response below:</p>\n                  <textarea id={`taShortRes${i}`}></textarea>\n                </div>\n              );\n            } else if (q.Type === \"long\") {\n              return (\n                <div key={i}>\n                  <h3>{q.Text}</h3>\n                  <p>Please type your response below:</p>\n                  <textarea id={`taLongRes${i}`}></textarea>\n                </div>\n              );\n            } else if (q.Type === \"boolean\") {\n              return (\n                <div key={i}>\n                  <h3>{q.Statement}</h3>\n                  <input\n                    type=\"radio\"\n                    id={`raTrue${i}`}\n                    name={`raBool${i}`}\n                    value=\"true\"\n                  />\n                  <label>True</label>\n                  <br />\n                  <input\n                    type=\"radio\"\n                    id={`raFalse${i}`}\n                    name={`raBool${i}`}\n                    value=\"false\"\n                  />\n                  <label>False</label>\n                  <br />\n                </div>\n              );\n            }\n          })}\n          <br />\n          <button onClick={calcResults}>Submit</button>\n        </div>\n      );\n    }\n  };\n  const handleResults = () => {\n    //   Display results\n    return (\n      <div>\n        {results.map((re, i) => {\n          if (re.Type === \"multiple\") {\n            return (\n              <div key={i}>\n                <h3>\n                  {i + 1}. {quiz.Components[i].Question}\n                </h3>\n                <p>Your Answer: {re.Given}</p>\n                <p>Correct Answer: {re.Answer}</p>\n              </div>\n            );\n          } else if (re.Type === \"short\") {\n            return (\n              <div key={i}>\n                <h3>\n                  {i + 1}. {quiz.Components[i].Text}\n                </h3>\n                <p>Your Answer: {re.Given}</p>\n                <p>Correct Answer: {re.Answer}</p>\n              </div>\n            );\n          } else if (re.Type === \"long\") {\n            return (\n              <div key={i}>\n                <h3>\n                  {i + 1}. {quiz.Components[i].Text}\n                </h3>\n                <p>Your Answer: {re.Given}</p>\n                <p>Correct Answer: {re.Answer}</p>\n              </div>\n            );\n          } else if (re.Type === \"boolean\") {\n            return (\n              <div key={i}>\n                <h3>\n                  {i + 1}. {quiz.Components[i].Statement}\n                </h3>\n                <p>Your Answer: {re.Given}</p>\n                <p>Correct Answer: {re.Answer}</p>\n              </div>\n            );\n          }\n        })}\n        <br />\n        <button onClick={navLesson}>Finish</button>\n      </div>\n    );\n  };\n\n  //   CALC\n  const calcResults = () => {\n    let results = [];\n    quiz.Components.forEach((comp, i) => {\n      if (comp.Type === \"multiple\") {\n        const compLength = comp.Options.length;\n        const answer = comp.Answer;\n\n        for (let a = 0; a < compLength; a = a + 1) {\n          const radioChecked = document.querySelector(`#comp${i}Opt${a}`)\n            .checked;\n          const radioValue = document.querySelector(`#comp${i}Opt${a}`).value;\n\n          if (radioChecked) {\n            //   Insert into results\n            let thing = \"\";\n            if (answer === radioValue) {\n              thing = \"Correct\";\n            } else {\n              thing = \"Incorrect\";\n            }\n            results.push({\n              Answer: answer,\n              Given: radioValue,\n              Result: thing,\n              Type: \"multiple\",\n            });\n          }\n        }\n      } else if (comp.Type === \"short\") {\n        const answer = comp.Answer;\n        const shortRes = document.querySelector(`#taShortRes${i}`).value;\n\n        results.push({\n          Answer: answer,\n          Given: shortRes,\n          Result: 'Pending',\n          Type: \"short\",\n        });\n      } else if (comp.Type === \"long\") {\n        const answer = comp.Answer;\n        const longRes = document.querySelector(`#taLongRes${i}`).value;\n\n        results.push({\n          Answer: answer,\n          Given: longRes,\n          Result: 'Pending',\n          Type: \"long\",\n        });\n      } else if (comp.Type === \"boolean\") {\n        const answer = comp.Answer;\n        const trueRes = document.querySelector(`#raTrue${i}`).checked;\n        const falseRes = document.querySelector(`#raFalse${i}`).checked;\n\n        if (trueRes) {\n          if (answer === \"true\") {\n            // Correct\n            results.push({\n              Answer: answer,\n              Given: \"true\",\n              Result: \"Correct\",\n              Type: \"boolean\",\n            });\n          } else {\n            // Incorrect\n            results.push({\n              Answer: answer,\n              Given: \"true\",\n              Result: \"Incorrect\",\n              Type: \"boolean\",\n            });\n          }\n        } else if (falseRes) {\n          if (answer === \"false\") {\n            // Correct\n            results.push({\n              Answer: answer,\n              Given: \"false\",\n              Result: \"Correct\",\n              Type: \"boolean\",\n            });\n          } else {\n            // Incorrect\n            results.push({\n              Answer: answer,\n              Given: \"false\",\n              Result: \"Incorrect\",\n              Type: \"boolean\",\n            });\n          }\n        }\n      }\n    });\n\n  \n\n    // Save results in DB\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const quizID = `Quiz${rand1}${rand2}`;\n    results.forEach((result) => {\n      const rand3 = RandomString();\n      const rand4 = RandomString();\n      const resultID = `Result${rand3}${rand4}`;\n\n      students_Collection\n        .doc(studentAuthID)\n        .collection(\"Quizzes\")\n        .doc(quizID)\n        .collection(\"Results\")\n        .doc(resultID)\n        .set({\n          Answer: result.Answer,\n          Given: result.Given,\n          Result: result.Result,\n        })\n        .catch((err) => console.log(err));\n    });\n\n\n      // Calculate Results\n      dispatch(toggleStudentQuizResultsAction());\n      dispatch(storeStudentQuizResultsAction(results));\n  };\n\n  //   NAV\n  const navLesson = () => {\n    const nextOrder = quiz.Order + 1;\n\n    courses_Collection\n      .doc(course.id)\n      .collection(\"Lessons\")\n      .get()\n      .then((snapshot) => {\n        const lessonsList = firebaseLooper(snapshot);\n        lessonsList.forEach((less) => {\n          if (less.Order === nextOrder) {\n            dispatch(storeCurrentCourseComponentAction(less));\n            dispatch(storeStudentNextLessonAction(less));\n          }\n        });\n      })\n      .catch((err) => console.log(err));\n\n    //   Save progress to DB\n    const rand1 = RandomString();\n    const rand2 = RandomString();\n    const progID = `Prog${rand1}${rand2}`;\n\n    students_Collection\n      .doc(studentAuthID)\n      .collection(\"CourseProgress\")\n      .doc(progID)\n      .set({\n        CompName: quiz.Name,\n        CompType: \"Quiz\",\n        CourseName: course.Name,\n        Date: GetToday(),\n        Order: quiz.Order,\n      })\n      .catch((err) => console.log(err));\n\n    // Navigate to Lesson\n    history.push(\"/student-course-lesson\");\n  };\n\n  useEffect(() => {\n    if (!studentAuthID) {\n      history.push(\"/studentdash\");\n      return;\n    }\n  }, []);\n  return (\n    <div>\n      <div>\n        <h1>{quiz.Name}</h1>\n      </div>\n\n      <hr />\n      <div>{toggleQuizResults ? handleResults() : handleQuizComponents()}</div>\n\n      {/* Footer */}\n      <div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n","import Home from \"./components/Home\";\nimport Courses from \"./components/Courses\";\nimport Plans from \"./components/Plans\";\n// Support\nimport Contact from \"./components/Contact\";\nimport Login from \"./components/Login\";\n\n// Teachers\nimport TeacherDash from \"./components/TeacherDash\";\nimport StatisticsMain from \"./components/Teachers/Statistics/StatisticsMain\";\nimport ProfileMain from \"./components/Teachers/Profile/ProfileMain\";\nimport StudentsMain from \"./components/Teachers/Students/StudentsMain\";\nimport GroupsMain from \"./components/Teachers/Groups/GroupsMain\";\nimport GroupsPage from \"./components/Teachers/Groups/GroupsPage\";\nimport CoursesMain from \"./components/Teachers/Courses/CoursesMain\";\nimport CourseFullWizard from \"./components/Teachers/Courses/CourseFullWizard\";\nimport CourseEditWizard from \"./components/Teachers/Courses/CourseEditWizard\";\nimport AssignmentsMain from \"./components/Teachers/Assignments/AssignmentsMain\";\nimport MilestonesMain from \"./components/Teachers/Milestones/MilestonesMain\";\nimport ForumsMain from \"./components/Teachers/Forums/ForumsMain\";\nimport ArticlesMain from \"./components/Teachers/Articles/ArticlesMain\";\nimport MessagesMain from \"./components/Teachers/Messages/MessagesMain\";\nimport FileManagerMain from \"./components/Teachers/FileManager/FileManagerMain\";\nimport EventsMain from \"./components/Teachers/Events/EventsMain\";\nimport InvoicesMain from \"./components/Teachers/Invoices/InvoicesMain\";\nimport InvoiceView from \"./components/Teachers/Invoices/InvoiceView\";\nimport SettingsMain from \"./components/Teachers/Settings/SettingsMain\";\nimport TutorialsMain from \"./components/Teachers/Tutorials/TutorialsMain\";\nimport SupportMain from \"./components/Teachers/Support/SupportMain\";\n// Students\nimport StudentDash from \"./components/Students/StudentDash\";\nimport StudentProfileMain from \"./components/Students/Profile/StudentProfileMain\";\nimport StudentCoursesMain from \"./components/Students/Courses/StudentCoursesMain\";\nimport StudentCoursePreview from \"./components/Students/Courses/StudentCoursePreview\";\nimport StudentCourseLesson from \"./components/Students/Courses/StudentCourseLesson\";\nimport StudentCourseExercise from \"./components/Students/Courses/StudentCourseExercise\";\nimport StudentCourseQuiz from \"./components/Students/Courses/StudentCourseQuiz\";\n\nimport { BrowserRouter as Router, Link, Switch, Route } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  menuAction,\n  dashFullMenuAction,\n  dashMenuTextAction,\n} from \"./redux/actions\";\n\nimport \"./App.css\";\n\nexport default function App() {\n  const menuState = useSelector((state) => state.menuReducer);\n  const dashMenuState = useSelector((state) => state.dashFullMenuSwitchReducer);\n  const dashMenuTextState = useSelector(\n    (state) => state.dashMenuTextSwitchReducer\n  );\n  const accountTypeState = useSelector(\n    (state) => state.storeAccountTypeReducer\n  );\n\n  const dispatch = useDispatch();\n\n  const handleDashMenuText = () => {\n    dispatch(dashMenuTextAction());\n\n    const allTextObj = document.querySelectorAll(\".menuText\");\n    const allDashObj = document.querySelectorAll(\".dash\");\n    const allNavHeadings = document.querySelectorAll(\".menu-heading\");\n\n    if (dashMenuTextState) {\n      allTextObj.forEach((text) => {\n        text.classList.add(\"hide\");\n      });\n      allDashObj.forEach((dash) => {\n        dash.classList.remove(\"hide\");\n      });\n      allNavHeadings.forEach((head) => {\n        head.classList.add(\"hide\");\n      });\n    } else {\n      allTextObj.forEach((text) => {\n        text.classList.remove(\"hide\");\n      });\n      allDashObj.forEach((dash) => {\n        dash.classList.add(\"hide\");\n      });\n      allNavHeadings.forEach((head) => {\n        head.classList.remove(\"hide\");\n      });\n    }\n  };\n\n  return (\n    <Router>\n      <div id=\"keep-left\">\n        {/* Main */}\n        {accountTypeState.length < 1 ? (\n          <div>\n            {/* Main */}\n            <div id=\"mainMenu\">\n              {/* Menu */}\n              <div>\n                <button onClick={() => dispatch(menuAction())}>Menu</button>\n              </div>\n              {/* Nav */}\n              {menuState ? (\n                <div>\n                  <ul>\n                    <li>\n                      <Link to=\"/\">Home</Link>\n                    </li>\n                    <li>\n                      <Link to=\"/courses\">Courses</Link>\n                    </li>\n                    <li>\n                      <Link to=\"/plans\">Plans</Link>\n                    </li>\n                    <li>\n                      <Link to=\"/support\">Support</Link>\n                    </li>\n                    <li>\n                      <Link to=\"/contact\">Contact</Link>\n                    </li>\n                    <li>\n                      <Link to=\"/login\">Login</Link>\n                    </li>\n                  </ul>\n                </div>\n              ) : null}\n            </div>\n          </div>\n        ) : null}\n\n        {/* Teacher Main Menu */}\n        {accountTypeState === \"Teacher\" ? (\n          <div>\n            <div id=\"teacherMainMenu\">\n              <div>\n                <div>\n                  <img src=\"\" alt=\"\" />\n                  <h1>Musicademy</h1>\n                </div>\n                <div>\n                  <button onClick={handleDashMenuText}>\n                    {dashMenuTextState ? \"Hide\" : \"Show\"}\n                  </button>\n                </div>\n              </div>\n\n              <div>\n                <ul className=\"list-item\">\n                  <li>\n                    <Link to=\"/teacherdash\">\n                      <img src=\"\" alt=\"\" />\n                      <p className=\"menuText\">Dashboard</p>\n                    </Link>\n                  </li>\n                  <li>\n                    <Link to=\"/teacher-statistics\">\n                      <img src=\"\" alt=\"\" />\n                      <p className=\"menuText\">Statistics</p>\n                    </Link>\n                  </li>\n                  <li>\n                    <Link to=\"/teacher-profile\">\n                      <img src=\"\" alt=\"\" />\n                      <p className=\"menuText\">Profile</p>\n                    </Link>\n                  </li>\n                </ul>\n              </div>\n\n              <div>\n                <div>\n                  <h4 className=\"menu-heading\">MAIN</h4>\n                  {dashMenuTextState ? null : <h4 className=\"dash\">-</h4>}\n                </div>\n                <ul className=\"list-item\">\n                  <li>\n                    <Link to=\"/teacher-students\">\n                      <img src=\"\" alt=\"\" />\n                      <p className=\"menuText\">Students</p>\n                    </Link>\n                  </li>\n                  <li>\n                    <Link to=\"/teacher-groups\">\n                      <img src=\"\" alt=\"\" />\n                      <p className=\"menuText\">Groups</p>\n                    </Link>\n                  </li>\n                  <li>\n                    <Link to=\"/teacher-courses\">\n                      <img src=\"\" alt=\"\" />\n                      <p className=\"menuText\">Courses</p>\n                    </Link>\n                  </li>\n                  <li>\n                    <Link to=\"/teacher-assignments\">\n                      <img src=\"\" alt=\"\" />\n                      <p className=\"menuText\">Assignments</p>\n                    </Link>\n                  </li>\n                  <li>\n                    <Link to=\"/teacher-milestones\">\n                      <img src=\"\" alt=\"\" />\n                      <p className=\"menuText\">Milestones</p>\n                    </Link>\n                  </li>\n                  <li>\n                    <Link to=\"/teacher-forums\">\n                      <img src=\"\" alt=\"\" />\n                      <p className=\"menuText\">Forums</p>\n                    </Link>\n                  </li>\n                  <li>\n                    <Link to=\"/teacher-articles\">\n                      <img src=\"\" alt=\"\" />\n                      <p className=\"menuText\">Articles</p>\n                    </Link>\n                  </li>\n                </ul>\n              </div>\n\n              <div>\n                <div>\n                  <h4 className=\"menu-heading\">GENERAL</h4>\n                  {dashMenuTextState ? null : <h4 className=\"dash\">-</h4>}\n                </div>\n                <div>\n                  <ul className=\"list-item\">\n                    <li>\n                      <Link to=\"/teacher-messages\">\n                        <img src=\"\" alt=\"\" />\n                        <p className=\"menuText\">Messages</p>\n                      </Link>\n                    </li>\n                    <li>\n                      <Link to=\"/teacher-filemanager\">\n                        <img src=\"\" alt=\"\" />\n                        <p className=\"menuText\">File Manager</p>\n                      </Link>\n                    </li>\n                    <li>\n                      <Link to=\"/teacher-events\">\n                        <img src=\"\" alt=\"\" />\n                        <p className=\"menuText\">Events</p>\n                      </Link>\n                    </li>\n                    <li>\n                      <Link to=\"/teacher-invoices\">\n                        <img src=\"\" alt=\"\" />\n                        <p className=\"menuText\">Invoices</p>\n                      </Link>\n                    </li>\n                    <li>\n                      <Link to=\"/teacher-settings\">\n                        <img src=\"\" alt=\"\" />\n                        <p className=\"menuText\">Settings</p>\n                      </Link>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n\n              <div>\n                <div>\n                  <h4 className=\"menu-heading\">INFO</h4>\n                  {dashMenuTextState ? null : <h4 className=\"dash\">-</h4>}\n                </div>\n                <div>\n                  <ul className=\"list-item\">\n                    <li>\n                      <Link to=\"/teacher-tutorials\">\n                        <img src=\"\" alt=\"\" />\n                        <p className=\"menuText\">Tutorials</p>\n                      </Link>\n                    </li>\n                    <li>\n                      <Link to=\"/teacher-support\">\n                        <img src=\"\" alt=\"\" />\n                        <p className=\"menuText\">Support</p>\n                      </Link>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : null}\n\n        {/* Student Main Menu */}\n        {accountTypeState === \"Student\" ? (\n          <div>\n            <div id=\"studentMainMenu\">\n              <div>\n                <div>\n                  <img src=\"\" alt=\"\" />\n                  <h1>Musicademy</h1>\n                </div>\n                <div>\n                  <button onClick={handleDashMenuText}>\n                    {dashMenuTextState ? \"Hide\" : \"Show\"}\n                  </button>\n                </div>\n              </div>\n\n              <div>\n                <ul className=\"list-item\">\n                  <li>\n                    <Link to=\"/studentdash\">\n                      <img src=\"\" alt=\"\" />\n                      <p className=\"menuText\">Dashboard</p>\n                    </Link>\n                  </li>\n                  <li>\n                    <Link to=\"/student-statistics\">\n                      <img src=\"\" alt=\"\" />\n                      <p className=\"menuText\">Statistics</p>\n                    </Link>\n                  </li>\n                  <li>\n                    <Link to=\"/student-profile\">\n                      <img src=\"\" alt=\"\" />\n                      <p className=\"menuText\">Profile</p>\n                    </Link>\n                  </li>\n                </ul>\n              </div>\n\n              <div>\n                <div>\n                  <h4 className=\"menu-heading\">MAIN</h4>\n                  {dashMenuTextState ? null : <h4 className=\"dash\">-</h4>}\n                </div>\n                <ul className=\"list-item\">\n                  <li>\n                    <Link to=\"/student-connections\">\n                      <img src=\"\" alt=\"\" />\n                      <p className=\"menuText\">Connections</p>\n                    </Link>\n                    <Link to=\"/student-courses\">\n                      <img src=\"\" alt=\"\" />\n                      <p className=\"menuText\">Courses</p>\n                    </Link>\n                  </li>\n                </ul>\n              </div>\n\n              <div>\n                <div>\n                  <h4 className=\"menu-heading\">GENERAL</h4>\n                  {dashMenuTextState ? null : <h4 className=\"dash\">-</h4>}\n                </div>\n                <div>\n                  <ul className=\"list-item\">\n                    <li>\n                      <Link to=\"/teacher-messages\">\n                        <img src=\"\" alt=\"\" />\n                        <p className=\"menuText\">Messages</p>\n                      </Link>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n\n              <div>\n                <div>\n                  <h4 className=\"menu-heading\">INFO</h4>\n                  {dashMenuTextState ? null : <h4 className=\"dash\">-</h4>}\n                </div>\n                <div>\n                  <ul className=\"list-item\">\n                    <li>\n                      <Link to=\"/student-tutorials\">\n                        <img src=\"\" alt=\"\" />\n                        <p className=\"menuText\">Tutorials</p>\n                      </Link>\n                    </li>\n                    <li>\n                      <Link to=\"/student-support\">\n                        <img src=\"\" alt=\"\" />\n                        <p className=\"menuText\">Support</p>\n                      </Link>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : null}\n      </div>\n\n      <div id=\"keep-right\">\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n          <Route path=\"/courses\" exact>\n            <Courses />\n          </Route>\n          <Route path=\"/plans\">\n            <Plans />\n          </Route>\n          {/* Support Component */}\n          <Route path=\"/contact\">\n            <Contact />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n\n          {/* Teacher ************************************************** */}\n          <Route path=\"/teacherdash\">\n            <TeacherDash />\n          </Route>\n          <Route path=\"/teacher-statistics\">\n            <StatisticsMain />\n          </Route>\n          <Route path=\"/teacher-profile\">\n            <ProfileMain />\n          </Route>\n          <Route path=\"/teacher-students\">\n            <StudentsMain />\n          </Route>\n          {/* Groups */}\n          <Route path=\"/teacher-groups\">\n            <GroupsMain />\n          </Route>\n          <Route path=\"/teacher-group-page\">\n            <GroupsPage />\n          </Route>\n          {/* Courses */}\n          <Route path=\"/teacher-courses\">\n            <CoursesMain />\n          </Route>\n          <Route path=\"/teacher-courses-wizard-full\">\n            <CourseFullWizard />\n          </Route>\n          <Route path=\"/teacher-courses-wizard-edit\">\n            <CourseEditWizard />\n          </Route>\n          {/* Assignments */}\n          <Route path=\"/teacher-assignments\">\n            <AssignmentsMain />\n          </Route>\n          <Route path=\"/teacher-milestones\">\n            <MilestonesMain />\n          </Route>\n          <Route path=\"/teacher-forums\">\n            <ForumsMain />\n          </Route>\n          <Route path=\"/teacher-articles\">\n            <ArticlesMain />\n          </Route>\n          <Route path=\"/teacher-messages\">\n            <MessagesMain />\n          </Route>\n          <Route path=\"/teacher-filemanager\">\n            <FileManagerMain />\n          </Route>\n          <Route path=\"/teacher-events\">\n            <EventsMain />\n          </Route>\n          {/* Invoices */}\n          <Route path=\"/teacher-invoices\">\n            <InvoicesMain />\n          </Route>\n          <Route path=\"/teacher-invoice-view\">\n            <InvoiceView />\n          </Route>\n          <Route path=\"/teacher-settings\">\n            <SettingsMain />\n          </Route>\n          <Route path=\"/teacher-tustorials\">\n            <TutorialsMain />\n          </Route>\n          <Route path=\"/teacher-support\">\n            <SupportMain />\n          </Route>\n\n          {/* Student ******************************************************** */}\n          <Route path=\"/studentdash\">\n            <StudentDash />\n          </Route>\n          <Route path=\"/student-profile\">\n            <StudentProfileMain />\n          </Route>\n          <Route path=\"/student-courses\">\n            <StudentCoursesMain />\n          </Route>\n          <Route path=\"/student-course-preview\">\n            <StudentCoursePreview />\n          </Route>\n          <Route path=\"/student-course-lesson\">\n            <StudentCourseLesson />\n          </Route>\n          <Route path=\"/student-course-exercise\">\n            <StudentCourseExercise />\n          </Route>\n          <Route path=\"/student-course-quiz\">\n            <StudentCourseQuiz />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","import { combineReducers } from \"redux\";\n\n// Store Data\nconst courses = [\n  {\n    key: 1, // ****** Number gets higher as you make more ******\n    img: \"\", // Leave these blank\n    alt: \"\", // Leave these blank\n    name: \"Music Theory\",\n    desc:\n      \"Learn the fundamentals of Music Theory from Beginner, to Advanced (College Level).\", // Description of the course. Like a sales pitch.\n    price: \"$19.99\", // Just put random price\n    keywords: [\n      // These keywords are used for the search. Make sure they are one word at a time.\n      \"music\",\n      \"theory\",\n      \"key\",\n      \"signature\",\n      \"scales\",\n      \"chords\",\n      \"intervals\",\n    ],\n    num: 0, // Leave this number at 0 for each object\n  }, // Each object is enclosed in curly braces. To separate each, use a comma.\n  {\n    // Insert new course object here...\n  },\n];\n\n// Reducers\nexport const menuReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"SHOWHIDE\":\n      return !state;\n    default:\n      return state;\n  }\n};\n\nexport const courseSearchReducer = (state = [], action) => {\n  const filtered = [];\n  const copy = [...courses];\n\n  copy.forEach((c) => {\n    c.num = 0;\n  });\n\n  switch (action.type) {\n    case \"SEARCH_COURSE_KEYWORDS\":\n      let keywords = action.payload.toLowerCase().split(\" \");\n\n      for (let i = 0; i < keywords.length; i = i + 1) {\n        for (let a = 0; a < copy.length; a = a + 1) {\n          copy[a].keywords.forEach((courseKey) => {\n            if (keywords[i] === courseKey) {\n              copy[a].num += 1;\n            }\n          });\n        }\n      }\n\n      copy.sort((a, b) => (a.num > b.num ? 1 : -1));\n      copy.reverse();\n      copy.forEach((c) => {\n        if (c.num > 0) {\n          filtered.push(c);\n        }\n      });\n\n      state = filtered;\n      return state;\n\n    default:\n      return courses;\n  }\n};\n\nexport const trueFalseReducer = (state = true, action) => {\n  switch (action.type) {\n    case \"TRUEFALSE\":\n      return !state;\n    default:\n      return state;\n  }\n};\n\nexport const loginRegisterSwitchReducer = (state = \"login\", action) => {\n  switch (action.type) {\n    case \"LOGINSWITCH\":\n      console.log(action.payload);\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const isLoggedInReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"ISLOGGEDIN\":\n      return true;\n    default:\n      return state;\n  }\n};\n\nexport const dashFullMenuSwitchReducer = (state = true, action) => {\n  switch (action.type) {\n    case \"FULLMENUSWITCH\":\n      return !state;\n    default:\n      return state;\n  }\n};\n\nexport const dashMenuTextSwitchReducer = (state = true, action) => {\n  switch (action.type) {\n    case \"MENUTEXTSWITCH\":\n      return !state;\n    default:\n      return state;\n  }\n};\n\nexport const storeAccountTypeReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case \"storeAccountTypeAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeTeacherAuthIDReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case \"TEACHERAUTH\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeStudentAuthIDReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case \"storeStudentAuthIDAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\n// Teacher Stuffs *************************************************************************************************\n\nexport const userDataReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"USERDATA\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeTeacherAssignmentsGeneralInfoReducer = (\n  state = [],\n  action\n) => {\n  switch (action.type) {\n    case \"TEACHERASS\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeTeacherMilestonesGeneralInfoReducer = (\n  state = [],\n  action\n) => {\n  switch (action.type) {\n    case \"TEACHERMILE\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeTeacherForumsGeneralInfoReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"TEACHERFORUM\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeTeacherArticlesGeneralInfoReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"TEACHERART\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeTeacherMessagesGeneralInfoReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"TEACHERMESS\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeTeacherEventsGeneralInfoReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"TEACHEREVE\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeTeacherInvoicesGeneralInfoReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"TEACHERINV\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeTeacherSettingsGeneralInfoReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"TEACHERSET\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeTeacherProfileGeneralInfoReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"TEACHERPRO\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeTeacherStatisticsGeneralInfoReducer = (\n  state = [],\n  action\n) => {\n  switch (action.type) {\n    case \"TEACHERSTAT\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const statisticsObjectReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"STATOBJ\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\n// Profile Reducers\nexport const storeProfileFeedPostDataReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"storeProfileFeedPostDataAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeProfileFeedSinglePostDataReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"storeProfileFeedSinglePostDataAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeProfileAboutDataReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"storeProfileAboutDataAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeProfileExperienceDataReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"storeProfileExperienceDataAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const toggleNewExperienceFormReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"toggleNewExperienceFormAction\":\n      state = !state;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const toggleNewInstrumentFormReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"toggleNewInstrumentFormAction\":\n      state = !state;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeAwardListReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"storeAwardListAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeCertListReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"storeCertListAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const toggleNewAwardFormReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"toggleNewAwardFormAction\":\n      state = !state;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const toggleNewCertFormReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"toggleNewCertFormAction\":\n      state = !state;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeReviewListReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"storeReviewListAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\n// Student Reducers\nexport const storeTeacherStudentGeneralInfoReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"TEACHERSTUDENT\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const toggleStudentOverviewReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"toggleStudentOverviewAction\":\n      state = !state;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const toggleSearchUsernameReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"toggleSearchUsernameAction\":\n      state = !state;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const toggleSendRequestButtonReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"toggleSendRequestButtonAction\":\n      state = !state;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeNewStudentReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case \"storeNewStudentAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeSingleStudentInfoReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"storeSingleStudentInfoAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeTeacherStudentLessonsReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"storeTeacherStudentLessonsAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeTeacherStudentExercisesReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"storeTeacherStudentExercisesAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeTeacherStudentQuizzesReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"storeTeacherStudentQuizzesAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeTeacherStudentExamsReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"storeTeacherStudentExamsAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\n// Group Reducers\n\nexport const storeTeacherGroupGeneralInfoReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"TEACHERGROUP\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const toggleNewGroupFormReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"toggleNewGroupFormAction\":\n      state = !state;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeSingleGroupReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"storeSingleGroupAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeGroupFeedPostsReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"storeGroupFeedPostsAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeSingleGroupFeedPostReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"storeSingleGroupFeedPostAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeGroupMembersListReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"storeGroupMembersListAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const checkJoinedGroupStatusReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"checkJoinedGroupStatusAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const checkRequestedGroupStatusReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"checkRequestedGroupStatusAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\n// Course Reducers\nexport const storeTeacherCourseGeneralInfoReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"TEACHERCOURSE\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const toggleCourseFullWizardComponentReducer = (\n  state = \"lesson\",\n  action\n) => {\n  switch (action.type) {\n    case \"toggleCourseFullWizardComponentAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeShortOptionsReducer = (state = [\"Option 1\"], action) => {\n  switch (action.type) {\n    case \"storeShortOptionsAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const toggleExerciseTypeOptionReducer = (state = \"textual\", action) => {\n  switch (action.type) {\n    case \"toggleExerciseTypeOptionAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeCourseIDFullWizardReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case \"storeCourseIDFullWizardAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeLessonNameFullWizardReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case \"storeLessonNameFullWizardAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeQuizComponentsReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"storeQuizComponentsAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeExamQuizComponentsReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"storeExamQuizComponentsAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeSingleCourseReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"storeSingleCourseAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeSingleCourseLessonsReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"storeSingleCourseLessonsAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeSingleCourseExersReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"storeSingleCourseExersAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeSingleCourseQuizzesReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"storeSingleCourseQuizzesAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const toggleCourseTypeEditReducer = (state = \"lessons\", action) => {\n  switch (action.type) {\n    case \"toggleCourseTypeEditAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const toggleNewLessonFormReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"toggleNewLessonFormAction\":\n      state = !state;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const toggleEditLessonFormReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"toggleEditLessonFormAction\":\n      state = !state;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeLessonCountReducer = (state = 0, action) => {\n  switch (action.type) {\n    case \"storeLessonCountAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeSingleCourseLessonReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"storeSingleCourseLessonAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeSingleCourseExerReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"storeSingleCourseExerAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\n// Messages Reducers\nexport const storeTeacherMessagesReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"STORETEACHMESS\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeSingleThreadReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"STORESINGLETHREAD\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeCurrentMonthReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case \"STORECURRMONTH\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeSingleForumReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"STORESINGFORUM\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeSingleInvoiceReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"STORESINGINV\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeInvoiceServicesReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"STOREINVSERV\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\n// Student Stuffs ********************************************************************************************************\nexport const storeStudentUserDataReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"storeStudentUserDataAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\n// Profile\nexport const storeStudentProfileFeedPostsReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"storeStudentProfileFeedPostsAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeStudentProfileFeedPostReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"storeStudentProfileFeedPostAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeStudentAboutReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"storeStudentAboutAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeStudentExpReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"storeStudentExpAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const toggleNewExpFormReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"toggleNewExpFormAction\":\n      state = !state;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const toggleStudentNewInstrumentFormReducer = (\n  state = false,\n  action\n) => {\n  switch (action.type) {\n    case \"toggleStudentNewInstrumentFormAction\":\n      state = !state;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeStudentAwardsReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"storeStudentAwardsAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeStudentCertsReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"storeStudentCertsAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const toggleStudentNewAwardFormReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"toggleStudentNewAwardFormAction\":\n      state = !state;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const toggleStudentNewCertFormReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"toggleStudentNewCertFormAction\":\n      state = !state;\n      return state;\n    default:\n      return state;\n  }\n};\n\n// Courses\nexport const flagStudentTeacherConnectionReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"flagStudentTeacherConnectionAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeStudentTeacherListReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"storeStudentTeacherListAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeStudentCoursesReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"storeStudentCoursesAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeStudentSingleCourseReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"storeStudentSingleCourseAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const toggleStudentCourseLessonListReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"toggleStudentCourseLessonListAction\":\n      state = !state;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeStudentCourseLessonListReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"storeStudentCourseLessonListAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const toggleStudentCourseExerListReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"toggleStudentCourseExerListAction\":\n      state = !state;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeStudentCourseExerListReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"storeStudentCourseExerListAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const toggleStudentCourseQuizListReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"toggleStudentCourseQuizListAction\":\n      state = !state;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeStudentCourseQuizListReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"storeStudentCourseQuizListAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeCurrentCourseComponentReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"storeCurrentCourseComponentAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeStudentLessonQuestionResultReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case \"storeStudentLessonQuestionResultAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeStudentNextExerciseReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"storeStudentNextExerciseAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeStudentNextQuizReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"storeStudentNextQuizAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const toggleStudentQuizResultsReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"toggleStudentQuizResultsAction\":\n      state = !state;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeStudentQuizResultsReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"storeStudentQuizResultsAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const storeStudentNextLessonReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"storeStudentNextLessonAction\":\n      state = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\n// All Reducers\nexport const allReducers = combineReducers({\n  menuReducer,\n  courseSearchReducer,\n  trueFalseReducer,\n  loginRegisterSwitchReducer,\n  isLoggedInReducer,\n  dashFullMenuSwitchReducer,\n  dashMenuTextSwitchReducer,\n  storeAccountTypeReducer,\n  storeTeacherAuthIDReducer,\n  storeStudentAuthIDReducer,\n  // Teacher Reducers\n  storeTeacherStudentGeneralInfoReducer,\n  storeTeacherGroupGeneralInfoReducer,\n  storeTeacherCourseGeneralInfoReducer,\n  storeTeacherAssignmentsGeneralInfoReducer,\n  storeTeacherMilestonesGeneralInfoReducer,\n  storeTeacherForumsGeneralInfoReducer,\n  storeTeacherArticlesGeneralInfoReducer,\n  storeTeacherMessagesGeneralInfoReducer,\n  storeTeacherEventsGeneralInfoReducer,\n  storeTeacherInvoicesGeneralInfoReducer,\n  storeTeacherSettingsGeneralInfoReducer,\n  storeTeacherProfileGeneralInfoReducer,\n  storeTeacherStatisticsGeneralInfoReducer,\n  statisticsObjectReducer,\n  userDataReducer,\n  storeTeacherMessagesReducer,\n  storeSingleThreadReducer,\n  storeCurrentMonthReducer,\n  storeSingleForumReducer,\n  storeSingleInvoiceReducer,\n  storeInvoiceServicesReducer,\n  storeProfileFeedPostDataReducer,\n  storeProfileFeedSinglePostDataReducer,\n  storeProfileAboutDataReducer,\n  storeProfileExperienceDataReducer,\n  toggleNewExperienceFormReducer,\n  toggleNewInstrumentFormReducer,\n  storeAwardListReducer,\n  storeCertListReducer,\n  toggleNewAwardFormReducer,\n  toggleNewCertFormReducer,\n  storeReviewListReducer,\n  toggleStudentOverviewReducer,\n  toggleSearchUsernameReducer,\n  toggleSendRequestButtonReducer,\n  storeNewStudentReducer,\n  storeSingleStudentInfoReducer,\n  storeTeacherStudentLessonsReducer,\n  storeTeacherStudentExercisesReducer,\n  storeTeacherStudentQuizzesReducer,\n  storeTeacherStudentExamsReducer,\n  toggleNewGroupFormReducer,\n  storeSingleGroupReducer,\n  storeGroupFeedPostsReducer,\n  storeSingleGroupFeedPostReducer,\n  storeGroupMembersListReducer,\n  checkJoinedGroupStatusReducer,\n  checkRequestedGroupStatusReducer,\n  toggleCourseFullWizardComponentReducer,\n  storeShortOptionsReducer,\n  toggleExerciseTypeOptionReducer,\n  storeCourseIDFullWizardReducer,\n  storeLessonNameFullWizardReducer,\n  storeQuizComponentsReducer,\n  storeExamQuizComponentsReducer,\n  storeSingleCourseReducer,\n  storeSingleCourseLessonsReducer,\n  storeSingleCourseExersReducer,\n  storeSingleCourseQuizzesReducer,\n  toggleCourseTypeEditReducer,\n  toggleNewLessonFormReducer,\n  storeLessonCountReducer,\n  toggleEditLessonFormReducer,\n  storeSingleCourseLessonReducer,\n  storeSingleCourseExerReducer,\n\n  // Student Reducers\n  storeStudentUserDataReducer,\n  // Profile\n  storeStudentProfileFeedPostsReducer,\n  storeStudentProfileFeedPostReducer,\n  storeStudentAboutReducer,\n  storeStudentExpReducer,\n  toggleNewExpFormReducer,\n  toggleStudentNewInstrumentFormReducer,\n  storeStudentAwardsReducer,\n  storeStudentCertsReducer,\n  toggleStudentNewAwardFormReducer,\n  toggleStudentNewCertFormReducer,\n  // Courses\n  flagStudentTeacherConnectionReducer,\n  storeStudentTeacherListReducer,\n  storeStudentCoursesReducer,\n  storeStudentSingleCourseReducer,\n  toggleStudentCourseLessonListReducer,\n  storeStudentCourseLessonListReducer,\n  toggleStudentCourseExerListReducer,\n  storeStudentCourseExerListReducer,\n  toggleStudentCourseQuizListReducer,\n  storeStudentCourseQuizListReducer,\n  storeCurrentCourseComponentReducer,\n  storeStudentLessonQuestionResultReducer,\n  storeStudentNextExerciseReducer,\n  storeStudentNextQuizReducer,\n  toggleStudentQuizResultsReducer,\n  storeStudentQuizResultsReducer,\n  storeStudentNextLessonReducer,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport {allReducers} from './redux/reducers';\n\nconst store = createStore(allReducers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}